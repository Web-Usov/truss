{"version":3,"sources":["static/images/ogImage.png","static/images/icon.png","static/images/bridge.png","static/images/airBridge.png","static/images/fixation.svg","static/const.ts","utils/UI.ts","utils/history.ts","models/Truss/TTypes.ts","static/colors.ts","utils/math.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/index.ts","models/Truss/TEntity.ts","models/Truss/TBeam.ts","models/Truss/TCalc.ts","models/Truss/TNode.ts","models/Truss/Truss.ts","models/Truss/TFactory.ts","pages/Truss/components/UICalcData.tsx","components/appBar.tsx","components/Btns/btn.tsx","components/Btns/menuBtn.tsx","components/Btns/toggleBtn.tsx","components/dialogFull.tsx","components/sidebar.tsx","pages/Truss/components/UIEntityInfo.tsx","pages/Truss/actions/actionsList.ts","pages/Truss/actions/index.tsx","pages/Truss/components/UIFarm.tsx","pages/Truss/components/UIHeader.tsx","pages/Truss/components/UIToolPanel.tsx","pages/Truss/components/UITreePanel.tsx","pages/Truss/components/UITrussEntities/UIBeam.tsx","pages/Truss/components/UITrussEntities/UIGrid.tsx","pages/Truss/components/UITrussEntities/UINode.tsx","pages/Truss/components/UITrussEntities/UIStage.tsx","pages/Truss/TrussContainer.tsx","pages/Truss/index.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","__dirname","d","str","UI","canvas","img","path__WEBPACK_IMPORTED_MODULE_0__","path__WEBPACK_IMPORTED_MODULE_0___default","n","_images_ogImage_png__WEBPACK_IMPORTED_MODULE_1__","_images_ogImage_png__WEBPACK_IMPORTED_MODULE_1___default","_images_icon_png__WEBPACK_IMPORTED_MODULE_2__","_images_icon_png__WEBPACK_IMPORTED_MODULE_2___default","_images_bridge_png__WEBPACK_IMPORTED_MODULE_3__","_images_bridge_png__WEBPACK_IMPORTED_MODULE_3___default","_images_airBridge_png__WEBPACK_IMPORTED_MODULE_4__","_images_airBridge_png__WEBPACK_IMPORTED_MODULE_4___default","_images_fixation_svg__WEBPACK_IMPORTED_MODULE_5__","_images_fixation_svg__WEBPACK_IMPORTED_MODULE_5___default","url","process","title","description","favicon","path","resolve","cellSize","MMinCell","koefOfNewPos","nodeSize","beamSize","koefOnGrid","sidebarWidth","width","height","ogImage","bridgeIcon_1","bridgeIcon_2","airBridge","FixationIcon","UIModes","createBrowserHistory","NodeFixation","theme","createMuiTheme","palette","primary","dark","main","light","secondary","background","default","overrides","MuiTooltip","tooltip","fontSize","getNodeColor","node","isStatic","fixation","colors","fixedNode","staticNode","getNodeStorkeColor","mode","move","addBeam","addBeamStart","getNodeStorkeWidth","getBeamColor","beam","nodeMouseEnter","e","stage","target","getStage","delete","container","style","cursor","none","nodeMouseLeave","beamMouseEnter","beamMouseLeave","mainBackGround","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","y","a","b","rowsA","length","rowsB","colsA","colsB","result","Error","i","row","j","push","k","sum","MathJs","error","console","array","navPath","withStyles","createStyles","root","display","flexDirection","alignItems","justifyContent","logo","padding","descripton","btn","_ref","classes","react","className","src","alt","Typography","variant","align","Button","component","Link","to","size","color","Home","this","props","homeHeader","React","minHeight","spacing","TEntity","arguments","undefined","coord","id","name","dCoord","Object","classCallCheck","_id","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","uuid","_name","_coord","_dCoord","v","observable","computed","action","TBeam","_this","possibleConstructorReturn","getPrototypeOf","call","_entity","TBeam_descriptor","assertThisInitialized","TBeam_descriptor2","TBeam_descriptor3","_descriptor4","_descriptor5","startConnectedNode","endConnectedNode","endCoord","startForce","endForce","objectSpread","_startConnectedNode","_endConnectedNode","_endCoord","_startForce","_endForce","n1","n2","concat","l","lengthBePoints","TrussCalc","createClass","key","value","_init","asyncToGenerator","regenerator_default","mark","_callee","NodeCoord","NodeV","Forces","LinkNodes","LinkLength","area","ModUpr","Kmest","Lambda0","Lambda","Kobs","IndexV","G","K","Va","Vi","Vij","V","P","N_Link","N_Nodes","N_DOF","_args","wrap","_context","prev","next","modUpr","forEach","Kmest_i","l_i","Lambda_i","Kobs_i","IndexV_i","max","apply","toConsumableArray","map","getDetMatrix","SquareRoot","V_i","P_i","farmCalcDebug","log","abrupt","stop","_x","_x2","_x3","_x4","_x5","length_i","mnoz","nodeCoordOfX","nodeCoordOfY","LTxL","_LTxL","augmnet1","augment2","Array","prototype","_ref2","nodeV1","nodeV2","n_dof","indexV","k_obs","t","A","B","_a","_b","s","signum","abs","SDSsum","item","nodeV","vi","q","linkNodes","vij","n_start","n_ends","multMatrxiV2","TNode","TNode_descriptor","_forceX","_forceY","_isStatic","_fixation","beamsID","forceX","forceY","_beamsID","None","find","res","filter","flag","models_Truss_Truss","Truss","Truss_descriptor","Truss_descriptor2","Truss_descriptor3","sortByName","numsA","split","numA","Number","numsB","_nodes","Map","_beams","connectBeamToStartNode","bind","from","values","_calcData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","set","get","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","moveTo","nodes","nodesArray","sort","toString","moveEndTo","nodeID","beamID","connectStartNode","conncetBeam","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_findOldBeamByNode","connectEndNode","beams","checkingBeam","updateBeforeCalc","beamsArray","_nodeVindex","X","Y","YX","XY","nums","init","data","updateAfterCalc","sortNodesByCoord","_iterator4","_iteratorNormalCompletion4","_step4","toFixed","_iterator5","_iteratorNormalCompletion5","_step5","entity","has","includes","_node","removeBeam","clear","TrussFactory","_parse","nodesJSON","beamsJSON","nodesMap","beamsMap","JSON","parse","sent","truss","stringify","replace","_fixedNodes","_staticNodes","_n","useStyles","makeStyles","overflowX","paddingTop","table","minWidth","tableBox","marginBottom","UICalcData","observer","viewTable","head","rows","Paper","Table","viewHead","TableBody","viewBodyRow","Box","viewP","viewVi","cells","TableHead","TableRow","cell","TableCell","appBar","zIndex","drawer","marginRight","marginLeft","& img","children","position","_ref$withLogo","withLogo","AppBar","clsx","Toolbar","react_router_dom","viewLogo","Btn","_props$title","_props$icon","icon","_props$disabled","disabled","onClickToAction","todo","_props$fab","fab","_props$onlyIcon","onlyIcon","Tooltip","Fab","onClick","MenuBtn","_React$useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","handleClose","items","open","Boolean","aria-describedby","aria-haspopup","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","onMouseLeave","MenuList","MenuItem","handleItemClick","ListItemIcon","styles","borderRadius","border","fade","active","transition","transitions","create","duration","short","contrastText","backgroundColor","&$selected","&:hover","@media (hover: none)","&$disabled","selected","MyToggleButton","other","objectWithoutProperties","ToggleButton","assign","defineProperty","ToggleBtn","box","grey","flex","Transition","ref","Slide","direction","FullScreenDialog","Dialog","fullScreen","TransitionComponent","IconButton","edge","aria-label","Close_default","Sidebar","state","viewTooltip","switchDrawer","localState","localStorage","getItem","setState","setItem","_this2","_this$props","btnIcon","anchor","_this$state","Drawer","paper","drawerPaper","toolbar","Divider","onOpen","changeViewtooltip","left","right","toogleIcon","esm_Close","top","mixins","TextRow","text","TextRows","UIEntityInfo","UIEntityInfo_TextRow","_this$props$onDelete","onDelete","UIEntityInfo_TextRows","viewFixationInfo","btnGroup","Delete","_this$props2","_this$props2$onDelete","NodeInfo","BeamInfo","sidebar","Info","viewInfo","marginTop","HEADER","CANVAS","CLEAR","SAVE","CALC","DO","RESULT","TOOLS","TRUSS","headerMenu","SaveAlt","DeleteForever","Straighten","ViewList","toolsButtons","modsButtons","mod","ZoomOutMap","addNode","MyLocation","Power","actions","UITruss","stageHeight","stageWidth","uiMode","selectedEntityID","paintEntity","openModal","UIonClick","UIonDrag","UIonMouseMove","onKeyHandle","selectEntity","deleteEntity","clearFarm","saveFarm","calculate","handleBtnClick","modalStateChange","current","attrs","parentElement","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","calculation","isEmptyPlace","evt","preventDefault","button","_e$evt","layerX","layerY","cellX","cellY","connectedBeam","connectBeamToNode","_this$state2","_e$evt2","moveEndBeam","defaultPrevented","_e$evt3","moveNode","deletePaintEntity","window","confirm","clearTruss","cacheTruss","farm","calcData","components_UICalcData","_this$state3","calculated","selectedEntity","react_stats","isActive","esm","keyEventName","keyValue","components_UIHeader","stageBox","components_UITreePanel","onSelect","UITrussEntities_UIStage","onDrag","onMouseMove","viewNewPos","components_UIEntityInfo","components_UIToolPanel","setSelectedMode","viewDialogs","overflow","flexGrow","grow","_ref$onClick","_ref$disabled","m","bottom","transform","modsBtnGroup","verticalAlign","vHr","opacity","ToggleButtonGroup","exclusive","onChange","UITreePanel","tabs","openTab","viewListItem","tab","entityArray","_this$props$selectedE","_this$props$onSelect","ListItem","Badge","badgeContent","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","nested","Brightness1","_this$props2$nodes","_this$props2$beams","esm_List","GpsNotFixed","Timeline","paddingLeft","UIBeam","_ref$mode","_ref$selected","_ref$viewNewPos","points","dEndCoord","ReactKonva","stroke","strokeWidth","shadowBlur","hitStrokeWidth","onMouseEnter","heightBox","heightCell","widthBox","widthCell","countOfX","countOfY","columns","index","viewColumns","viewRows","UINode","_ref$drag","drag","viewForce","angle","pointerLength","pointerWidth","rotation","viewFixation","radius","fill","_useStrictMode","fontFamily","onDragEnd","draggable","onDragMove","UIStage","lib_default","autoHide","UITrussEntities_UIGrid","UITrussEntities_UIBeam","UITrussEntities_UINode","boxShadow","shadows","TrussContainer","TrussContainer_class","_React$Component","nodesCacheName","beamsCacheName","options","message","alert","_y","_beam","moveEndBeamWhileDraving","place","connectBeamToEndNode","t0","setDefaultTruss","loadFromCache","loadTrussFromCache","_truss","genTruss","setNodes","firstPlacement","_TrussFactory$toStrin","_callee2","_ref3","_context2","setBeams","_callee3","_context3","removeItem","inherits","UIFarm","createNodes","App","Helmet_default","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","exact","TrussPage","ReactDOM","render","react_default","createElement","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.249eff16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";","module.exports = __webpack_public_path__ + \"static/media/fixation.9b63597e.svg\";","// import favicon from './images/favicon.ico'\r\nimport path from 'path'\r\nimport ogImage from './images/ogImage.png'\r\nimport bridgeIcon_1 from './images/icon.png'\r\nimport bridgeIcon_2 from './images/bridge.png'\r\nimport airBridge from './images/airBridge.png'\r\nimport FixationIcon from './images/fixation.svg'\r\n\r\n// Strings\r\nexport const str = {\r\n    url: process.env.PUBLIC_URL,\r\n    title: \"Truss - ферма для каждого\",\r\n    description: \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\",\r\n    favicon: path.resolve(__dirname, \"favicon.ico\")\r\n}\r\n\r\n// UI\r\nexport const UI = {\r\n    cellSize: 45,\r\n    MMinCell: 200,\r\n    koefOfNewPos:100,\r\n    nodeSize: 0,\r\n    beamSize: 0,\r\n    koefOnGrid: 0,\r\n    sidebarWidth: 240,\r\n\r\n}\r\nUI.nodeSize = UI.cellSize / 3\r\nUI.beamSize = UI.cellSize / 7\r\nUI.koefOnGrid = UI.MMinCell / UI.cellSize\r\n\r\nexport const canvas = {\r\n    width: 2500,\r\n    height: 1500\r\n}\r\n\r\n\r\n// Images\r\nexport const img = {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge,\r\n    FixationIcon\r\n}","import { createMuiTheme } from \"@material-ui/core\";\r\nimport Konva from \"konva\";\r\nimport { Stage } from \"konva/types/Stage\";\r\nimport { TBeam, TNode } from \"src/models/Truss\";\r\nimport { colors } from \"src/static\";\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark: \"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light: '#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\",\r\n            // light:\"#f0965d\"\r\n        },\r\n        background: {\r\n            default: 'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }\r\n\r\n    },\r\n    overrides: {\r\n        MuiTooltip: {\r\n            tooltip: {\r\n                fontSize: 14\r\n            }\r\n        },\r\n    }\r\n});\r\nexport const getNodeColor = (node: TNode): string => {\r\n\r\n    if (node.isStatic) {\r\n        if (node.fixation) return colors.fixedNode\r\n        return colors.staticNode\r\n    }\r\n    return colors.node\r\n}\r\nexport const getNodeStorkeColor = (node: TNode, mode: UIModes): string => {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return theme.palette.secondary.dark\r\n            return theme.palette.primary.light\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return theme.palette.primary.light\r\n        }\r\n        default:\r\n            return theme.palette.secondary.main\r\n    }\r\n}\r\nexport const getNodeStorkeWidth = (node: TNode, mode: UIModes): number => {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return 0\r\n            return 2\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return 2\r\n        }\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\nexport const getBeamColor = (beam: TBeam): string => {\r\n    return colors.beam\r\n}\r\n\r\n\r\nexport const nodeMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, node: TNode, mode: UIModes): void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break;\r\n        }\r\n\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            stage.container().style.cursor = 'crosshair'\r\n            break\r\n        }\r\n        case UIModes.move: {\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'move'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n}\r\nexport const nodeMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>): void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}\r\n\r\nexport const beamMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, beam: TBeam, mode: UIModes): void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break\r\n        }\r\n    }\r\n\r\n}\r\nexport const beamMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>): void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import TBeam from \"./TBeam\";\r\nimport TNode from \"./TNode\";\r\n\r\n\r\nexport interface ITEntity {\r\n    id?: string\r\n    coord?: ICoord\r\n    name?: string\r\n    dCoord?: ICoord\r\n    withNewPosition?: boolean\r\n}\r\n\r\nexport interface ITNode extends ITEntity {\r\n    beamsID?: string[]\r\n    forceX?: number\r\n    forceY?: number,\r\n    isStatic?: boolean,\r\n    fixation?: NodeFixation\r\n}\r\n\r\nexport interface ITBeam extends ITEntity {\r\n    startConnectedNode?: TNode\r\n    endConnectedNode?: TNode\r\n    endCoord?: ICoord\r\n    startForce?: number,\r\n    endForce?: number\r\n}\r\n\r\n\r\nexport interface ITruss {\r\n    nodes: Map<string, TNode>\r\n    beams: Map<string, TBeam>\r\n}\r\nexport interface ITrussArray {\r\n    nodes: TNode[]\r\n    beams: TBeam[]\r\n}\r\n\r\nexport interface ICoord {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport enum NodeFixation {\r\n    None = 0,\r\n    X = 1,\r\n    Y = 2,\r\n    XY = 3,\r\n    YX = XY\r\n}\r\n\r\nexport interface TrussCalcProps {\r\n    area?: number,\r\n    modUpr?: number,\r\n    zKoef?: number\r\n}\r\nexport type TrussCalcData = {\r\n    P: number[][][],\r\n    Vi: ICoord[],\r\n    LinkNodes: ICoord[],\r\n    G: number\r\n}\r\n\r\nexport interface IFixedNodeCreate extends ICoord {\r\n    fixation: NodeFixation\r\n}\r\nexport interface IStaticNodeCreate extends ICoord {\r\n    forceX?: number\r\n    forceY?: number\r\n}\r\nexport interface ISimpleNodeCreate extends ICoord {\r\n\r\n}","import { theme } from \"src/utils/UI\";\r\n\r\nexport const mainBackGround = \"#09B4D3\"\r\n\r\nexport const node = theme.palette.secondary.main\r\nexport const staticNode = theme.palette.secondary.dark\r\nexport const fixedNode = theme.palette.secondary.dark\r\n\r\nexport const beam = theme.palette.secondary.light","import { consts } from \"src/static\";\r\nimport * as MathJs from 'mathjs'\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1: number, y1: number, x2: number, y2: number): number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n\r\n    static lengthBePoints(x1: number, y1: number, x2: number, y2: number): number {\r\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x: number): number {\r\n        return Math.round(x / consts.UI.cellSize) * consts.UI.cellSize\r\n    }\r\n    static cellY(y: number): number {\r\n        return Math.round(y / consts.UI.cellSize) * consts.UI.cellSize\r\n    }\r\n    static signum(x: number) {\r\n        if (x > 0) return 1\r\n        else if (x < 0) return -1\r\n        else return 0\r\n    }\r\n    static multMatrxi(a: number[][], b: number[][]) {\r\n        const rowsA = a.length\r\n        const rowsB = b.length\r\n        const colsA = a[0].length\r\n        const colsB = b[0].length\r\n        const result: number[][] = []\r\n        if (colsA !== rowsB) throw new Error(\"Размерность матриц не позволяет переумножить их\")\r\n\r\n        for (let i = 0; i < rowsA; i++) {\r\n            const row: number[] = []\r\n            for (let j = 0; j < colsB; j++) {\r\n                row.push(0)\r\n            }\r\n            result.push(row)\r\n        }\r\n        for (let k = 0; k < colsB; k++) {\r\n            for (let i = 0; i < rowsA; i++) {\r\n                let sum = 0\r\n                for (let j = 0; j < rowsB; j++)\r\n                    sum += a[i][j] + b[j][k]\r\n                result[i][k] = sum\r\n            }\r\n        }\r\n        // console.log(result);\r\n        return result\r\n\r\n    }\r\n    static multMatrxiV2(a: number[][], b: number[][]) : number[][]{\r\n        let result: number[][] = []\r\n        try {\r\n            result = (MathJs.multiply(a,b) as number[][])\r\n            \r\n        } catch (error) {\r\n            console.error(\"multMatrxiV2:\", error);\r\n        }        \r\n        return result\r\n    }\r\n    static getDetMatrix(array:number[][]) : number{\r\n        const d = MathJs.det(array)        \r\n        return d\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    TRUSS_PAGE: '/app'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"20%\",\r\n\t\theight: '20%'\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({ classes }: WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={consts.img.bridgeIcon_2}\r\n\t\t\t\talt=\"logo\"\r\n\t\t\t\tclassName={classes.logo}\r\n\t\t\t/>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.str.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.str.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.TRUSS_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\twidth:'100%',\r\n\t\tminHeight:'100%',\r\n\t\tdisplay:'block',\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import Home from './home'\r\n\r\nexport default Home","import { action, computed, observable } from 'mobx';\r\nimport uuid from 'uuid';\r\nimport { ICoord, ITEntity } from './TTypes';\r\n\r\nabstract class TEntity {\r\n    private _id: string\r\n    public get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    @observable private _coord: ICoord\r\n    @computed public get coord(): ICoord {\r\n        return this._coord;\r\n    }\r\n\r\n    @observable private _name: string\r\n    @computed public get name(): string {\r\n        return this._name;\r\n    }\r\n    public set name(v: string) {\r\n        this._name = v;\r\n    }\r\n\r\n    @observable private _dCoord: ICoord\r\n    @computed public get dCoord(): ICoord {\r\n        return this._dCoord;\r\n    }\r\n    public set dCoord(v: ICoord) {\r\n        this._dCoord = v;\r\n    }\r\n\r\n    constructor({ coord, id, name, dCoord}: ITEntity = {}) {\r\n        this._id = id || uuid()\r\n        this._name = name || this._id\r\n        this._coord = coord || { x: 0, y: 0 }\r\n        this._dCoord = dCoord || { x: 0, y: 0 }\r\n    }\r\n\r\n    @action moveTo(x: number, y: number) {\r\n        this._coord.x = x\r\n        this._coord.y = y\r\n    }\r\n}\r\n\r\nexport default TEntity","import { action, computed, observable } from \"mobx\";\r\nimport { MyMath } from \"src/utils\";\r\nimport TEntity from \"./TEntity\";\r\nimport TNode from \"./TNode\";\r\nimport { ICoord, ITBeam } from \"./TTypes\";\r\n\r\nclass TBeam extends TEntity {\r\n    private _entity: TEntity\r\n\r\n    @observable private _startConnectedNode: TNode | null;\r\n    @computed public get startConnectedNode(): TNode | null {\r\n        return this._startConnectedNode;\r\n    }\r\n\r\n    @observable private _endConnectedNode: TNode | null;\r\n    @computed public get endConnectedNode(): TNode | null {\r\n        return this._endConnectedNode;\r\n    }\r\n    // Coord \r\n    @computed public get coord(): ICoord {\r\n        if (this._startConnectedNode) {\r\n            return this._startConnectedNode.coord\r\n        } else {\r\n            return this._entity.coord\r\n        }\r\n    }\r\n\r\n    @observable private _endCoord: ICoord;\r\n    @computed public get endCoord(): ICoord {\r\n        if (this._endConnectedNode) {\r\n            return this._endConnectedNode.coord\r\n        } else return this._endCoord\r\n    }\r\n\r\n    @computed public get dCoord(): ICoord {\r\n        if (this._startConnectedNode) {\r\n            return this._startConnectedNode.dCoord\r\n        } else return this._entity.dCoord\r\n    }\r\n\r\n    @computed public get dEndCoord(): ICoord {\r\n        if (this._endConnectedNode) {\r\n            return this._endConnectedNode.dCoord\r\n        } else return this._entity.dCoord\r\n    }\r\n    // # Coord \r\n\r\n\r\n    @observable private _startForce: number;\r\n    @computed public get startForce(): number {\r\n        return this._startForce;\r\n    }\r\n    public set startForce(v: number) {\r\n        this._startForce = v;\r\n    }\r\n\r\n\r\n    @observable private _endForce: number;\r\n    @computed public get endForce(): number {\r\n        return this._endForce;\r\n    }\r\n    public set endForce(v: number) {\r\n        this._endForce = v;\r\n    }\r\n\r\n    @computed public get name() {\r\n        if (this._startConnectedNode && this._endConnectedNode) {\r\n            const n1 = this._startConnectedNode.name\r\n            const n2 = this._endConnectedNode.name\r\n            if (n1 < n2) return `${n1} - ${n2}`\r\n            else return `${n2} - ${n1}`\r\n        } else return \"...\"\r\n    }\r\n\r\n    constructor(props: ITBeam = {}) {\r\n        super(props)\r\n        const { dCoord, startConnectedNode, endConnectedNode, coord, endCoord,  startForce, endForce } = props\r\n        this._entity = {\r\n            ...this,\r\n            coord: coord || { x: 0, y: 0 },\r\n            dCoord: dCoord || { x: 0, y: 0 }\r\n        }\r\n        this._startConnectedNode = startConnectedNode || null\r\n        this._endConnectedNode = endConnectedNode || null\r\n        this._endCoord = endCoord || this.coord\r\n        this._startForce = startForce || 0\r\n        this._endForce = endForce || 0\r\n\r\n    }\r\n\r\n    @action public connectStartNode(node: TNode) {\r\n        this._startConnectedNode = node\r\n    }\r\n    @action public connectEndNode(node: TNode) {\r\n        this._endConnectedNode = node\r\n    }\r\n    @action public removeStartNode() {\r\n        this._startConnectedNode = null\r\n    }\r\n    @action public removeEndNode() {\r\n        this._endConnectedNode = null\r\n    }\r\n    @action public moveTo(x: number, y: number) {\r\n        if (this._startConnectedNode) return\r\n        this.coord.x = x\r\n        this.coord.y = y\r\n    }\r\n    @action public moveEndTo(x: number, y: number) {\r\n        if (this._endConnectedNode) return\r\n        this._endCoord.x = x\r\n        this._endCoord.y = y\r\n    }\r\n    @computed public get length() {\r\n        const l = MyMath.lengthBePoints(this.coord.x, this.coord.y, this.endCoord.x, this.endCoord.y)\r\n        return Math.round(l)\r\n    }\r\n}\r\n\r\nexport default TBeam","import { MyMath } from \"src/utils\";\r\nimport { ICoord, TrussCalcData, TrussCalcProps } from \"./TTypes\";\r\n\r\nexport class TrussCalc {\r\n\r\n    private static farmCalcDebug = process.env.REACT_APP_FARM_CALC_DEBUG === \"true\" || true\r\n    static async init(NodeCoord: ICoord[], NodeV: ICoord[], Forces: number[], LinkNodes: ICoord[], LinkLength: number[], props: TrussCalcProps = {}): Promise<TrussCalcData> {\r\n\r\n        const area: number = props.area || 225 //Площадь стержней\r\n        const ModUpr: number = props.modUpr || 72000 // Модуль упругости \r\n\r\n        const Kmest: number[][][] = [] // Матрица жесткости\r\n        const Lambda0: ICoord[] = []\r\n        const Lambda: number[][][] = []\r\n        const Kobs: number[][][] = []\r\n        const IndexV: number[][] = []\r\n        let G: number\r\n\r\n        let K: number[][] = []\r\n        let Va: number[] = []\r\n        let Vi: ICoord[] = []\r\n        let Vij: number[][][] = []\r\n        let V: number[][][] = []\r\n        let P: number[][][] = []\r\n\r\n        LinkNodes.forEach((beam, i) => {\r\n            Kmest.push(this.Kmest_i(area, ModUpr, LinkLength[i]))\r\n\r\n            const l_i = this.Lambda_i(NodeCoord[LinkNodes[i].x], NodeCoord[LinkNodes[i].y], LinkLength[i])\r\n            Lambda0.push(l_i)\r\n            Lambda.push([\r\n                [l_i.x, l_i.y, 0, 0],\r\n                [0, 0, l_i.x, l_i.y]\r\n            ])\r\n            Kobs.push(this.Kobs_i(area, ModUpr, LinkLength[i], Lambda0[i]))\r\n            IndexV.push(this.IndexV_i(NodeV[LinkNodes[i].x], NodeV[LinkNodes[i].y]))\r\n        })\r\n\r\n        const N_Link = LinkNodes.length\r\n        const N_Nodes = NodeV.length\r\n        const N_DOF = Math.max(...NodeV.map(({ x, y }) => Math.max(x, y)))\r\n\r\n        K = this.K(N_DOF, IndexV, Kobs)\r\n\r\n        if (MyMath.getDetMatrix(K) < 1000) throw Error(\"Данная конструкция (статически неопределимая) является механизмом\")\r\n\r\n        Va = this.SquareRoot(K, Forces)\r\n        Vi = this.Vi(NodeV, Va)\r\n        Vij = this.Vij(LinkNodes, Vi)\r\n\r\n        for (let i = 0; i < N_Link; i++) {\r\n            V.push(this.V_i(Lambda[i], Vij[i]))\r\n            P.push(this.P_i(Kmest[i], V[i]))\r\n        }\r\n\r\n        if (this.farmCalcDebug) {\r\n            console.log(\"NodeCoord, LinkNodes, NodeV\", NodeCoord, LinkNodes, NodeV);\r\n            console.log(\"Kobs, Kmest\", Kobs, Kmest);\r\n            console.log(\"Lambda0, Lambda,\", Lambda0, Lambda);\r\n            console.log(\"IndexV\", IndexV);\r\n            console.log(\"N_Link, N_Nodes, N_DOF\", N_Link, N_Nodes, N_DOF);\r\n            console.log(\"K, Force\", K, Forces);\r\n            console.log(\"Va\", Va);\r\n            console.log(\"Vi\", Vi);\r\n            console.log(\"Vij\", Vij);\r\n            console.log(\"V\", V);\r\n            console.log(\"P\", P);\r\n        }\r\n        G = this.G(LinkLength, P)\r\n        return { P, LinkNodes, Vi, G }\r\n    }\r\n\r\n    private static Kmest_i(area: number, modUpr: number, length_i: number) {\r\n        const mnoz = (area * modUpr) / length_i\r\n        const result = []\r\n        result.push([mnoz, -mnoz])\r\n        result.push([-mnoz, mnoz])\r\n        return result\r\n    }\r\n    private static Lambda_i(nodeCoordOfX: ICoord, nodeCoordOfY: ICoord, length_i: number): ICoord {\r\n        const l_x = (nodeCoordOfY.x - nodeCoordOfX.x) / length_i\r\n        const l_y = (nodeCoordOfY.y - nodeCoordOfX.y) / -length_i\r\n        return { x: l_x, y: l_y }\r\n    }\r\n    private static Kobs_i(area: number, modUpr: number, length_i: number, l_i: ICoord) {\r\n        const mnoz = (area * modUpr) / length_i\r\n        const LTxL: ICoord[] = [{ x: l_i.x * l_i.x, y: l_i.x * l_i.y }, { x: l_i.x * l_i.y, y: l_i.y * l_i.y }]\r\n        const _LTxL: ICoord[] = [{ x: -l_i.x * l_i.x, y: -l_i.x * l_i.y }, { x: -l_i.x * l_i.y, y: -l_i.y * l_i.y }]\r\n        const augmnet1 = []\r\n        const augment2 = []\r\n        for (let i = 0; i < 2; i++) {\r\n            augmnet1.push({ x1: LTxL[i].x, y1: LTxL[i].y, x2: _LTxL[i].x, y2: _LTxL[i].y })\r\n            augment2.push({ x1: _LTxL[i].x, y1: _LTxL[i].y, x2: LTxL[i].x, y2: LTxL[i].y })\r\n        }\r\n        const stack: { x1: number, y1: number, x2: number, y2: number }[] = Array.prototype.concat(augmnet1, augment2)\r\n        const result = stack.map(({ x1, y1, x2, y2 }) => ([\r\n            x1 * mnoz,\r\n            y1 * mnoz,\r\n            x2 * mnoz,\r\n            y2 * mnoz\r\n        ]))\r\n        return result\r\n\r\n    }\r\n    private static IndexV_i(nodeV1: ICoord, nodeV2: ICoord): number[] {\r\n        return [\r\n            nodeV1.x,\r\n            nodeV1.y,\r\n            nodeV2.x,\r\n            nodeV2.y\r\n        ]\r\n    }\r\n    private static K(n_dof: number, indexV: number[][], k_obs: number[][][]) {\r\n        const K: number[][] = []\r\n\r\n        for (let t = 0; t < n_dof; t++) {\r\n            const row: number[] = []\r\n            for (let r = 0; r < n_dof; r++) {\r\n                row.push(0)\r\n            }\r\n            K.push(row)\r\n        }\r\n\r\n        for (let e = 0; e < indexV.length; e++) {\r\n            for (let i = 0; i < 4; i++) {\r\n                const A = indexV[e][i]\r\n                if (A !== 0)\r\n                    for (let j = 0; j < 4; j++) {\r\n                        const B = indexV[e][j]\r\n                        if (B !== 0)\r\n                            K[B - 1][A - 1] = K[B - 1][A - 1] + k_obs[e][i][j]\r\n                    }\r\n\r\n            }\r\n        }\r\n        return K\r\n    }\r\n    private static SquareRoot(_a: number[][], _b: number[]) {\r\n        if (_a.length !== _b.length) {\r\n            throw Error(\"SquareRoot - Массивы должны быть одинаковой длины\")\r\n        }\r\n\r\n        const n = _b.length\r\n        const a: number[][] = []\r\n        const b: number[] = []\r\n        const x: number[] = []\r\n        const d: number[] = []\r\n        const s: number[][] = []\r\n        const y: number[] = []\r\n\r\n        for (let i = 0; i < n + 1; i++) {\r\n            const row: number[] = []\r\n            for (let r = 0; r < n; r++) {\r\n                row.push(0)\r\n            }\r\n            s.push(row)\r\n            a.push(row)\r\n            b.push(0)\r\n            x.push(0)\r\n            d.push(0)\r\n            y.push(0)\r\n        }\r\n\r\n        for (let j = 1; j <= n; j++) {\r\n            for (let r = 0; r <= n; r++) {\r\n                a[j][r] = _a[j - 1][r - 1]\r\n            }\r\n            b[j] = _b[j - 1]\r\n        }\r\n\r\n        d[1] = MyMath.signum(a[1][1]);\r\n        s[1][1] = Math.sqrt(Math.abs(a[1][1]));\r\n        for (let j = 2; j <= n; j++) {\r\n            s[1][j] = a[1][j] / (s[1][1] * d[1]);\r\n        }\r\n\r\n        for (let i = 2; i <= n; i++) {\r\n            let sum = 0;\r\n            for (let k = 1; k <= i - 1; k++) {\r\n                sum += s[k][i] * s[k][i] * d[k];\r\n            }\r\n            d[i] = MyMath.signum(a[i][i] - sum);\r\n            s[i][i] = Math.sqrt(Math.abs(a[i][i] - sum));\r\n\r\n            const l = 1 / (s[i][i] * d[i]);\r\n            for (let j = i + 1; j <= n; j++) {\r\n                let SDSsum = 0;\r\n                for (let k = 1; k <= i - 1; k++) {\r\n                    SDSsum += s[k][i] * d[k] * s[k][j];\r\n                }\r\n                s[i][j] = l * (a[i][j] - SDSsum);\r\n            }\r\n        }\r\n\r\n        y[1] = b[1] / (s[1][1] * d[1]);\r\n\r\n        for (let i = 2; i <= n; i++) {\r\n            let sum = 0;\r\n\r\n            for (let j = 1; j <= i - 1; j++) {\r\n                sum += s[j][i] * d[j] * y[j];\r\n            }\r\n\r\n            y[i] = (b[i] - sum) / (s[i][i] * d[i]);\r\n        }\r\n\r\n        x[n] = y[n] / s[n][n];\r\n\r\n        for (let i = n - 1; i >= 1; i--) {\r\n            let sum = 0;\r\n\r\n            for (let k = i + 1; k <= n; k++) {\r\n                sum += s[i][k] * x[k];\r\n            }\r\n\r\n            x[i] = (y[i] - sum) / s[i][i];\r\n        }\r\n\r\n        const result: number[] = []\r\n        x.forEach((item, i) => {\r\n            if (i !== 0) result.push(item)\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    private static Vi(nodeV: ICoord[], Va: number[]) {\r\n        const vi: ICoord[] = []\r\n        for (let e = 0; e < nodeV.length; e++) {\r\n            const q: ICoord = { ...nodeV[e] }\r\n            q.x = q.x === 0 ? 0 : Va[q.x - 1]\r\n            q.y = q.y === 0 ? 0 : Va[q.y - 1]\r\n            vi.push(q)\r\n        }\r\n        return vi\r\n    }\r\n    private static Vij(linkNodes: ICoord[], vi: ICoord[]) {\r\n        const vij: number[][][] = []\r\n        for (let e = 0; e < linkNodes.length; e++) {\r\n            const n_start = linkNodes[e].x\r\n            const n_ends = linkNodes[e].y\r\n\r\n            vij.push([\r\n                [vi[n_start].x],\r\n                [vi[n_start].y],\r\n                [vi[n_ends].x],\r\n                [vi[n_ends].y],\r\n            ])\r\n        }\r\n        return vij\r\n    }\r\n    private static V_i(l: number[][], vij: number[][]) {\r\n        const v: number[][] = MyMath.multMatrxiV2(l, vij)\r\n        return v\r\n    }\r\n    private static P_i(k: number[][], v: number[][]) {\r\n        const p: number[][] = MyMath.multMatrxiV2(k, v)\r\n        return p\r\n    }\r\n    private static G(LinkLength: number[], p: number[][][]): number {\r\n        let sum = 0\r\n        LinkLength.forEach((b, i) => {\r\n            sum += b * Math.abs(p[i][0][0])\r\n        })\r\n        return sum\r\n    }\r\n}\r\nexport default TrussCalc","import TEntity from \"./TEntity\";\r\nimport { ITNode, NodeFixation } from \"./TTypes\";\r\nimport { observable, action, computed } from \"mobx\";\r\n\r\nclass TNode extends TEntity {\r\n    @observable private _beamsID: string[];\r\n    @computed public get beams(): string[] {\r\n        return this._beamsID;\r\n    }\r\n\r\n    private _forceX: number;\r\n    public get forceX(): number {\r\n        return this._forceX;\r\n    }\r\n    public set forceX(v: number) {\r\n        this._forceX = v\r\n    }\r\n\r\n    private _forceY: number;\r\n    public get forceY(): number {\r\n        return this._forceY;\r\n    }\r\n    public set forceY(v: number) {\r\n        this._forceY = v\r\n    }\r\n\r\n    private _isStatic: boolean;\r\n    public get isStatic(): boolean {\r\n        return this._isStatic;\r\n    }\r\n\r\n    private _fixation: NodeFixation;\r\n    public get fixation(): NodeFixation {\r\n        return this._fixation;\r\n    }\r\n\r\n\r\n    constructor(props: ITNode = {}) {\r\n        super(props)\r\n        const { beamsID, forceX, forceY, isStatic, fixation } = props\r\n        this._beamsID = beamsID || []\r\n        this._forceX = forceX || 0\r\n        this._forceY = forceY || 0\r\n        this._isStatic = isStatic || false\r\n        this._fixation = fixation || NodeFixation.None\r\n    }\r\n\r\n    @action public conncetBeam(id: string): boolean {\r\n        if (this._beamsID.find(b => b === id)) return false\r\n        this._beamsID.push(id)\r\n        return true\r\n    }\r\n\r\n    @action public removeBeam(id: string): boolean {\r\n        let res = false\r\n        this._beamsID = this._beamsID.filter(b => {\r\n            const flag = b !== id\r\n            if (!flag) res = true\r\n            return flag\r\n        })\r\n        return res\r\n    }\r\n}\r\n\r\nexport default TNode","import { action, computed, observable } from \"mobx\";\r\nimport { TEntity } from \".\";\r\nimport TBeam from \"./TBeam\";\r\nimport { TrussCalc } from './TCalc';\r\nimport TNode from \"./TNode\";\r\nimport { ICoord, ITBeam, ITNode, NodeFixation, TrussCalcData, TrussCalcProps } from \"./TTypes\";\r\n\r\nclass Truss {\r\n    @observable private _nodes: Map<typeof TNode.prototype.id, TNode>\r\n    @observable private _beams: Map<typeof TBeam.prototype.id, TBeam>\r\n    @observable private _calcData: TrussCalcData | undefined\r\n\r\n    @computed public get nodes() {\r\n        return this._nodes\r\n    }\r\n    @computed public get nodesArray() {\r\n        // return Array.from(this._nodes.values()).sort(this.sortByName)\r\n        return Array.from(this._nodes.values())\r\n    }\r\n    @computed public get beams() {\r\n        return this._beams\r\n    }\r\n    @computed public get beamsArray() {\r\n        // return Array.from(this._beams.values()).sort(this.sortByName)\r\n        return Array.from(this._beams.values())\r\n    }\r\n\r\n    @computed public get calcData() {\r\n        return this._calcData\r\n    }\r\n    constructor() {\r\n        this._nodes = new Map()\r\n        this._beams = new Map()\r\n\r\n        this.connectBeamToStartNode = this.connectBeamToStartNode.bind(this)\r\n    }\r\n    // Actions with Node\r\n    @action public addNode(props: ITNode = {}): TNode | void {\r\n        if (this._nodes.size > 12) throw new Error(\"Превышено число узлов\")\r\n        for (let n of this._nodes.values()) {\r\n            if (n.coord === props.coord) return // throw new Error(\"На данном месте уже стоит узел\")\r\n        }\r\n        const name = (this._nodes.size + 1) + \"\"\r\n        const node = new TNode({\r\n            ...props,\r\n            name\r\n        })\r\n        this._nodes.set(node.id, node)\r\n        return node\r\n    }\r\n    @action public moveNode(id: string, x: number, y: number): void {\r\n        const node = this._nodes.get(id)\r\n        if (!node) throw new Error(\"Не найден узел\")\r\n        if (node.isStatic || node.fixation !== NodeFixation.None) return //throw new Error(\"Данный узел нельзя перемещать\")\r\n        for (let n of this._nodes.values()) {\r\n            if (n.coord.x === x && n.coord.y === y) return\r\n        }\r\n        node.moveTo(x, y)\r\n    }\r\n    @action\r\n    public setNodes(nodes: typeof Truss.prototype.nodes) {\r\n        this._nodes = new Map(nodes)\r\n    }\r\n    @action\r\n    public sortNodesByCoord(_nodes: TNode[] = this.nodesArray) {\r\n        const nodes = _nodes.sort((a: TNode, b: TNode) => {\r\n            if (a.coord.y < b.coord.y) return -1\r\n            else if (a.coord.y === b.coord.y) if (a.coord.x < b.coord.x) return -1; else return 1\r\n            else return 1\r\n        })\r\n\r\n        nodes.forEach((n, i) => {\r\n            n.name = (i + 1).toString()\r\n        })\r\n    }\r\n\r\n    // Actions with Beam\r\n    @action\r\n    public addBeam(props: ITBeam = {}): TBeam {\r\n        if (this._beams.size > 36) throw new Error(\"Превышено число стержней\")\r\n        const beam = new TBeam(props)\r\n        this._beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n\r\n    @action\r\n    public moveEndBeamWhileDraving(id: string, x: number, y: number): void {\r\n        const beam = this._beams.get(id)\r\n        if (!beam) throw new Error(\"Не найден стержень\")\r\n        if (beam.endConnectedNode) throw new Error(\"Стержень нельзя переместить - он привязан к узлу\")\r\n        beam.moveEndTo(x, y)\r\n    }\r\n\r\n    @action\r\n    public connectBeamToStartNode(nodeID: string, beamID: string) {\r\n        const beam = this._beams.get(beamID)\r\n        const node = this._nodes.get(nodeID)\r\n        if (!beam || !node) throw new Error(\"Не найдены компоненты\")\r\n        beam.connectStartNode(node)\r\n        node.conncetBeam(beam.id)\r\n        return beam\r\n    }\r\n\r\n    @action\r\n    public connectBeamToEndNode(nodeID: string, beamID: string) {\r\n        const beam = this._beams.get(beamID)\r\n        const node = this._nodes.get(nodeID)\r\n        if (!beam || !node) throw new Error(\"Не найдены компоненты\")\r\n        for (let b of this._beams.values()) {\r\n            if (this._findOldBeamByNode(node, beam, b)) return // throw new Error(\"Нельзя присоединить\")\r\n        }\r\n        beam.connectEndNode(node)\r\n        node.conncetBeam(beam.id)\r\n        return beam\r\n    }\r\n\r\n    @action\r\n    public setBeams(beams: typeof Truss.prototype.beams) {\r\n        this._beams = new Map(beams)\r\n    }\r\n\r\n    private _findOldBeamByNode(node: TNode, beam: TBeam, checkingBeam: TBeam): boolean {\r\n        return (\r\n            (checkingBeam.startConnectedNode === beam.startConnectedNode && checkingBeam.endConnectedNode === node) ||\r\n            (checkingBeam.startConnectedNode === node && checkingBeam.endConnectedNode === beam.startConnectedNode) ||\r\n            (checkingBeam === beam && checkingBeam.startConnectedNode === node)\r\n        )\r\n    }\r\n\r\n\r\n    // Calculation\r\n    @action\r\n    public async calculate(props?: TrussCalcProps): Promise<true> {\r\n        const NodeCoord: ICoord[] = []\r\n        const NodeV: ICoord[] = []\r\n        const LinkNodes: ICoord[] = []\r\n        const Forces: number[] = []\r\n        const LinkLength: number[] = []\r\n\r\n        const { nodes, beams } = await this.updateBeforeCalc(\r\n            [...this.nodesArray],\r\n            [...this.beamsArray]\r\n        )\r\n\r\n        if (nodes.find(node => node.beams.length === 0 && node.isStatic)) throw new Error(\"Не все узлы соединены\")\r\n        let _nodeVindex = 0;\r\n        nodes.forEach((node, i) => {\r\n            NodeCoord.push({ ...node.coord })\r\n            switch (node.fixation) {\r\n                case NodeFixation.X: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: 0, y: _nodeVindex })\r\n                    Forces.push(-node.forceY)\r\n                    break;\r\n                }\r\n                case NodeFixation.Y: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: _nodeVindex, y: 0 })\r\n                    Forces.push(-node.forceX)\r\n                    break;\r\n                }\r\n                case NodeFixation.YX:\r\n                case NodeFixation.XY: {\r\n                    NodeV.push({ x: 0, y: 0 })\r\n                    break;\r\n                }\r\n                case NodeFixation.None: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: _nodeVindex, y: _nodeVindex + 1 })\r\n                    _nodeVindex++\r\n                    Forces.push(-node.forceX)\r\n                    Forces.push(-node.forceY)\r\n                    break;\r\n                }\r\n                default: break;\r\n            }\r\n        })\r\n        beams.forEach((beam, i) => {\r\n            const nums = beam.name.split(' - ')\r\n            LinkNodes.push({\r\n                x: Number(nums[0]) - 1,\r\n                y: Number(nums[1]) - 1\r\n            })\r\n            LinkLength.push(beam.length)\r\n        })\r\n\r\n        const data = await TrussCalc.init(NodeCoord, NodeV, Forces, LinkNodes, LinkLength, props)\r\n\r\n\r\n        await this.updateAfterCalc(nodes, beams, data)\r\n        return true\r\n    }\r\n\r\n    @action\r\n    public async updateBeforeCalc(nodes: TNode[] = this.nodesArray, beams: TBeam[] = this.beamsArray): Promise<{ nodes: TNode[], beams: TBeam[] }> {\r\n        this.sortNodesByCoord(nodes)\r\n        beams = beams.sort(this.sortByName)\r\n        return { nodes, beams }\r\n    }\r\n\r\n    @action\r\n    private async updateAfterCalc(nodes: TNode[], beams: TBeam[], data: TrussCalcData): Promise<{ nodes: TNode[], beams: TBeam[] }> {\r\n        this._calcData = data\r\n        const { P, Vi } = data\r\n\r\n        if (!Vi || !P) throw new Error(\"Нет расчетных данных\")\r\n\r\n        for (let n of this.nodes.values()) {\r\n            const coord: ICoord = { ...Vi[Number(n.name) - 1] }\r\n            n.dCoord = {\r\n                x: +coord.x.toFixed(4),\r\n                y: +coord.y.toFixed(4)\r\n            }\r\n        }\r\n        let i = 0\r\n        for (let b of this.beams.values()) {\r\n            b.startForce = Math.round(P[i][0][0])\r\n            b.endForce = Math.round(P[i][1][0])\r\n            i++\r\n        }\r\n        return { nodes, beams }\r\n\r\n    }\r\n    //Other Actions\r\n    @action\r\n    public delete(id: string) {\r\n        let entity: TBeam | TNode | undefined = undefined\r\n        if (this._beams.has(id)) entity = this._beams.get(id)\r\n        else if (this._nodes.has(id)) entity = this._nodes.get(id)\r\n\r\n        if (entity instanceof TNode) {\r\n            if (entity.isStatic) return // throw new Error(\"Нельзя удалить этот узел\")\r\n            const beamsOfNode = this.beamsArray.filter(item => (entity instanceof TNode && entity.beams.includes(item.id)))\r\n            beamsOfNode.forEach(beam => {\r\n                if (entity instanceof TNode) {\r\n                    let _node: TNode | undefined\r\n                    if (!beam.startConnectedNode || !beam.endConnectedNode) throw new Error()\r\n                    if (beam.startConnectedNode.id === entity.id)\r\n                        _node = this._nodes.get(beam.endConnectedNode.id)\r\n                    else _node = this._nodes.get(beam.startConnectedNode.id)\r\n                    if (_node) _node.removeBeam(beam.id)\r\n                    this._beams.delete(beam.id)\r\n                }\r\n            })\r\n            this._nodes.delete(entity.id)\r\n            // TODO: FARM_UPDATE\r\n            return true\r\n        } else if (entity instanceof TBeam) {\r\n            [entity.startConnectedNode, entity.endConnectedNode].forEach(node => {\r\n                node && entity && node.removeBeam(entity.id)\r\n            })\r\n            this._beams.delete(entity.id)\r\n        }\r\n    }\r\n    @action\r\n    public clear() {\r\n        this._beams.clear()\r\n        this._nodes.clear()\r\n    }\r\n    private sortByName = (a: TEntity, b: TEntity): number => {\r\n        if (a instanceof TBeam) {\r\n            const numsA = a.name.split(' - ')\r\n            const numA = Number(numsA[0] + numsA[1])\r\n            const numsB = b.name.split(' - ')\r\n            const numB = Number(numsB[0] + numsB[1])\r\n            return numA > numB ? 1 : -1\r\n        } else {\r\n            return a.name > b.name ? 1 : -1\r\n        }\r\n    }\r\n}\r\nexport default new Truss()","import { TNode, TBeam } from 'src/models/Truss';\r\nimport { IFixedNodeCreate, ISimpleNodeCreate, IStaticNodeCreate, ITruss, ITNode, ITBeam } from \"./TTypes\";\r\nimport { canvas, UI } from 'src/static/const';\r\n\r\n\r\nexport class TrussFactory {\r\n    static firstPlacement(_nodes: TNode[], _beams: TBeam[]) {\r\n        _nodes.forEach(node => {\r\n            const x = node.coord.x + Math.round((canvas.width / 3) / UI.cellSize) * UI.MMinCell\r\n            const y = node.coord.y + Math.round((canvas.height / 3) / UI.cellSize) * UI.MMinCell\r\n            node.moveTo(x, y)\r\n        })\r\n    }\r\n    static async parse(nodesJSON: string, beamsJSON: string): Promise<ITruss> {\r\n        const nodes: ITNode[] = await JSON.parse(nodesJSON)\r\n        const beams: ITBeam[] = await JSON.parse(beamsJSON)\r\n\r\n        const nodesMap: Map<string, TNode> = new Map()\r\n        const beamsMap: Map<string, TBeam> = new Map()\r\n\r\n        await nodes.forEach((n) => {\r\n            n.dCoord = { x: 0, y: 0 }\r\n            const node = new TNode(n)\r\n            nodesMap.set(node.id, node)\r\n        })\r\n        await beams.forEach(b => {\r\n            b.startForce = 0\r\n            b.endForce = 0\r\n            const beam: TBeam = new TBeam(b)\r\n            if (b.startConnectedNode && b.endConnectedNode) {\r\n                beam.connectStartNode(nodesMap.get(b.startConnectedNode.id) as TNode)\r\n                beam.connectEndNode(nodesMap.get(b.endConnectedNode.id) as TNode)\r\n            }\r\n            beamsMap.set(beam.id, beam)\r\n        })\r\n        return { nodes: nodesMap, beams: beamsMap }\r\n\r\n    }\r\n    static toString(truss: ITruss) {\r\n        const nodes = Array.from(truss.nodes.values())\r\n        const beams = Array.from(truss.beams.values())\r\n\r\n        const nodesJSON = JSON.stringify(nodes).replace(/_/g, '')\r\n        const beamsJSON = JSON.stringify(beams).replace(/_/g, '')\r\n\r\n        return { nodesJSON, beamsJSON }\r\n    }\r\n    static createNodes(\r\n        _fixedNodes: IFixedNodeCreate[] = [],\r\n        _staticNodes: IStaticNodeCreate[] = [],\r\n        _nodes: ISimpleNodeCreate[] = []\r\n    ): Map<string, TNode> {\r\n        const nodes: Map<string, TNode> = new Map()\r\n\r\n        _fixedNodes.forEach(n => {\r\n            const _n = new TNode({\r\n                coord: { x: n.x, y: n.y },\r\n                isStatic: true,\r\n                fixation: n.fixation\r\n            })\r\n            nodes.set(_n.id, _n)\r\n        })\r\n        _staticNodes.forEach(n => {\r\n            const _n = new TNode({\r\n                coord: { x: n.x, y: n.y },\r\n                isStatic: true,\r\n                forceX: n.forceX || 0,\r\n                forceY: n.forceY || 0,\r\n            })\r\n            nodes.set(_n.id, _n)\r\n        })\r\n        _nodes.forEach(n => {\r\n            const _n = new TNode({\r\n                coord: { x: n.x, y: n.y }\r\n            })\r\n            nodes.set(_n.id, _n)\r\n        })\r\n        return nodes\r\n    }\r\n}\r\n\r\nexport default TrussFactory","import { Box, createStyles, makeStyles, Paper, Table, TableBody, TableCell, TableHead, TableRow, Theme, Typography } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { TrussCalcData } from 'src/models/Truss/TTypes';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            overflowX: 'auto',\r\n            paddingTop: theme.spacing(2)\r\n        },\r\n        table: {\r\n            minWidth: 650,\r\n        },\r\n        tableBox: {\r\n            marginBottom: theme.spacing(2)\r\n        },\r\n        title: {\r\n            padding: theme.spacing(2),\r\n        },\r\n    }),\r\n);\r\n\r\ninterface Props extends TrussCalcData { }\r\n\r\n\r\nconst UICalcData: React.FC<Props> = observer((props) => {\r\n    const classes = useStyles(props);\r\n    const { Vi, P, LinkNodes, G } = props\r\n\r\n    const viewVi = (vi: typeof props.Vi) => {\r\n        const rows: string[][] = []\r\n        vi.forEach((n, i) => {\r\n            rows.push([\r\n                (i + 1).toString(),\r\n                n.x.toFixed(4),\r\n                n.y.toFixed(4)\r\n            ])\r\n        })\r\n        return viewTable(\"Перемещения узлов\", ['Узел', 'По оси X (мм)', 'По оси Y (мм)'], rows)\r\n    }\r\n    const viewP = (p: typeof props.P, beams: typeof props.LinkNodes) => {\r\n        const rows: string[][] = []\r\n        p.forEach((b, i) => {\r\n            rows.push([\r\n                `${beams[i].x + 1} - ${beams[i].y + 1}`,\r\n                b[0][0].toFixed(0),\r\n                b[1][0].toFixed(0)\r\n            ])\r\n        })\r\n        return viewTable(\"Усилия в стержнях\", ['Стержень', 'Сила в начале (H)', 'Сила в конце (H)'], rows)\r\n    }\r\n\r\n    const viewTable = (title: string, head: string[], rows: string[][]) => {\r\n        return <Paper className={classes.tableBox}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                {title}\r\n            </Typography>\r\n            <Table className={classes.table}>\r\n                {viewHead(head)}\r\n                <TableBody>\r\n                    {rows.map(row => viewBodyRow(row))}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Paper className={classes.tableBox}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    G: {Math.round(G)} (Н·мм)\r\n                </Typography>\r\n            </Paper>\r\n            {viewP(P, LinkNodes)}\r\n            {viewVi(Vi)}\r\n        </Box>\r\n    );\r\n})\r\n\r\nconst viewHead = (cells: string[]) => {\r\n    return <TableHead>\r\n        <TableRow>\r\n            {cells.map(cell => (<TableCell key={cell}>{cell}</TableCell>))}\r\n        </TableRow>\r\n    </TableHead>\r\n}\r\nconst viewBodyRow = (cells: string[]) => {\r\n    return <TableRow >\r\n        {cells.map(cell => (<TableCell key={cell}>{cell}</TableCell>))}\r\n    </TableRow>\r\n}\r\n\r\nexport default UICalcData","import * as React from 'react'\r\nimport clsx from 'clsx'\r\nimport { Theme, createStyles, withStyles, AppBar, Toolbar } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { img } from 'src/static/const';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBarProps } from '@material-ui/core/AppBar';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n        marginRight: theme.spacing(4),\r\n        marginLeft: theme.spacing(2),\r\n        '& img': {\r\n            width: 50,\r\n            height: 'auto'\r\n        }\r\n    }\r\n})\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles>, React.HTMLAttributes<HTMLDivElement> {\r\n    color?: AppBarProps['color'],\r\n    position?: AppBarProps['position'],\r\n    withLogo?: boolean\r\n}\r\n\r\nconst UIAppBar: React.FC<UIToolBarProps> = ({ classes, children, className, color, position, withLogo = true }) => {\r\n    const viewLogo = () => {\r\n        if (withLogo) return ((\r\n            <Link\r\n                to={'/'}\r\n                className={classes.logo}\r\n            >\r\n                <img\r\n                    alt=\"Logo Icon\"\r\n                    src={img.bridgeIcon_2}\r\n                />\r\n            </Link>\r\n        ))\r\n    }\r\n    return (\r\n        <AppBar\r\n            position={position || 'fixed'}\r\n            className={clsx(classes.appBar, className)}\r\n            color={color || 'primary'}>\r\n            <Toolbar >\r\n                {viewLogo()}\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIAppBar)","import { Button, Fab, Tooltip } from '@material-ui/core';\r\nimport { ButtonProps } from '@material-ui/core/Button';\r\nimport * as React from 'react';\r\n\r\nexport interface BtnProps {\r\n    title?: string,\r\n    todo: string,\r\n    icon?: JSX.Element,\r\n    disabled?: boolean,\r\n    fab?: boolean,\r\n    onlyIcon?: boolean\r\n}\r\nexport const Btn: React.FC<BtnProps & ButtonProps & {\r\n    onClickToAction: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, todo: string) => void\r\n}> = (props) => {\r\n    const {\r\n        title = \"\",\r\n        icon = (<React.Fragment />),\r\n        disabled = false,\r\n        onClickToAction,\r\n        todo,\r\n        className,\r\n        fab = false,\r\n        size,\r\n        onlyIcon = false\r\n    } = props\r\n    if (fab) return (\r\n        <Tooltip title={title} >\r\n            <Fab\r\n\r\n\r\n                size={size}\r\n                color=\"secondary\"\r\n                onClick={(e) => onClickToAction(e, todo)}\r\n                disabled={disabled}\r\n                className={className}\r\n                style={{\r\n                    marginLeft: 5,\r\n                    marginRight: 5\r\n                }}>\r\n\r\n                {icon}\r\n            </Fab>\r\n\r\n        </Tooltip>\r\n    )\r\n    return (\r\n        <Tooltip title={title}>\r\n            <Button\r\n                size={size}\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={(e) => onClickToAction(e, todo)}\r\n                disabled={disabled}\r\n                className={className}\r\n                style={{\r\n                    marginLeft: 5,\r\n                    marginRight: 5\r\n                }}>\r\n                {icon}\r\n                {!onlyIcon && title}\r\n            </Button>\r\n\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default Btn","import { Button, ListItemIcon, MenuItem, MenuList, Paper, Popover } from '@material-ui/core';\r\nimport { ButtonProps } from '@material-ui/core/Button';\r\nimport * as React from 'react';\r\nimport { BtnProps } from './btn';\r\n\r\nexport interface MenuBtnProps {\r\n    title: string,\r\n    icon?: JSX.Element,\r\n    items: BtnProps[],\r\n}\r\n\r\nexport function MenuBtn(props: MenuBtnProps & ButtonProps & {\r\n    onClickToAction: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, todo: string) => void\r\n}) {\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    function handleClick(event: React.MouseEvent<HTMLElement>) {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    }\r\n\r\n\r\n    function handleItemClick(e: React.MouseEvent, a: string) {\r\n        props.onClickToAction(e as React.MouseEvent<HTMLButtonElement>, a)\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    function handleClose(e: React.MouseEvent) {\r\n\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const { items, title } = props\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? title : undefined;\r\n    return (\r\n        <div>\r\n            <Button\r\n                aria-describedby={id}\r\n                size={props.size}\r\n                aria-haspopup=\"menu\"\r\n                onClick={handleClick}\r\n                color=\"secondary\"\r\n                variant={props.variant || \"contained\"}\r\n                style={{\r\n                    marginLeft: 5,\r\n                    marginRight: 5,\r\n                }}\r\n            >{props.icon}  {props.title}</Button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n\r\n            >\r\n                <Paper onMouseLeave={handleClose}>\r\n                    <MenuList>\r\n                        {items.map(i => (\r\n                            <MenuItem onClick={(e) => handleItemClick(e, i.todo)} disabled={i.disabled}>\r\n                                {i.icon !== undefined && (<ListItemIcon>\r\n                                    {i.icon}\r\n                                </ListItemIcon>)}\r\n                                {i.title}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </MenuList>\r\n                </Paper>\r\n\r\n\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\nexport default MenuBtn","import { createStyles, Theme, Tooltip, withStyles } from '@material-ui/core';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButton } from '@material-ui/lab';\r\nimport { ToggleButtonProps } from '@material-ui/lab/ToggleButton';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport * as React from 'react';\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    btn: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        borderRadius: '50% !important',\r\n        border: `1px solid ${fade(theme.palette.action.active, 0.2)} !important`,\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.light,\r\n\r\n        '&$selected': {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            '@media (hover: none)': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            '&$disabled': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n        },\r\n    },\r\n    selected: {},\r\n})\r\n\r\nexport interface ToggleBtnProps extends WithStyles<typeof styles> {\r\n    selected: boolean,\r\n    value?: any,\r\n    name?: string,\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nconst MyToggleButton: React.FC<ToggleBtnProps & ToggleButtonProps> = ({ selected, classes, value, name, icon, ...other }) => {\r\n    return (\r\n        <ToggleButton\r\n            key={name}\r\n            value={value}\r\n            className={clsx(\r\n                classes.btn,\r\n                {\r\n                    [classes.selected]: selected,\r\n                }\r\n            )}\r\n            {...other}\r\n\r\n        >\r\n            <Tooltip title={name}>\r\n                {icon}\r\n            </Tooltip>\r\n        </ToggleButton>\r\n    )\r\n}\r\nexport const ToggleBtn = withStyles(styles)(MyToggleButton)\r\nexport default withStyles(styles)(MyToggleButton)","\r\nimport { AppBar, Box, Dialog, IconButton, Slide, Toolbar, Typography } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as React from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n\r\n        box: {\r\n            backgroundColor: theme.palette.grey[300],\r\n            width: \"100%\",\r\n            height: '100%',\r\n            padding: theme.spacing(4),\r\n            overflowX: 'auto'\r\n        },\r\n        appBar: {\r\n            position: 'relative',\r\n        },\r\n        title: {\r\n            marginLeft: theme.spacing(2),\r\n            flex: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nconst Transition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\ninterface Props {\r\n    title: string,\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    children?: React.ReactNode\r\n}\r\nexport default function FullScreenDialog(props: Props) {\r\n    const classes = useStyles(props);\r\n    const { children, open, handleClose, title } = props\r\n    return (\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box className={classes.box}>\r\n                {children}\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip, Typography, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport { UI } from 'src/static/const';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: UI.sidebarWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(10),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    title:{\r\n        padding:theme.spacing(1)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface SidebarProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    title? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface SidebarState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\nconst localStr = \"Sidebar_state:\"\r\nclass Sidebar extends React.PureComponent<SidebarProps, SidebarState>{\r\n    constructor(props: SidebarProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: true,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    componentWillMount(){\r\n        if(this.props.title){\r\n            const localState = localStorage.getItem(localStr+this.props.title)\r\n            if(localState)\r\n            this.setState({open: localState === \"true\"})\r\n        }\r\n    }\r\n    switchDrawer() {\r\n        localStorage.setItem(localStr+this.props.title,(!this.state.open ? \"true\" : \"false\"))\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, title, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <Typography \r\n                        variant='body2'\r\n                        align=\"center\"\r\n                        className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider/>\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={title}\r\n                    open={title !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 15 : UI.sidebarWidth + 15 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 15 : UI.sidebarWidth + 15 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import { Box, createStyles, Divider, IconButton, Theme, Typography, withStyles } from '@material-ui/core';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { Sidebar } from 'src/components';\r\nimport { TBeam, TEntity, TNode } from 'src/models/Truss';\r\nimport { NodeFixation } from 'src/models/Truss/TTypes';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    btnGroup: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n})\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: TEntity,\r\n    onDelete?(entity: TEntity): void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\nconst TextRow = ({ text, className }: { text: string, className?: string }) => (\r\n    <React.Fragment>\r\n        <Typography variant=\"subtitle2\">\r\n            {text}\r\n        </Typography>\r\n        <Divider />\r\n    </React.Fragment>\r\n)\r\nconst TextRows = ({ text, className }: { text: string[], className?: string }) => {\r\n    if (text.length === 0) return (<React.Fragment />)\r\n    return (\r\n        <React.Fragment>\r\n            {text.map((str, i) => (\r\n                <Typography variant=\"subtitle2\" key={i}>\r\n                    {str}\r\n                </Typography>\r\n            ))}\r\n            <Divider />\r\n        </React.Fragment>\r\n    )\r\n}\r\n@observer\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    viewFixationInfo(node: TNode) {\r\n        switch (node.fixation) {\r\n            case NodeFixation.X: return (\r\n                <TextRow text={\"Фиксация по оси X\"} />\r\n            )\r\n            case NodeFixation.Y: return (\r\n                <TextRow text={\"Фиксация по оси Y\"} />\r\n            )\r\n            case NodeFixation.XY: return (\r\n                <TextRow text={\"Фиксация по осям Х и Y\"} />\r\n            )\r\n            default: return undefined\r\n        }\r\n    }\r\n    NodeInfo(node: TNode) {\r\n        const { classes, onDelete = () => { } } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Узел {node.name}\r\n                </Typography>\r\n                <TextRows text={[`X: ${node.coord.x} мм`, `Y: ${node.coord.y} мм`]} />\r\n                <TextRows text={[`ΔX: ${node.dCoord.x} мм`, `ΔY': ${node.dCoord.y} мм`]} />\r\n                {node.forceX !== 0 && (<TextRow text={`Сила по оси Х: ${node.forceX} H`} />)}\r\n                {node.forceY !== 0 && (<TextRow text={`Сила по оси Y: ${node.forceY} H`} />)}\r\n                {this.viewFixationInfo(node)}\r\n                <div className={classes.btnGroup}>\r\n                    <IconButton\r\n                        aria-label=\"Delete\"\r\n                        onClick={() => onDelete(node)}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </Box>\r\n        )\r\n    }\r\n    BeamInfo(beam: TBeam) {\r\n        const { classes, onDelete = () => { } } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Стержень {beam.name}\r\n                </Typography>\r\n                <TextRow text={`Длина: ${beam.length} мм`} />\r\n                <TextRows text={[`Усилия в стержне`, `В начале: ${beam.startForce} H`, `В конце: ${beam.endForce} H`]} />\r\n                <div className={classes.btnGroup}>\r\n                    <IconButton\r\n                        aria-label=\"Delete\"\r\n                        onClick={() => onDelete(beam)}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </Box>\r\n        )\r\n    }\r\n    viewInfo(entity: TEntity | undefined) {\r\n        if (entity instanceof TNode) return this.NodeInfo(entity)\r\n        else if (entity instanceof TBeam) return this.BeamInfo(entity)\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"right\"\r\n                title=\"Информация о выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon />)}\r\n            >\r\n                {this.viewInfo(entity)}\r\n                <Divider />\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","export const HEADER = {\r\n    CANVAS: {\r\n        CLEAR: \"header-canvas-clear\",\r\n        SAVE: \"header-canvas-save\"\r\n    },\r\n    CALC: {\r\n        DO: \"header-calc-do\",\r\n        RESULT: \"header-calc-result\"\r\n    }\r\n}\r\nexport const TOOLS = {\r\n    TRUSS: {\r\n        CALC: \"tools-truss-calc\"\r\n    }\r\n}","\r\nimport { Delete as DeleteIcon, DeleteForever as ClearIcon, MyLocation as AddNodeIcon, Power as ConnectIcon, SaveAlt as SaveIcon, Straighten as CalcIcon, ViewList as DataIcon, ZoomOutMap as MoveIcon } from '@material-ui/icons';\r\nimport * as React from 'react';\r\nimport { BtnProps } from 'src/components/Btns/btn';\r\nimport { MenuBtnProps } from 'src/components/Btns/menuBtn';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { IMode } from '../components/UIToolPanel';\r\nimport { HEADER, TOOLS } from './actionsList';\r\nconst canvasButtons: BtnProps[] = [\r\n    {\r\n        title: \"Сохранить в кэш\",\r\n        todo: HEADER.CANVAS.SAVE,\r\n        icon: (<SaveIcon />)\r\n    },\r\n    {\r\n        title: \"Очистить\",\r\n        todo: HEADER.CANVAS.CLEAR,\r\n        icon: (<ClearIcon />)\r\n    }\r\n]\r\nconst calcButtons: BtnProps[] = [\r\n    {\r\n        title: \"Рассчитать\",\r\n        todo: HEADER.CALC.DO,\r\n        icon: (<CalcIcon />)\r\n    },\r\n    {\r\n        title: \"Показать результат\",\r\n        todo: HEADER.CALC.RESULT,\r\n        icon: (<DataIcon />)\r\n    }\r\n]\r\nexport const headerMenu: MenuBtnProps[] = [\r\n    {\r\n        title: \"Холст\",\r\n        items: canvasButtons\r\n    },\r\n    {\r\n        title: \"Расчет\",\r\n        items: calcButtons\r\n    }\r\n]\r\n\r\nexport const toolsButtons: BtnProps[] = [\r\n\r\n    {\r\n        title: \"Расчет фермы\",\r\n        todo: TOOLS.TRUSS.CALC,\r\n        icon: (<CalcIcon />),\r\n        fab: true\r\n    }\r\n]\r\n\r\nexport const modsButtons: IMode[] = [\r\n    {\r\n        title: \"Перемещение\",\r\n        mod: UIModes.move,\r\n        icon: (<MoveIcon />)\r\n    },\r\n    {\r\n        title: \"Добавить узел\",\r\n        mod: UIModes.addNode,\r\n        icon: (<AddNodeIcon />)\r\n    },\r\n    {\r\n        title: \"Соединить узлы\",\r\n        mod: UIModes.addBeam,\r\n        icon: (<ConnectIcon />)\r\n    },\r\n    {\r\n        title: \"Удалить\",\r\n        mod: UIModes.delete,\r\n        icon: (<DeleteIcon />)\r\n    }\r\n]\r\n\r\n\r\nexport const actions = { HEADER, TOOLS };\r\n","import { Box, createStyles, Theme, WithStyles, withStyles } from '@material-ui/core';\r\nimport Konva from \"konva\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as React from 'react';\r\nimport KeyHandler from 'react-key-handler';\r\nimport { Stage } from \"react-konva\";\r\nimport Stats from 'react-stats';\r\nimport { DialogFull } from 'src/components';\r\nimport { TBeam, TEntity, TNode, Truss } from 'src/models/Truss';\r\nimport { UIEntityInfo, UITreePanel } from 'src/pages/Truss/components';\r\nimport { canvas } from 'src/static/const';\r\nimport { MyMath } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { UIHeader, UIStage, UIToolPanel } from '.';\r\nimport { actions } from '../actions';\r\nimport { TrussContainer } from '../TrussContainer';\r\nimport UICalcData from './UICalcData';\r\n\r\n\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\nexport interface UITrussProps extends WithStyles<typeof styles> {\r\n    farm: typeof Truss,\r\n    addNode: typeof TrussContainer.prototype.addNode,\r\n    addBeam: typeof TrussContainer.prototype.addBeam,\r\n    moveNode: typeof TrussContainer.prototype.moveNode,\r\n    moveEndBeam: typeof TrussContainer.prototype.moveEndBeam,\r\n    connectBeamToNode: typeof TrussContainer.prototype.connectBeamToNode,\r\n    deleteEntity: typeof TrussContainer.prototype.deleteEntity\r\n    clearTruss: typeof TrussContainer.prototype.clearTruss\r\n    cacheTruss: typeof TrussContainer.prototype.cacheTruss,\r\n    calculate: typeof TrussContainer.prototype.calculate\r\n    calculation: boolean,\r\n    calculated: boolean,\r\n}\r\n\r\nexport interface UITrussState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    uiMode: UIModes,\r\n    selectedEntityID: string,\r\n    paintEntity: TBeam | null,\r\n    openModal: string | null\r\n}\r\n@observer\r\nclass UITruss extends React.Component<UITrussProps, UITrussState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UITrussProps) {\r\n        super(props)\r\n        this.state = {\r\n            stageHeight: canvas.height,\r\n            stageWidth: canvas.width,\r\n            uiMode: UIModes.none,\r\n            selectedEntityID: \"\",\r\n            paintEntity: null,\r\n            openModal: null\r\n        }\r\n        this.UIonClick = this.UIonClick.bind(this)\r\n        this.UIonDrag = this.UIonDrag.bind(this)\r\n        this.UIonMouseMove = this.UIonMouseMove.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this.selectEntity = this.selectEntity.bind(this)\r\n        this.deleteEntity = this.deleteEntity.bind(this)\r\n        this.clearFarm = this.clearFarm.bind(this)\r\n        this.saveFarm = this.saveFarm.bind(this)\r\n        this.calculate = this.calculate.bind(this)\r\n        this.handleBtnClick = this.handleBtnClick.bind(this)\r\n        this.modalStateChange = this.modalStateChange.bind(this)\r\n        this.stage = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container: HTMLDivElement = stage.attrs.container.parentElement.parentElement\r\n            if (container) {\r\n                container.scrollTop = (container.scrollHeight - container.offsetHeight) / 2\r\n                container.scrollLeft = (container.scrollWidth - container.offsetWidth) / 2\r\n            }\r\n        }\r\n    }\r\n\r\n    UIonClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: TEntity) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const { calculation } = this.props\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n        if (e.evt.button === 0 && !calculation) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace && entity) this.selectEntity(entity.id)\r\n                    else this.selectEntity('')\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        this.props.addNode(cellX, cellY)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && entity instanceof TNode) {\r\n                        const beam = this.props.addBeam({\r\n                            coord: { ...entity.coord }\r\n                        })\r\n                        if (beam instanceof TBeam) {\r\n                            const connectedBeam = this.props.connectBeamToNode(entity, beam, 'start')\r\n                            if (connectedBeam instanceof TBeam) {\r\n                                this.setState({\r\n                                    paintEntity: connectedBeam,\r\n                                    uiMode: UIModes.addBeamStart\r\n                                })\r\n                            }\r\n                            else this.props.deleteEntity(beam.id)\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && entity instanceof TNode && paintEntity) {\r\n                        if (this.props.connectBeamToNode(entity, paintEntity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: null\r\n                            })\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this.deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            if (isEmptyPlace) this.setState({ selectedEntityID: \"\" })\r\n        }\r\n\r\n\r\n\r\n    }\r\n    UIonMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        const { uiMode, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if (e.target.getStage()) {\r\n                    if (paintEntity) {\r\n                        this.props.moveEndBeam(paintEntity, layerX, layerY)\r\n                    } else this.setState({ uiMode: UIModes.addBeam })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.delete: {\r\n                const stage: Stage & Konva.Stage = e.target.getStage()\r\n                if (stage === e.target) {\r\n                    stage.container().style.cursor = 'default'\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    UIonDrag(e: Konva.KonvaEventObject<DragEvent>, entity: TEntity) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        const { uiMode } = this.state\r\n        switch (uiMode) {\r\n            case UIModes.move: {\r\n                if (entity instanceof TNode) {\r\n                    if (e.evt.defaultPrevented) {\r\n                        const { layerX, layerY } = e.evt\r\n                        this.props.moveNode(entity, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this.deletePaintEntity()\r\n                this.setState({\r\n                    uiMode: 0\r\n                })\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    deletePaintEntity() {\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            paintEntity: null\r\n        })\r\n    }\r\n    deleteEntity(entity: TEntity) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (this.state.selectedEntityID && this.state.selectedEntityID === entity.id)\r\n            this.setState({\r\n                selectedEntityID: \"\"\r\n            })\r\n        this.props.deleteEntity(entity.id)\r\n    }\r\n    selectEntity(id: string) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (id) this.setState({ selectedEntityID: id })\r\n    }\r\n    clearFarm(): void {\r\n        if (window.confirm('Вы уверены, что хотите очистить холст?'))\r\n            this.props.clearTruss()\r\n    }\r\n    saveFarm(e?: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        if (window.confirm('Вы уверены, что хотите сохранить холст в кэш?'))\r\n            this.props.cacheTruss()\r\n    }\r\n    calculate(e?: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        this.props.calculate()\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n            paintEntity: null\r\n        })\r\n    }\r\n    handleBtnClick(e: React.MouseEvent<HTMLElement, MouseEvent>, a: string) {\r\n        switch (a) {\r\n            case actions.HEADER.CANVAS.CLEAR: {\r\n                this.clearFarm()\r\n                break;\r\n            }\r\n            case actions.HEADER.CANVAS.SAVE: {\r\n                this.saveFarm(e)\r\n                break;\r\n            }\r\n            case actions.TOOLS.TRUSS.CALC:\r\n            case actions.HEADER.CALC.DO: {\r\n                this.calculate(e)\r\n                break;\r\n            }\r\n            case actions.HEADER.CALC.RESULT: {\r\n                if (this.props.farm.calcData)\r\n                    this.modalStateChange(actions.HEADER.CALC.RESULT)\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    modalStateChange(s: string | null) {\r\n        this.setState({ openModal: s })\r\n    }\r\n    viewDialogs() {\r\n        if (this.props.farm.calcData) return (\r\n            <DialogFull\r\n                title=\"Результаты рассчетов\"\r\n                open={this.state.openModal === actions.HEADER.CALC.RESULT}\r\n                handleClose={() => this.modalStateChange(null)}>\r\n                <UICalcData {...this.props.farm.calcData} />\r\n            </DialogFull>\r\n        )\r\n\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, uiMode, selectedEntityID } = this.state\r\n        const { classes, farm, calculated } = this.props\r\n        const selectedEntity: TEntity | null = selectedEntityID ? farm.beams.get(selectedEntityID) || farm.nodes.get(selectedEntityID) || null : null\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Stats isActive={true} />\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIHeader\r\n                    disabled={{ [actions.HEADER.CALC.RESULT]: !Boolean(this.props.farm.calcData) }}\r\n                    onClick={this.handleBtnClick} />\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n                    <UITreePanel\r\n                        nodes={farm.nodesArray}\r\n                        beams={farm.beamsArray}\r\n                        selectedEntityID={selectedEntityID}\r\n                        onSelect={this.selectEntity}\r\n                    />\r\n                    <UIStage\r\n                        onClick={this.UIonClick}\r\n                        onDrag={this.UIonDrag}\r\n                        onMouseMove={this.UIonMouseMove}\r\n                        selectedEntity={selectedEntity}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        nodes={farm.nodesArray}\r\n                        beams={farm.beamsArray}\r\n                        stage={this.stage}\r\n                        uiMode={uiMode}\r\n                        viewNewPos={calculated}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={farm.nodes.get(selectedEntityID) || farm.beams.get(selectedEntityID)}\r\n                        onDelete={this.deleteEntity} />\r\n                </Box>\r\n                <UIToolPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)}\r\n                    onClick={this.handleBtnClick} />\r\n                {this.viewDialogs()}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UITruss)","import { createStyles, Theme, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport * as React from 'react';\r\nimport { AppBar } from 'src/components';\r\nimport { DisabledBtn, MenuBtn } from 'src/components/Btns';\r\nimport { headerMenu } from '../actions';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n\r\n    },\r\n    btnIcon: {\r\n        fontSize: 18,\r\n        marginTop: 3,\r\n        marginBottom: 3,\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    }\r\n})\r\n\r\nexport interface UIHeaderProps extends WithStyles<typeof styles> {\r\n    onClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, a: string) => void,\r\n    disabled?: DisabledBtn\r\n}\r\n\r\nconst UIHeader: React.FC<UIHeaderProps> = (\r\n    {\r\n        classes,\r\n        onClick = () => { },\r\n        disabled = {} as DisabledBtn\r\n    }) => {\r\n\r\n    return (\r\n        <AppBar className={classes.root} >\r\n            {headerMenu.map(m => {\r\n                m.items.forEach(b => {\r\n                    b.disabled = disabled[b.todo] === true\r\n                })\r\n                return (\r\n                    <MenuBtn {...m} onClickToAction={onClick} size={\"medium\"} />\r\n                )\r\n            })}\r\n            <div className={classes.grow} />\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIHeader)","import { createStyles, Paper, Theme, withStyles } from '@material-ui/core';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButtonGroup } from '@material-ui/lab';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport * as React from 'react';\r\nimport { ToggleBtn } from 'src/components/Btns';\r\nimport Btn from 'src/components/Btns/btn';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { modsButtons, toolsButtons } from '../actions';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        padding: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        left: \"50%\",\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: fade(theme.palette.primary.light, 0.4),\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light,\r\n        }\r\n    },\r\n    modsBtnGroup: {\r\n        borderRadius: 0,\r\n        backgroundColor: 'transparent',\r\n        verticalAlign: \"middle\"\r\n    },\r\n    vHr: {\r\n        display: \"inline-block\",\r\n        width: 2,\r\n        height: '100%',\r\n        minHeight: 48,\r\n        verticalAlign: \"middle\",\r\n        backgroundColor: theme.palette.secondary.light,\r\n        opacity: 0.5,\r\n        marginRight: 10\r\n    }\r\n})\r\n\r\n\r\nexport interface IMode {\r\n    title: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolPanelProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void,\r\n    onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>, a: string) => void\r\n}\r\n\r\nconst UIToolPanel: React.FC<UIToolPanelProps> = ({ onSelect, selected, classes, onClick = () => { } }) => {\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <ToggleButtonGroup\r\n                value={selected}\r\n                exclusive\r\n                onChange={(e, value) => onSelect(value)}\r\n                size=\"medium\"\r\n                className={classes.modsBtnGroup}\r\n            >\r\n                {modsButtons.map(item => (\r\n                    <ToggleBtn\r\n                        key={item.mod}\r\n                        value={item.mod}\r\n                        selected={item.mod === selected}\r\n                        icon={item.icon}\r\n                        name={item.title}\r\n                    />\r\n                ))}\r\n            </ToggleButtonGroup>\r\n            <div className={classes.vHr} />\r\n            {toolsButtons.map(b => (\r\n                <Btn {...b}\r\n                    onClickToAction={onClick}\r\n                    fab={b.fab}\r\n                    key={b.title}\r\n                    size=\"medium\" />\r\n            ))}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolPanel)","import { Badge, Box, Collapse, createStyles, Divider, List, ListItem, ListItemIcon, ListItemText, Theme, withStyles } from '@material-ui/core';\r\nimport { Brightness1 as CircleIcon, ExpandLess, ExpandMore, GpsNotFixed as NodeIcon, List as TreePanelIcon, Timeline as BeamIcon } from '@material-ui/icons';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { Sidebar } from 'src/components';\r\nimport { TBeam, TEntity, TNode } from 'src/models/Truss';\r\nimport { UI } from 'src/utils';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n        paddingLeft: theme.spacing(6)\r\n    },\r\n})\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes?: TNode[],\r\n    beams?: TBeam[]\r\n    selectedEntityID?: string\r\n    onSelect?(id: string): void\r\n}\r\n\r\ninterface TreeState {\r\n    tabs: Map<string, boolean>,\r\n    open: boolean,\r\n\r\n}\r\n\r\n@observer\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            tabs: new Map()\r\n        }\r\n        this.openTab = this.openTab.bind(this)\r\n        this.viewListItem = this.viewListItem.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        const { tabs } = this.state\r\n        tabs.set('Узлы', true)\r\n        tabs.set('Стержни', true)\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    openTab(tab: string): void {\r\n        const { tabs } = this.state\r\n        tabs.set(tab, !tabs.get(tab))\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    viewListItem(entityArray: TEntity[], title: string, icon?: JSX.Element) {\r\n        const {\r\n            selectedEntityID = \"\",\r\n            classes,\r\n            onSelect = () => { }\r\n        } = this.props\r\n        const { tabs } = this.state\r\n        return (\r\n            <Box>\r\n                <ListItem button onClick={() => this.openTab(title)}>\r\n                    {icon && (\r\n                        <ListItemIcon>\r\n                            <Badge badgeContent={entityArray.length} color=\"secondary\">\r\n                                {icon}\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                    )}\r\n                    <ListItemText primary={title} />\r\n                    {tabs.get(title) ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={tabs.get(title)} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {entityArray.map(item => (\r\n                            <ListItem\r\n                                button\r\n                                className={classes.nested}\r\n                                key={item.id}\r\n                                selected={selectedEntityID === item.id}\r\n                                onClick={(e) => onSelect(item.id)}\r\n                            >\r\n                                {(item instanceof TNode) && (\r\n                                    <ListItemIcon>\r\n                                        <CircleIcon style={{ color: UI.getNodeColor(item) }} />\r\n                                    </ListItemIcon>\r\n                                )}\r\n                                <ListItemText primary={item.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </Box>\r\n        )\r\n    }\r\n    render() {\r\n        const { nodes = [], beams = [] } = this.props\r\n        beams.sort((a: TBeam, b: TBeam) => {\r\n            return a.name > b.name ? 1 : -1\r\n        })\r\n        nodes.sort((a: TNode, b: TNode) => {\r\n            return a.name > b.name ? 1 : -1\r\n        })\r\n        return (\r\n            <Sidebar\r\n                anchor=\"left\"\r\n                title=\"Структура проекта\"\r\n                btnIcon={(<TreePanelIcon />)}\r\n            >\r\n\r\n                {this.viewListItem(nodes, 'Узлы', (<NodeIcon />))}\r\n                {this.viewListItem(beams, 'Стержни', (<BeamIcon />))}\r\n\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import Konva from 'konva';\r\nimport { observer } from \"mobx-react\";\r\nimport * as React from 'react';\r\nimport { Line } from 'react-konva';\r\nimport { TBeam } from 'src/models/Truss';\r\nimport { consts } from 'src/static';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst size = consts.UI.beamSize\r\ninterface UIBeamProps {\r\n    onClick?(e: Konva.KonvaEventObject<MouseEvent>, beam: TBeam): void\r\n    mode?: UIModes,\r\n    selected?: boolean,\r\n    beam: TBeam,\r\n    viewNewPos?: boolean\r\n}\r\nconst UIBeam: React.FC<UIBeamProps> = observer(({\r\n    onClick = () => { },\r\n    mode = UI.UIModes.none,\r\n    selected = false,\r\n    beam,\r\n    viewNewPos = false\r\n}) => {\r\n    let points: number[] = [\r\n        beam.coord.x / consts.UI.koefOnGrid,\r\n        beam.coord.y / consts.UI.koefOnGrid,\r\n        beam.endCoord.x / consts.UI.koefOnGrid,\r\n        beam.endCoord.y / consts.UI.koefOnGrid\r\n    ]\r\n    if (viewNewPos) {\r\n        points = [\r\n            (beam.coord.x + beam.dCoord.x * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid,\r\n            (beam.coord.y - beam.dCoord.y * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid,\r\n            (beam.endCoord.x + beam.dEndCoord.x * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid,\r\n            (beam.endCoord.y - beam.dEndCoord.y * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid\r\n        ]\r\n    }\r\n    return (\r\n        <Line\r\n            opacity={viewNewPos ? 0.3 : 1}\r\n            points={points}\r\n            stroke={UI.getBeamColor(beam)}\r\n            strokeWidth={size}\r\n            shadowBlur={selected && !viewNewPos ? 8 : 2}\r\n\r\n            hitStrokeWidth={viewNewPos ? 0 : size * 4}\r\n            onClick={viewNewPos ? () => { } : (e: any) => onClick(e, beam)}\r\n            onMouseEnter={viewNewPos ? () => { } : (e: any) => UI.beamMouseEnter(e, beam, mode)}\r\n            onMouseLeave={viewNewPos ? () => { } : (e: any) => UI.beamMouseLeave(e)}\r\n        />\r\n    )\r\n})\r\nexport default UIBeam","import * as React from 'react';\r\nimport { Line } from 'react-konva';\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst viewColumns = (widthCell: number, heightBox: number, countOfX: number) => {\r\n    const columns = []\r\n    for (let index = 0; index < countOfX; index++) {\r\n\r\n        columns.push(<Line\r\n            points={[\r\n                index * widthCell,\r\n                0,\r\n                index * widthCell,\r\n                heightBox,\r\n\r\n            ]}\r\n            stroke=\"#ddd\"\r\n            strokeWidth={1}\r\n            key={index}\r\n        />)\r\n\r\n    }\r\n    return columns\r\n}\r\nconst viewRows = (heightCell: number, widthBox: number, countOfY: number) => {\r\n    const rows = []\r\n    for (let index = 0; index < countOfY; index++) {\r\n        rows.push(<Line\r\n            points={[\r\n                0,\r\n                index * heightCell,\r\n                widthBox,\r\n                index * heightCell,\r\n\r\n            ]}\r\n            stroke=\"#ddd\"\r\n            strokeWidth={1}\r\n            key={index}\r\n        />)\r\n    }\r\n    return rows\r\n}\r\nconst UIGrid: React.FC<UIGridProps> = ({ heightBox, heightCell, widthBox, widthCell }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    console.log(\"UIGrid\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns(widthCell, heightBox, countOfX)}\r\n            {viewRows(heightCell, widthBox, countOfY)}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default React.memo(UIGrid)","import Konva from 'konva';\r\nimport { KonvaEventObject } from 'konva/types/Node';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { Arrow, Circle, Group, Line, Text } from 'react-konva';\r\nimport { TNode } from 'src/models/Truss';\r\nimport { consts } from 'src/static';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { NodeFixation } from 'src/models/Truss/TTypes';\r\n\r\n\r\nconst size = consts.UI.nodeSize\r\ninterface UINodeProps {\r\n    node: TNode,\r\n    drag?(e: Konva.KonvaEventObject<DragEvent>, node: TNode): void\r\n    onClick?(e: Konva.KonvaEventObject<MouseEvent>, node: TNode): void\r\n    mode?: UIModes,\r\n    selected?: boolean,\r\n    viewNewPos?: boolean\r\n}\r\n\r\nconst UINode: React.FC<UINodeProps> = observer(({\r\n    node,\r\n    onClick = () => { },\r\n    selected = false,\r\n    mode = UIModes.none,\r\n    drag = () => { },\r\n    viewNewPos = false\r\n}) => {\r\n    const viewForce = (value: number, angle: 0 | 90) => {\r\n        if (!viewNewPos) return (\r\n            <React.Fragment>\r\n                <Arrow\r\n                    points={[\r\n                        0,\r\n                        0,\r\n                        consts.UI.cellSize,\r\n                        0,\r\n                    ]}\r\n                    stroke={UI.theme.palette.grey[300]}\r\n                    strokeWidth={size / 3}\r\n                    shadowBlur={2}\r\n                    pointerLength={consts.UI.cellSize / 10}\r\n                    pointerWidth={consts.UI.cellSize / 10}\r\n                    hitStrokeWidth={size * 2}\r\n                    rotation={value > 0 ? angle : 180 + angle}\r\n                />\r\n                <Text\r\n                    x={angle === 0 ? (value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize) : consts.UI.cellSize / 3}\r\n                    y={angle === 90 ? (value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize / 2) : -consts.UI.cellSize / 1.5}\r\n                    text={value + \" H\"}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    const viewFixation = (angle: 0 | 90) => {\r\n        return (<Group\r\n            x={0}\r\n            y={0}\r\n            rotation={angle}\r\n        >\r\n            <Line\r\n                points={[\r\n                    0, 0,\r\n                    0, consts.UI.cellSize,\r\n                    -consts.UI.cellSize / 2, consts.UI.cellSize,\r\n                    consts.UI.cellSize / 2, consts.UI.cellSize,\r\n                ]}\r\n                stroke={UI.theme.palette.grey[300]}\r\n                strokeWidth={size / 4}\r\n                shadowBlur={2}\r\n            />\r\n            <Circle\r\n                radius={size / 2}\r\n                fill={UI.theme.palette.grey[500]}\r\n                x={0}\r\n                y={consts.UI.cellSize - (size / 1.7)}\r\n            />\r\n        </Group>)\r\n    }\r\n\r\n    if (viewNewPos) {\r\n        if (node.dCoord.x === 0 && node.dCoord.y === 0)\r\n            return <React.Fragment />\r\n    }\r\n\r\n    let x = node.coord.x / consts.UI.koefOnGrid\r\n    let y = node.coord.y / consts.UI.koefOnGrid\r\n    if (viewNewPos) {\r\n        if (node.dCoord.x === 0 && node.dCoord.y === 0) return <React.Fragment />\r\n        x = (node.coord.x + node.dCoord.x * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid\r\n        y = (node.coord.y - node.dCoord.y * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid\r\n\r\n    }\r\n\r\n    return (\r\n        <Group\r\n            opacity={viewNewPos ? 0.3 : 1}\r\n            x={x}\r\n            y={y}\r\n            _useStrictMode\r\n            onClick={viewNewPos ? () => { } : (e: any) => onClick(e, node)}\r\n        >\r\n            {node.forceX !== 0 && viewForce(node.forceX, 0)}\r\n            {node.forceY !== 0 && viewForce(node.forceY, 90)}\r\n            {node.fixation === NodeFixation.X && viewFixation(90)}\r\n            {node.fixation === NodeFixation.Y && viewFixation(0)}\r\n            {node.fixation === NodeFixation.XY && viewFixation(90)}\r\n            {node.fixation === NodeFixation.YX && viewFixation(0)}\r\n\r\n            <Circle\r\n                radius={size}\r\n                x={0}\r\n                y={0}\r\n                fill={UI.getNodeColor(node)}\r\n                shadowBlur={selected && !viewNewPos ? 8 : 2}\r\n                stroke={UI.getNodeStorkeColor(node, mode)}\r\n                strokeWidth={UI.getNodeStorkeWidth(node, mode)}\r\n                hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n            />\r\n            <Text\r\n                x={-size}\r\n                y={-size / 2 - 1}\r\n                align=\"center\"\r\n                fontSize={18}\r\n                fill=\"#fff\"\r\n                shadowBlur={8}\r\n                fontFamily='Trebuchet MS'\r\n                width={size * 2}\r\n                verticalAlign=\"middle\"\r\n                text={node.name}\r\n            />\r\n            <Circle\r\n                radius={size}\r\n                x={0}\r\n                y={0}\r\n                onDragEnd={(e: KonvaEventObject<DragEvent>) => {\r\n                    e.target.to({\r\n                        x: 0,\r\n                        y: 0,\r\n                    })\r\n                }}\r\n                hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n                draggable={mode === UIModes.move && !node.isStatic && !viewNewPos}\r\n                onMouseEnter={viewNewPos ? () => { } : (e: any) => UI.nodeMouseEnter(e, node, mode)}\r\n                onMouseLeave={viewNewPos ? () => { } : (e: any) => UI.nodeMouseLeave(e)}\r\n                onDragMove={(e: KonvaEventObject<DragEvent>) => drag(e, node)}\r\n            />\r\n        </Group>\r\n\r\n    )\r\n})\r\n\r\n\r\n\r\n// @observer\r\n// class UINode extends React.Component<UINodeProps> {\r\n//     constructor(props: UINodeProps) {\r\n//         super(props)\r\n//         this.viewForce = this.viewForce.bind(this)\r\n//     }\r\n//     viewForce = (value: number, angle: 0 | 90) => {\r\n//         if (!this.props.viewNewPos) return (\r\n//             <React.Fragment>\r\n//                 <Arrow\r\n//                     points={[\r\n//                         0,\r\n//                         0,\r\n//                         consts.UI.cellSize,\r\n//                         0,\r\n//                     ]}\r\n//                     stroke={UI.theme.palette.grey[300]}\r\n//                     strokeWidth={size / 3}\r\n//                     shadowBlur={2}\r\n//                     pointerLength={consts.UI.cellSize / 10}\r\n//                     pointerWidth={consts.UI.cellSize / 10}\r\n//                     hitStrokeWidth={size * 2}\r\n//                     rotation={value > 0 ? angle : 180 + angle}\r\n//                 />\r\n//                 <Text\r\n//                     x={angle === 0 ? (value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize) : consts.UI.cellSize / 3}\r\n//                     y={angle === 90 ? (value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize / 2) : -consts.UI.cellSize / 1.5}\r\n//                     text={value + \" H\"}\r\n//                 />\r\n//             </React.Fragment>\r\n//         )\r\n//     }\r\n//     viewFixation = (angle: 0 | 90) => {\r\n//         return (<Group\r\n//             x={0}\r\n//             y={0}\r\n//             rotation={angle}\r\n//         >\r\n//             <Line\r\n//                 points={[\r\n//                     0, 0,\r\n//                     0, consts.UI.cellSize,\r\n//                     -consts.UI.cellSize / 2, consts.UI.cellSize,\r\n//                     consts.UI.cellSize / 2, consts.UI.cellSize,\r\n//                 ]}\r\n//                 stroke={UI.theme.palette.grey[300]}\r\n//                 strokeWidth={size / 4}\r\n//                 shadowBlur={2}\r\n//             />\r\n//             <Circle\r\n//                 radius={size / 2}\r\n//                 fill={UI.theme.palette.grey[500]}\r\n//                 x={0}\r\n//                 y={consts.UI.cellSize - (size / 1.7)}\r\n//             />\r\n//         </Group>)\r\n//     }\r\n//     render() {\r\n//         const {\r\n//             node,\r\n//             viewNewPos = false,\r\n//             onClick = () => { },\r\n//             selected = false,\r\n//             mode = UIModes.none,\r\n//             drag = () => { }\r\n//         } = this.props\r\n\r\n\r\n//         let x = node.coord.x / consts.UI.koefOnGrid\r\n//         let y = node.coord.y / consts.UI.koefOnGrid\r\n\r\n// if (viewNewPos) {\r\n//     if (node.dCoord.x === 0 && node.dCoord.y === 0) return <React.Fragment />\r\n//     x = (node.coord.x + node.dCoord.x * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid\r\n//     y = (node.coord.y - node.dCoord.y * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid\r\n\r\n// }\r\n\r\n\r\n//         return (\r\n//             <Group\r\n//                 opacity={viewNewPos ? 0.3 : 1}\r\n//                 x={x}\r\n//                 y={y}\r\n//                 _useStrictMode\r\n//                 onClick={viewNewPos ? () => { } : (e: any) => onClick(e, node)}\r\n//             >\r\n//                 {node.forceX !== 0 && this.viewForce(node.forceX, 0)}\r\n//                 {node.forceY !== 0 && this.viewForce(node.forceY, 90)}\r\n//                 {node.fixation === NodeFixation.X && this.viewFixation(90)}\r\n//                 {node.fixation === NodeFixation.Y && this.viewFixation(0)}\r\n//                 {node.fixation === NodeFixation.XY && this.viewFixation(90)}\r\n//                 {node.fixation === NodeFixation.YX && this.viewFixation(0)}\r\n//                 <Circle\r\n//                     radius={size}\r\n//                     x={0}\r\n//                     y={0}\r\n//                     fill={UI.getNodeColor(node)}\r\n//                     shadowBlur={selected && !viewNewPos ? 8 : 2}\r\n//                     stroke={UI.getNodeStorkeColor(node, mode)}\r\n//                     strokeWidth={viewNewPos ? 0 : UI.getNodeStorkeWidth(node, mode)}\r\n//                     hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n//                 />\r\n//                 <Text\r\n//                     x={-size}\r\n//                     y={-size / 2 - 1}\r\n//                     align=\"center\"\r\n//                     fontSize={18}\r\n//                     fill=\"#fff\"\r\n//                     shadowBlur={8}\r\n//                     fontFamily='Trebuchet MS'\r\n//                     width={size * 2}\r\n//                     verticalAlign=\"middle\"\r\n//                     text={node.name}\r\n//                 />\r\n//                 <Circle\r\n//                     radius={size}\r\n//                     x={0}\r\n//                     y={0}\r\n//                     onDragEnd={(e: KonvaEventObject<DragEvent>) => {\r\n//                         e.target.to({\r\n//                             x: 0,\r\n//                             y: 0,\r\n//                         })\r\n//                     }}\r\n//                     hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n//                     draggable={mode === UIModes.move && !node.isStatic && !viewNewPos}\r\n//                     onMouseEnter={viewNewPos ? () => { } : (e: any) => UI.nodeMouseEnter(e, node, mode)}\r\n//                     onMouseLeave={viewNewPos ? () => { } : (e: any) => UI.nodeMouseLeave(e)}\r\n//                     onDragMove={(e: KonvaEventObject<DragEvent>) => drag(e, node)}\r\n//                 />\r\n//             </Group>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Box } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\nimport ScrollBar from 'react-custom-scrollbars';\r\nimport { UIBeam, UINode } from '..';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { ITrussArray } from 'src/models/Truss/TTypes';\r\nimport { TEntity } from 'src/models/Truss';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: \"#ddd\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: 8,\r\n    }\r\n})\r\n\r\nexport interface UIStageProps extends ITrussArray, WithStyles<typeof styles> {\r\n    uiMode: UIModes,\r\n    selectedEntity: TEntity | null,\r\n    stageHeight: number,\r\n    stageWidth: number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: TEntity): void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent | TouchEvent>): void,\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: TEntity): void,\r\n    stage: React.RefObject<Stage & Konva.Stage>,\r\n    viewNewPos: boolean,\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = (observer(({ classes, stage, stageHeight, stageWidth, onClick, onMouseMove, onDrag, beams, nodes, uiMode, selectedEntity, viewNewPos }) => {\r\n    return (\r\n        <ScrollBar\r\n            autoHide>\r\n            <Box style={{ width: stageWidth + consts.UI.sidebarWidth * 2 + 20, height: stageHeight + consts.UI.sidebarWidth }}\r\n                className={classes.root}>\r\n                <Stage\r\n                    height={stageHeight}\r\n                    width={stageWidth}\r\n                    style={{ height: stageHeight, width: stageWidth }}\r\n                    className={classes.stage}\r\n                    onClick={onClick}\r\n                    onMouseMove={onMouseMove}\r\n                    ref={stage}\r\n                >\r\n\r\n                    <Layer className=\"layer\" >\r\n\r\n                        <UIGrid\r\n                            heightCell={consts.UI.cellSize}\r\n                            widthCell={consts.UI.cellSize}\r\n                            heightBox={stageHeight}\r\n                            widthBox={stageWidth}\r\n                        />\r\n\r\n                        {beams.map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === beam}\r\n                            />\r\n                        ))}\r\n\r\n                        {nodes.map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={onDrag}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === node}\r\n                            />\r\n                        ))}\r\n\r\n                        {viewNewPos && beams.map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === beam}\r\n                                viewNewPos={true}\r\n                            />\r\n                        ))}\r\n                        {viewNewPos && nodes.map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={onDrag}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === node}\r\n                                viewNewPos={true}\r\n                            />\r\n                        ))}\r\n                    </Layer>\r\n                </Stage>\r\n            </Box>\r\n\r\n        </ScrollBar>\r\n\r\n\r\n\r\n    )\r\n}))\r\n\r\nexport default withStyles(styles)(UIStage)","import { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { TBeam, TNode, Truss as farm } from 'src/models/Truss';\r\nimport TrussFactory from 'src/models/Truss/TFactory';\r\nimport { ITBeam, ITNode, NodeFixation, TrussCalcProps } from 'src/models/Truss/TTypes';\r\nimport { consts } from 'src/static';\r\nimport { UIFarm } from './components';\r\n\r\ninterface State {\r\n    calculation: boolean,\r\n    calculated: boolean,\r\n    loadFromCache: boolean\r\n}\r\ninterface Props {\r\n\r\n}\r\n@observer\r\nexport class TrussContainer extends React.Component<Props, State>  {\r\n    private nodesCacheName = \"nodes:array\"\r\n    private beamsCacheName = \"beams:array\"\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            calculation: false,\r\n            calculated: false,\r\n            loadFromCache: false\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        if (localStorage.getItem(this.nodesCacheName) && localStorage.getItem(this.beamsCacheName))\r\n            this.setState({ loadFromCache: true })\r\n    }\r\n    componentDidMount() {\r\n        this.setDefaultTruss()\r\n    }\r\n\r\n    // Node\r\n    addNode = (x: number, y: number, options?: ITNode) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            return farm.addNode({\r\n                ...options,\r\n                coord: {\r\n                    x: x * consts.UI.koefOnGrid,\r\n                    y: y * consts.UI.koefOnGrid\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.error(\"addNode\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    moveNode = (_node: TNode, _x: number, _y: number) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            const x = _x * consts.UI.koefOnGrid\r\n            const y = _y * consts.UI.koefOnGrid\r\n            farm.moveNode(_node.id, x, y)\r\n        } catch (e) {\r\n            console.error(\"moveNode\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    // Beam\r\n    addBeam = (options?: ITBeam) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            return farm.addBeam(options)\r\n        } catch (e) {\r\n            console.error(\"addBeam\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    moveEndBeam = (_beam: TBeam, _x: number, _y: number) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            const x = _x * consts.UI.koefOnGrid\r\n            const y = _y * consts.UI.koefOnGrid\r\n            return farm.moveEndBeamWhileDraving(_beam.id, x, y)\r\n        } catch (e) {\r\n            console.error(\"moveEndBeam\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    connectBeamToNode = (_node: TNode, _beam: TBeam, place: 'start' | 'end') => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            switch (place) {\r\n                case 'start': {\r\n                    return farm.connectBeamToStartNode(_node.id, _beam.id)\r\n                }\r\n                case 'end': {\r\n                    return farm.connectBeamToEndNode(_node.id, _beam.id)\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            console.error(\"connectBeamToNode\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    // Generals actions\r\n    deleteEntity = (id: string) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            farm.delete(id)\r\n        } catch (e) {\r\n            console.error(\"deleteEntity\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    // Calculate\r\n    calculate = async (props?: TrussCalcProps) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            this.setState({ calculation: true })\r\n            console.log(\"Calculate\");\r\n            await farm.calculate()\r\n            this.setState({ calculated: true, calculation: false })\r\n\r\n        } catch (e) {\r\n            console.error(\"calculate\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n\r\n            this.setState({ calculated: false, calculation: false })\r\n        }\r\n    }\r\n\r\n    setDefaultTruss = () => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            console.log(\"setDefaultTruss\");\r\n\r\n            if (this.state.loadFromCache) {\r\n                this.loadTrussFromCache()\r\n            } else {\r\n                const _truss = genTruss()\r\n                farm.setNodes(_truss)\r\n                farm.sortNodesByCoord()\r\n                TrussFactory.firstPlacement(farm.nodesArray, farm.beamsArray)\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(\"setDefaultTruss\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    cacheTruss = () => {\r\n        const { beamsJSON, nodesJSON } = TrussFactory.toString(farm)\r\n        localStorage.setItem(this.nodesCacheName, nodesJSON)\r\n        localStorage.setItem(this.beamsCacheName, beamsJSON)\r\n    }\r\n\r\n    loadTrussFromCache = async () => {\r\n        const nodesJSON = localStorage.getItem(this.nodesCacheName)\r\n        const beamsJSON = localStorage.getItem(this.beamsCacheName)\r\n        if (nodesJSON && beamsJSON) {\r\n            const { nodes, beams } = await TrussFactory.parse(nodesJSON, beamsJSON)\r\n            farm.setNodes(nodes)\r\n            farm.setBeams(beams)\r\n        }\r\n    }\r\n    clearTruss = async () => {\r\n        await this.setState({ loadFromCache: false })\r\n        localStorage.removeItem(this.nodesCacheName)\r\n        localStorage.removeItem(this.beamsCacheName)\r\n        await farm.clear()\r\n        this.setDefaultTruss()\r\n    }\r\n    render() {\r\n        return (\r\n            <UIFarm\r\n                {...this.state}\r\n                {...this}\r\n                farm={farm}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst genTruss = () => {\r\n    return TrussFactory.createNodes(\r\n        [\r\n            {\r\n                x: 0,\r\n                y: 1000,\r\n                fixation: NodeFixation.XY,\r\n            },\r\n            {\r\n                x: 3000,\r\n                y: 1000,\r\n                fixation: NodeFixation.Y,\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                x: 1000,\r\n                y: 1000,\r\n                forceY: 9000\r\n            }\r\n        ],\r\n        [\r\n            // {\r\n            //     x: 1000,\r\n            //     y: 1000\r\n            // }, {\r\n            //     x: 700,\r\n            //     y: 700\r\n            // }, {\r\n            //     x: 1000,\r\n            //     y: 700\r\n            // }\r\n        ]\r\n    )\r\n}\r\n\r\nexport default TrussContainer","import TrussContainer from './TrussContainer'\r\n\r\nexport default TrussContainer","import * as React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Helment from 'react-helmet'\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { Home, TrussPage } from './pages'\r\nimport { navPath } from './navigation'\r\nimport { str, img } from './static/const';\r\nimport { theme } from './utils/UI';\r\ninterface IAppProps { }\r\n\r\nclass App extends React.Component<IAppProps> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helment\r\n\t\t\t\t\thtmlAttributes={{ \"leng\": \"en\" }}\r\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\r\n\t\t\t\t\tdefaultTitle={str.title}\r\n\t\t\t\t\tlink={[\r\n\t\t\t\t\t\t{ \"rel\": \"shortcut icon\", \"href\": img.bridgeIcon_2 },\r\n\t\t\t\t\t\t{ \"rel\": \"image_src\", \"href\": img.airBridge },\r\n\t\t\t\t\t\t{ \"rel\": \"stylesheet\", \"href\": 'https://fonts.googleapis.com/css?family=Roboto:300,400,500' },\r\n\t\t\t\t\t\t{ \"rel\": \"stylesheet\", \"href\": 'https://fonts.googleapis.com/icon?family=Material+Icons' }\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tmeta={[\r\n\t\t\t\t\t\t{ \"charSet\": \"utf-8\" },\r\n\t\t\t\t\t\t{ \"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\r\n\t\t\t\t\t\t{ \"name\": \"theme-color\", \"content\": \"#000000\" },\r\n\t\t\t\t\t\t{ \"name\": \"description\", \"content\": str.description },\r\n\t\t\t\t\t\t{ \"property\": \"og:type\", \"content\": \"website\" },\r\n\t\t\t\t\t\t{ \"property\": \"og:title\", \"content\": str.title },\r\n\t\t\t\t\t\t{ \"property\": \"og:image\", \"content\": img.airBridge },\r\n\t\t\t\t\t\t{ \"property\": \"vk:image\", \"content\": img.airBridge },\r\n\t\t\t\t\t\t{ \"property\": \"twitter:image\", \"content\": img.airBridge },\r\n\t\t\t\t\t\t{ \"property\": \"og:url\", \"content\": str.url },\r\n\t\t\t\t\t]}\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\r\n\t\t\t\t\t\t<Route path={navPath.TRUSS_PAGE} component={TrussPage} />\r\n\t\t\t\t\t</Switch>\r\n\r\n\t\t\t\t</ThemeProvider>\r\n\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { history } from './utils';\r\nimport { HashRouter, Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst isGitHubPages = process.env.REACT_APP_GHP === 'true' || false;\r\n\r\nconst Root = () => {    \r\n    if (isGitHubPages) return (\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    )\r\n    else return (\r\n        <Router history={history}>\r\n            <App />\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nReactDOM.render(    \r\n    <Root/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}