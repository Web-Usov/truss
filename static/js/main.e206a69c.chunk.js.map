{"version":3,"sources":["pages/Farm/components/UIToolBar.tsx","utils/history.ts","utils/math.ts","models/Farm/ModelEntity.ts","models/Farm/ModelNode.ts","models/Farm/ModelBeam.ts","models/Farm/ModelFarm.ts","pages/Farm/farmReducer.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Farm/farmTypes.ts","pages/Home/homeTypes.ts","theme.ts","pages/Farm/components/UIFarmEntities/UINode.tsx","pages/Farm/components/UIFarmEntities/UIBeam.tsx","pages/Farm/components/UIFarmEntities/UIGrid.tsx","pages/Farm/components/UIFarmEntities/UIStage.tsx","pages/Farm/components/UITreePanel.tsx","pages/Farm/components/UIEntityInfo.tsx","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","static/const.ts","static/ogImage.png","static/icon.png","static/bridge.png","static/airBridge.png"],"names":["UIModes","createBrowserHistory","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","UI_cellSize","y","Entity","props","Object","classCallCheck","this","id","angle","name","newX","newY","Date","now","Node","_Entity","_this","possibleConstructorReturn","getPrototypeOf","call","beamsID","forcesID","inherits","createClass","key","value","beamID","find","push","filter","forceID","Beam","length","startConnectedNodeID","endConnectedNodeID","newAngle","nodeID","place","cos","sin","endX","getEndX","endY","getEndY","angleBePoints","lengthBePoints","Farm","_farm","fixedNodes","forces","nodes","beams","time","Map","arguments","undefined","getNodes","item","node","set","beam","delete","get","Error","concat","force","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getNode","map","getForce","_this2","getBeam","_beam","_node","connectNode","connectBeam","getBeamsOnNode","moveEndPoint","entity","_this3","forEach","removeBeam","deleteBeam","deleteNode","_entity","deleteEntity","_this4","moveStartPoint","defaultFarmState","workSpace","defaultHomeState","title","mainReducer","combineReducers","farm","state","action","type","home","objectSpread","createStore","withStyles","theme","createStyles","root","backgroundColor","palette","primary","dark","padding","spacing","display","borderBottomColor","grey","borderBottom","_ref","onSelect","selected","classes","mods","mod","move","icon","react","ZoomOutMap","addNode","MyLocation","addBeam","Power","Delete","className","Paper","ToggleButtonGroup","exclusive","onChange","e","size","ToggleButton","Tooltip","createMuiTheme","main","light","secondary","background","default","UINode","drag","mode","onClick","UI_nodeSize","ReactKonva","radius","fill","shadowBlur","stroke","addBeamStart","getStorkeColor","strokeWidth","getStorkeWidth","draggable","_useStrictMode","onDragMove","_onClick","_x","apply","toString","onMouseEnter","stage","target","getStage","none","container","style","cursor","hundleMouseEnter","onMouseLeave","hundleMouseLeave","UIBeam","UI_beamSize","points","UIGrid","widthCell","heightCell","heightBox","widthBox","countOfX","countOfY","columns","index","viewColumns","rows","viewRows","flexGrow","stageHeight","stageWidth","onMouseMove","onDrag","uiMode","selectedEntity","height","width","ref","UIFarmEntities_UIGrid","getBeams","UIFarmEntities_UIBeam","UIFarmEntities_UINode","UITreePanel","openedNodes","openedBeams","switchTab","bind","assertThisInitialized","tab","setState","_this$props","_this$state","openTab","List","list","ListItem","button","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","disablePadding","nested","React","flexDirection","borderRightColor","borderRight","overflowY","paddingLeft","UIEntityInfo","onDelete","Card","card","CardContent","Typography","color","gutterBottom","getTypeStr","variant","CardActions","disableSpacing","IconButton","aria-label","_this$props2","viewCard","borderLeftColor","borderLeft","fontSize","pos","marginBottom","UIFarm","paintEntity","setFarm","updateFarm","onKeyHandle","_setStageSize","_deleteEntity","_selectEntity","window","addEventListener","removeEventListener","nextProps","update","isEmptyPlace","evt","preventDefault","_e$evt","layerX","layerY","cellX","cellY","connectBeamToNode","_this$state2","_e$evt2","_this$state3","_e$evt3","moveNodeTo","_deletePaintEntity","_this$state4","current","attrs","clientWidth","clientHeight","_this$state5","Box","esm","keyEventName","keyValue","components_UIToolBar","setSelectedMode","stageBox","components_UITreePanel","UIFarmEntities_UIStage","components_UIEntityInfo","overflow","connect","dispatch","bindActionCreators","farmActions","navPath","alignItems","justifyContent","logo","descripton","btn","src","bridgeIcon_2","alt","align","description","Button","Link","to","Home","homeHeader","minWidth","innerWidth","minHeight","innerHeight","setTitle","homeActions","App","Helmet_default","a","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","path","exact","ReactDOM","render","react_default","createElement","es","store","react_router_dom","src_App","document","getElementById","__webpack_require__","r","__webpack_exports__","__dirname","d","url","favicon","_ogImage_png__WEBPACK_IMPORTED_MODULE_0__","_ogImage_png__WEBPACK_IMPORTED_MODULE_0___default","n","_icon_png__WEBPACK_IMPORTED_MODULE_1__","_icon_png__WEBPACK_IMPORTED_MODULE_1___default","_bridge_png__WEBPACK_IMPORTED_MODULE_2__","_bridge_png__WEBPACK_IMPORTED_MODULE_2___default","_airBridge_png__WEBPACK_IMPORTED_MODULE_3__","_airBridge_png__WEBPACK_IMPORTED_MODULE_3___default","path__WEBPACK_IMPORTED_MODULE_4__","process","resolve","module","exports","p"],"mappings":"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","file":"static/js/main.e206a69c.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Tooltip, Paper } from '@material-ui/core';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { ZoomOutMap as MoveIcon, MyLocation as AddNodeIcon, Delete as DeleteIcon, Power as ConnectIcon } from '@material-ui/icons';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        borderBottomColor: theme.palette.grey[800],\r\n        borderBottom: 'solid 2px'\r\n    }\r\n})\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport interface IMode {\r\n    name: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIToolBar: React.FC<UIToolBarProps> = ({ onSelect, selected, classes }) => {\r\n    const mods: IMode[] = [\r\n        {\r\n            name: \"Move\",\r\n            mod: UIModes.move,\r\n            icon: (<MoveIcon />)\r\n        },\r\n        {\r\n            name: \"Add Node\",\r\n            mod: UIModes.addNode,\r\n            icon: (<AddNodeIcon />)\r\n        },\r\n        {\r\n            name: \"Add Beam\",\r\n            mod: UIModes.addBeam,\r\n            icon: (<ConnectIcon />)\r\n        },\r\n        {\r\n            name: \"Delete\",\r\n            mod: UIModes.delete,\r\n            icon: (<DeleteIcon />)\r\n        }\r\n    ]\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper>\r\n                <ToggleButtonGroup\r\n                    value={selected}\r\n                    exclusive\r\n                    onChange={(e, value) => onSelect(value)}\r\n                    size=\"small\"\r\n                >\r\n                    {mods.map(item => (\r\n                        <ToggleButton value={item.mod} key={item.name}>\r\n                            <Tooltip title={item.name}>\r\n                                {item.icon}\r\n                            </Tooltip>\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ToggleButtonGroup>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolBar)","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { consts } from \"src/static\";\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x:number):number{        \r\n        return  Math.round(x / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n    static cellY(y:number):number{        \r\n        return  Math.round(y / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","export interface IEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\nexport class Entity implements IEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    constructor(props: IEntity) {\r\n        this.id = Date.now()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id + \"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { IEntity, Entity } from './ModelEntity';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: number[]\r\n    forcesID?: number[],\r\n}\r\n\r\nexport class Node extends Entity {\r\n    beamsID: number[];\r\n    forcesID: number[];\r\n    constructor(props:INode) {\r\n        super(props)\r\n        this.beamsID = props.beamsID || []\r\n        this.forcesID = props.forcesID  || []\r\n    }\r\n    connectBeam(beamID: number):boolean {\r\n        if (!this.beamsID.find(id => id === beamID)){\r\n            this.beamsID.push(beamID)\r\n            return true            \r\n        }\r\n        return false\r\n    }\r\n    removeBeam(beamID: number) {\r\n        \r\n        this.beamsID  = this.beamsID.filter(id => id !== beamID)\r\n    }\r\n    connectForce(forceID: number) {\r\n        if (!this.forcesID.find(id => id === forceID))\r\n            this.forcesID.push(forceID)\r\n    }\r\n    removeForce(forceID: number) {\r\n        this.beamsID   = this.forcesID.filter(id => id !== forceID)\r\n    }\r\n}","import { IEntity, Entity } from \"./ModelEntity\";\r\nimport { MyMath } from \"src/utils\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: number\r\n    endConnectedNodeID?: number\r\n    newAngle?:number\r\n}\r\n\r\nexport class Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n    newAngle:number\r\n    constructor(props: IBeam) {\r\n        super(props)\r\n        this.length = props.length || 0\r\n        this.startConnectedNodeID = props.startConnectedNodeID || 0\r\n        this.endConnectedNodeID = props.endConnectedNodeID || 0\r\n        this.newAngle = this.angle\r\n    }\r\n\r\n    connectNode(nodeID: number, place: 'start' | 'end'): void {\r\n        switch (place) {\r\n            case 'start':{\r\n                this.startConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            case 'end':{\r\n                this.endConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    removeNode(place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n        this.startConnectedNodeID = 0 :\r\n        this.endConnectedNodeID = 0\r\n    }\r\n    getEndX():number{\r\n        return this.x + (this.length * Math.cos(this.angle * Math.PI))\r\n    }\r\n    getEndY():number{\r\n        return this.y + (this.length * Math.sin(this.angle * Math.PI))\r\n    }\r\n    moveStartPoint(x:number,y:number):void{\r\n        const endX = this.getEndX()\r\n        const endY = this.getEndY()\r\n        this.x = x\r\n        this.y = y\r\n        this.angle = MyMath.angleBePoints(x,y, endX,endY)\r\n        this.length = MyMath.lengthBePoints(x,y, endX,endY)\r\n    }\r\n    \r\n    moveEndPoint(x:number,y:number):void{\r\n        this.angle = MyMath.angleBePoints(this.x,this.y,x,y)\r\n        this.length = MyMath.lengthBePoints(this.x,this.y,x,y)\r\n    }\r\n}","import { FixedNode } from \"./ModelFixedNode\";\r\nimport { Force } from \"./ModelForce\";\r\nimport { Node } from \"./ModelNode\";\r\nimport { Beam } from \"./ModelBeam\";\r\nimport { Entity } from \"./ModelEntity\";\r\n\r\n\r\n\r\n\r\nexport interface IFarm {\r\n    fixedNodes?: Map<number, FixedNode>\r\n    forces?: Map<number, Force>\r\n    nodes?: Map<number, Node>\r\n    beams?: Map<number, Beam>\r\n}\r\n\r\n\r\n\r\nexport class Farm implements IFarm {\r\n    fixedNodes: Map<number, FixedNode>\r\n    forces: Map<number, Force>\r\n    nodes: Map<number, Node>\r\n    beams: Map<number, Beam>\r\n    time: number\r\n    constructor(_farm?: Farm) {\r\n        this.nodes = _farm ? _farm.nodes : new Map()\r\n        this.fixedNodes = _farm ? _farm.fixedNodes : new Map()\r\n        this.forces = _farm ? _farm.forces : new Map()\r\n        this.beams = _farm ? _farm.beams : new Map()\r\n        this.time = Date.now()\r\n\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\"): boolean {\r\n        const oldNode = this.getNodes().find(item => item.x === x && item.y === y)\r\n        if(oldNode) return false\r\n        const node = new Node({\r\n            x,\r\n            y,\r\n            angle,\r\n            name\r\n        })\r\n        this.nodes.set(node.id, node)\r\n        return true\r\n    }\r\n    addBeam(x: number, y: number): Beam {\r\n        const beam = new Beam({\r\n            x,\r\n            y\r\n        })\r\n        this.beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n    private deleteNode(nodeID: number): void {\r\n        this.nodes.delete(nodeID)\r\n    }\r\n    private deleteBeam(beamID: number): void {\r\n        this.beams.delete(beamID)\r\n    }\r\n\r\n    getNode(nodeID: number): Node {\r\n        const node = this.nodes.get(nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number): Beam {\r\n        const beam = this.beams.get(beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number): Force {\r\n        const force = this.forces.get(forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n\r\n    getNodes(): Node[] {\r\n        const nodes: Node[] = [];\r\n        for (let node of this.nodes.values()) {\r\n            nodes.push(node)\r\n        }\r\n        return nodes\r\n    }\r\n    getBeams(): Beam[] {\r\n        const beams: Beam[] = [];\r\n        for (let beam of this.beams.values()) {\r\n            beams.push(beam)\r\n        }\r\n        return beams\r\n    }\r\n\r\n    getForcesOnNode(nodeID: number): Force[] {\r\n        const forces: Force[] = this.getNode(nodeID).forcesID.map(forceID => this.getForce(forceID))\r\n        return forces\r\n    }\r\n    getBeamsOnNode(nodeID: number): Beam[] {\r\n        const beams: Beam[] = this.getNode(nodeID).beamsID.map(beamID => this.getBeam(beamID))\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): Node[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n\r\n    connectBeamToNode(beam: Beam | number, node: Node | number, place: 'start' | 'end' = 'start'): boolean {\r\n        let _beam: Beam = beam instanceof Beam ? beam : this.getBeam(beam)\r\n        let _node: Node = node instanceof Node ? node : this.getNode(node)\r\n\r\n        switch (place) {\r\n            case 'start': {\r\n\r\n                _beam.connectNode(_node.id, 'start')\r\n                _node.connectBeam(_beam.id)\r\n                break;\r\n            }\r\n            case 'end': {\r\n                const beams = this.getBeamsOnNode(_beam.startConnectedNodeID)\r\n                const oldBeam = beams.find(item =>\r\n                    item.startConnectedNodeID === _beam.startConnectedNodeID && item.endConnectedNodeID === _node.id ||\r\n                    item.startConnectedNodeID === _node.id && item.endConnectedNodeID === _beam.startConnectedNodeID ||\r\n                    item.id === _beam.id && item.endConnectedNodeID === _beam.id\r\n                )\r\n\r\n\r\n\r\n                if (!oldBeam && _node.connectBeam(_beam.id)) {\r\n                    _beam.moveEndPoint(_node.x, _node.y)\r\n                    _beam.connectNode(_node.id, \"end\")\r\n                } else return false\r\n                break;\r\n            }\r\n            default: return false\r\n        }\r\n\r\n        return true\r\n    }\r\n    deleteEntity(entity: Entity | number) {\r\n        if (entity instanceof Node) {\r\n            // const beams = this.getBeamsOnNode(entity.id)\r\n            const beams = entity.beamsID.map(beamID => this.getBeam(beamID))\r\n            beams.forEach(beam => {\r\n                if (beam.startConnectedNodeID === entity.id) this.getNode(beam.endConnectedNodeID).removeBeam(beam.id)\r\n                else this.getNode(beam.startConnectedNodeID).removeBeam(beam.id)\r\n                this.deleteBeam(beam.id)\r\n            })\r\n            this.deleteNode(entity.id)\r\n        } else if (entity instanceof Beam) {\r\n            [entity.startConnectedNodeID,entity.endConnectedNodeID].forEach(nodeID => {\r\n                if(nodeID > 0){\r\n                    this.getNode(nodeID).removeBeam(entity.id)\r\n                }\r\n            })\r\n            this.deleteBeam(entity.id)\r\n        } else if(entity instanceof Entity){\r\n            const _entity = this.nodes.get(entity.id) || this.beams.get(entity.id)\r\n            if(_entity) this.deleteEntity(_entity)\r\n        }else{            \r\n            const _entity = this.nodes.get(entity) || this.beams.get(entity)\r\n            if(_entity) this.deleteEntity(_entity)\r\n        }\r\n    }\r\n    moveNodeTo(nodeID: number, x: number, y: number): void {\r\n        const node = this.getNode(nodeID)\r\n        node.x = x\r\n        node.y = y\r\n        node.beamsID.forEach(beamID => {\r\n            const beam = this.getBeam(beamID)\r\n            if (beam.startConnectedNodeID === nodeID) {\r\n                beam.moveStartPoint(x, y)\r\n            } else if (beam.endConnectedNodeID === nodeID) {\r\n                beam.moveEndPoint(x, y)\r\n            }\r\n        })\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport interface IFarmStore {\r\n    workSpace: Farm\r\n\r\n}\r\n\r\nexport const defaultFarmState: IFarmStore = {\r\n    workSpace: new Farm(),\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case FARM_UPDATE:{\r\n            const newState : IFarmStore = {workSpace:new Farm(action.workSpace)}\r\n            \r\n            return newState\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeStore, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeStore\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import { Action } from \"redux\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const FARM_UPDATE = 'FARM_UPDATE'\r\n\r\nexport interface IActionFarmUpdate extends Action {\r\n    type: typeof FARM_UPDATE,\r\n    workSpace:Farm\r\n}\r\n\r\nexport type FarmActions = IActionFarmUpdate;","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","\r\nimport {  createMuiTheme } from '@material-ui/core';\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark:\"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light:'#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\"\r\n        },\r\n        background:{\r\n            default:'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }  \r\n        \r\n    },\r\n});\r\n\r\nexport default theme","import * as React from 'react'\r\nimport { Circle, Stage } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from '../UIToolBar';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\n\r\nexport interface UINodeProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, node: Node): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, node: Node): void\r\n    node: Node,\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\n\r\nconst UINode: React.FC<UINodeProps> = ({ node, drag, mode, onClick, selected }) => {\r\n\r\n    const size = consts.UI_nodeSize\r\n\r\n    const hundleMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n\r\n        switch (mode) {\r\n            case UIModes.delete:\r\n            case UIModes.none: {\r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            }\r\n\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                stage.container().style.cursor = 'crosshair'\r\n                break\r\n            }\r\n            case UIModes.move: {\r\n                stage.container().style.cursor = 'move'\r\n                break\r\n            }\r\n\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n    const hundleMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n        stage.container().style.cursor = 'default'\r\n    }\r\n    const getStorkeColor = (mode: UIModes):string => {\r\n        switch (mode) {\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart:\r\n            case UIModes.move:{\r\n                return theme.palette.primary.light\r\n            }\r\n            default:\r\n                return theme.palette.secondary.main\r\n        }\r\n    }\r\n    const getStorkeWidth = (mode :UIModes):number => {\r\n        switch (mode) {\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart:\r\n            case UIModes.move:{\r\n                return 2\r\n            }\r\n            default:\r\n                return 0\r\n        }\r\n\r\n    }\r\n    return (\r\n        <React.Fragment\r\n            key={node.id}>\r\n            {/* <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            /> */}\r\n\r\n            <Circle\r\n                className=\"MyCircle\"\r\n                radius={size}\r\n                x={node.x}\r\n                y={node.y}\r\n                fill={theme.palette.secondary.main}\r\n                shadowBlur={selected ? 8 : 2}\r\n                stroke={getStorkeColor(mode)}\r\n                strokeWidth={getStorkeWidth(mode)}\r\n            />\r\n            <Circle\r\n\r\n                radius={size * 2}\r\n                x={node.x}\r\n                y={node.y}\r\n                draggable={mode === UIModes.move}\r\n                _useStrictMode\r\n                onDragMove={(e) => drag(e, node)}\r\n                onClick={(e) => onClick(e, node)}\r\n                onMouseEnter={(e) => hundleMouseEnter(e, mode)}\r\n                onMouseLeave={(e) => hundleMouseLeave(e, mode)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Line, Stage } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { UIModes } from '../UIToolBar';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\n\r\nexport interface UIBeamProps {\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    beam: Beam,\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\n\r\nconst UIBeam: React.FC<UIBeamProps> = ({ beam,  mode, onClick, selected }) => {\r\n    const size = consts.UI_beamSize\r\n    const hundleMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n    \r\n        switch (mode) {\r\n            case UIModes.delete:\r\n            case UIModes.none:{            \r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            }\r\n\r\n            default:{\r\n                break\r\n            }\r\n        }\r\n    \r\n    }\r\n    const hundleMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n        stage.container().style.cursor = 'default'\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.getEndX(),\r\n                    beam.getEndY()\r\n                ]}\r\n                stroke={theme.palette.secondary.light}\r\n                strokeWidth={size}\r\n                shadowBlur={selected ? 8 : 2}\r\n            />\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.getEndX(),\r\n                    beam.getEndY()\r\n                ]}\r\n                strokeWidth={size*4} \r\n                stroke=\"transparent\"\r\n                onClick={(e) => onClick(e,beam)}\r\n                onMouseEnter={(e) => hundleMouseEnter(e, mode)}\r\n                onMouseLeave={(e) => hundleMouseLeave(e)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIBeam","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst UIGrid: React.FC<UIGridProps> = ({ widthCell, heightCell, heightBox, widthBox }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    const viewRows = () => {\r\n        const rows = []\r\n        for (let index = 0; index < countOfY; index++) {\r\n            rows.push(<Line\r\n                points={[\r\n                    0,\r\n                    index * heightCell,\r\n                    widthBox,\r\n                    index * heightCell,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n            />)\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const viewColumns = () => {\r\n        const columns = []\r\n        for (let index = 0; index < countOfX; index++) {\r\n\r\n            columns.push(<Line\r\n                points={[\r\n                    index*widthCell,\r\n                    0,\r\n                    index*widthCell,\r\n                    heightBox,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n            />)\r\n\r\n        }\r\n        return columns\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns()}\r\n            {viewRows()}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIGrid","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport { UINode, UIBeam } from '..';\r\nimport { Farm, Entity } from 'src/models/Farm';\r\nimport { UIModes } from '../UIToolBar';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n        // width:\"100%\",\r\n        flexGrow: 1\r\n    }\r\n})\r\n\r\n\r\nexport interface UIStageProps extends WithStyles<typeof styles> {\r\n    farm:Farm,\r\n    uiMode:UIModes,\r\n    selectedEntity:Entity | undefined,\r\n    stageHeight:number,\r\n    stageWidth:number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity):void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>):void,\r\n    onDrag(e:Konva.KonvaEventObject<DragEvent>, entity:Entity):void,\r\n    stage:React.RefObject<Stage & Konva.Stage>\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = ({classes, stage, stageHeight,stageWidth, onClick, onMouseMove, onDrag, farm, uiMode,selectedEntity }) => {\r\n    return (\r\n        <Stage\r\n            height={stageHeight}\r\n            width={stageWidth}\r\n            className={classes.stage}\r\n            onClick={onClick}\r\n            onMouseMove={onMouseMove}\r\n            ref={stage}\r\n        >\r\n\r\n            <Layer className=\"layer\" >\r\n                <UIGrid \r\n                    heightCell={consts.UI_cellSize}\r\n                    widthCell={consts.UI_cellSize}\r\n                    heightBox={stageHeight}\r\n                    widthBox={stageWidth}\r\n                />\r\n                {farm.getBeams().map(beam => (\r\n                    <UIBeam\r\n                        key={beam.id}\r\n                        beam={beam}\r\n                        mode={uiMode}\r\n                        onClick={onClick}\r\n                        selected={selectedEntity === beam}\r\n                    />\r\n                ))}\r\n\r\n                {farm.getNodes().map(node => (\r\n                    <UINode\r\n                        key={node.id}\r\n                        node={node}\r\n                        mode={uiMode}\r\n                        drag={onDrag}\r\n                        onClick={onClick}\r\n                        selected={selectedEntity === node}\r\n                    />\r\n                ))}\r\n            </Layer>\r\n        </Stage>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIStage)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles,  List,  ListItem,  ListItemText, Collapse, Paper } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Node, Beam, Entity } from 'src/models/Farm';\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width:250,\r\n        borderRightColor:theme.palette.grey[600],\r\n        borderRight:\"solid 2px\",\r\n        overflowY: 'auto',\r\n    },\r\n    list: {\r\n\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes: Node[],\r\n    beams: Beam[]\r\n    selectedEntity:Entity | undefined\r\n    onSelect(entity: Entity): void\r\n}\r\n\r\ninterface TreeState {\r\n    openedNodes:boolean,\r\n    openedBeams:boolean,\r\n\r\n}\r\n\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            openedNodes:true,\r\n            openedBeams:true\r\n        }\r\n        this.switchTab = this.switchTab.bind(this)\r\n    }\r\n\r\n    switchTab(tab: string): void {\r\n        switch (tab) {\r\n            case 'nodes':\r\n                return this.setState((state) => ({\r\n                    openedNodes:!state.openedNodes\r\n                }))\r\n            case 'beams':\r\n                return this.setState((state) => ({\r\n                    openedBeams:!state.openedBeams\r\n                }))      \r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    render() {\r\n        const { classes, nodes, beams,selectedEntity, onSelect } = this.props\r\n        const { openedBeams, openedNodes } = this.state\r\n        const { switchTab: openTab } = this\r\n        return (\r\n            <div className={classes.root}> \r\n                <Paper>\r\n                    <List\r\n                        // subheader={<ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                        //     Структура проекта\r\n                        // </ListSubheader>}\r\n                        className={classes.list}\r\n                    >\r\n                        <ListItem button onClick={() => openTab('nodes')}>\r\n                            <ListItemText primary=\"Узлы\" />\r\n                            {openedNodes? <ExpandLess /> : <ExpandMore />}\r\n                        </ListItem>\r\n                        <Collapse in={openedNodes} timeout=\"auto\" unmountOnExit>\r\n                            <List component=\"div\" disablePadding>\r\n                                {nodes.map(item => (\r\n                                    <ListItem \r\n                                        button\r\n                                        className={classes.nested} \r\n                                        key={item.id} \r\n                                        selected={selectedEntity === item}\r\n                                        onClick={(e) => onSelect(item)}\r\n                                    >\r\n                                        <ListItemText primary={item.id} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Collapse>\r\n\r\n                        <ListItem button onClick={() => openTab('beams')}>\r\n                            <ListItemText primary=\"Лучи\" />\r\n                            {openedBeams? <ExpandLess /> : <ExpandMore />}\r\n                        </ListItem>\r\n                        <Collapse in={openedBeams} timeout=\"auto\" unmountOnExit>\r\n                            <List component=\"div\" disablePadding>\r\n                                {beams.map(item => (\r\n                                    <ListItem \r\n                                        button\r\n                                        className={classes.nested} \r\n                                        key={item.id} \r\n                                        selected={selectedEntity === item}\r\n                                        onClick={(e) => onSelect(item)}\r\n                                    >\r\n                                        <ListItemText primary={item.id} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Collapse>\r\n                    </List>\r\n\r\n                </Paper>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles,  Card, CardContent, Typography, CardActions,  IconButton } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Node, Beam, Entity } from 'src/models/Farm';\r\nimport { Delete as DeleteIcon } from '@material-ui/icons';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: 250,\r\n        borderLeftColor: theme.palette.grey[600],\r\n        borderLeft: \"solid 2px\",\r\n        overflowY: 'auto',\r\n    },\r\n    card: {\r\n        //   minWidth: 275,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: Entity | undefined,\r\n    onDelete(entity:Entity):void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\n\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    getTypeStr(entity: Entity):string{\r\n        if(entity instanceof Node) return \"Узел\"\r\n        else if(entity instanceof Beam) return \"Луч\"\r\n        else return \"Элемент\"\r\n    }\r\n    viewCard(entity: Entity | undefined) {\r\n        const { classes,onDelete } = this.props\r\n        if(entity) return (\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        {this.getTypeStr(entity)}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {entity.name}\r\n                    </Typography>                    \r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"Delete\" onClick={() => onDelete(entity)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n    render() {\r\n        const { classes,entity } = this.props\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                {this.viewCard(entity)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","import * as React from 'react'\r\nimport KeyHandler from 'react-key-handler'\r\nimport Konva from \"konva\"\r\nimport { Stage } from \"react-konva\"\r\nimport { createStyles, Theme, WithStyles, withStyles, Box } from '@material-ui/core';\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Farm, Node, Beam, Entity } from 'src/models/Farm';\r\nimport { UITreePanel, UIEntityInfo, UIStage } from './components';\r\nimport UIToolBar, { UIModes } from './components/UIToolBar';\r\nimport { MyMath } from 'src/utils';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        // maxHeight: window.innerHeight,\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        // padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        // borderRadius:18,\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\nexport interface UIFarmProps extends IFarmStore, WithStyles<typeof styles> {\r\n    update: (workSpace: Farm) => void\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm: Farm,\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\nclass UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: 100,\r\n            stageWidth: 100,\r\n            farm: props.workSpace,\r\n            uiMode: UIModes.none,\r\n            selectedEntity: undefined,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.setFarm = this.setFarm.bind(this)\r\n        this.updateFarm = this.updateFarm.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this._setStageSize = this._setStageSize.bind(this)\r\n        this._deleteEntity = this._deleteEntity.bind(this)\r\n        this._selectEntity = this._selectEntity.bind(this)\r\n\r\n        this.stage = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        this._setStageSize()\r\n        window.addEventListener('resize', this._setStageSize)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this._setStageSize)\r\n    }\r\n    componentWillReceiveProps(nextProps: UIFarmProps) {\r\n        if (nextProps.workSpace !== this.state.farm)\r\n            this.setState({ farm: nextProps.workSpace })\r\n    }\r\n    setFarm(farm: Farm): void {\r\n        this.props.update(farm)\r\n    }\r\n    updateFarm(farm: Farm): void {\r\n        this.setState({ farm })\r\n\r\n    }\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity) {\r\n        const { uiMode, farm } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n\r\n        if (e.evt.button === 0) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace) {\r\n                        this._selectEntity(entity);\r\n                    } else this.setState({ selectedEntity: undefined })\r\n\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        farm.addNode(cellX, cellY, 0)\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && entity instanceof Node) {\r\n\r\n                        const beam = farm.addBeam(entity.x, entity.y)\r\n                        farm.connectBeamToNode(beam, entity)\r\n                        this.setState({\r\n                            paintEntity: beam,\r\n                            uiMode: UIModes.addBeamStart\r\n                        })\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && entity instanceof Node && this.state.paintEntity instanceof Beam) {\r\n                        const beam = this.state.paintEntity\r\n                        if (farm.connectBeamToNode(beam, entity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: undefined\r\n                            })\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this._deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        // if (isEmptyPlace) this.setState({ selectedEntity: undefined })\r\n\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, farm, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if (paintEntity && paintEntity instanceof Beam) {\r\n                    const beam = paintEntity\r\n                    beam.moveEndPoint(MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                } else this.setState({ uiMode: UIModes.addBeam })\r\n                this.updateFarm(farm)\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n        const { farm, uiMode } = this.state\r\n        if (entity instanceof Node) {\r\n            if (uiMode === UIModes.move) {\r\n                const { layerX, layerY } = e.evt\r\n                farm.moveNodeTo(entity.id, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                this.updateFarm(farm)\r\n            }\r\n        }\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this._deletePaintEntity()\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        this._deletePaintEntity()\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n        })\r\n    }\r\n    _deletePaintEntity() {\r\n\r\n        const { uiMode, paintEntity, farm } = this.state\r\n        if (uiMode === UIModes.addBeamStart && paintEntity) {\r\n            farm.deleteEntity(paintEntity)\r\n            this.setState({\r\n                paintEntity: undefined,\r\n            })\r\n            this.updateFarm(farm)\r\n        }\r\n    }\r\n    _setStageSize(e?: UIEvent) {\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container: HTMLDivElement = stage.attrs.container\r\n            const { clientWidth, clientHeight } = container\r\n            this.setState({\r\n                stageHeight: clientHeight,\r\n                stageWidth: clientWidth\r\n            })\r\n        }\r\n    }\r\n    _selectEntity(entity:Entity | undefined){\r\n        if (entity) this.setState({ selectedEntity: entity })\r\n    }\r\n    _deleteEntity(entity: Entity) {\r\n\r\n        this.setState({ selectedEntity: undefined })\r\n        this.state.farm.deleteEntity(entity)\r\n        this.updateFarm(this.state.farm)\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, farm, uiMode, selectedEntity } = this.state\r\n        const { classes } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIToolBar\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)} />\r\n\r\n                <Box className={classes.stageBox}>\r\n                    <UITreePanel\r\n                        nodes={farm.getNodes()}\r\n                        beams={farm.getBeams()}\r\n                        selectedEntity={selectedEntity}\r\n                        onSelect={this._selectEntity}\r\n                    />\r\n                    <UIStage\r\n                        onClick={this.onClick}\r\n                        onDrag={this.onDrag}\r\n                        onMouseMove={this.onMouseMove}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        farm={farm}\r\n                        stage={this.stage}\r\n                        selectedEntity={selectedEntity}\r\n                        uiMode={uiMode}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={selectedEntity}\r\n                        onDelete={this._deleteEntity} />\r\n                </Box>\r\n\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UIFarm)","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const update = (workSpace : Farm) : FarmActions => ({\r\n    type:FARM_UPDATE,\r\n    workSpace\r\n})","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  (state: AppState) => ({\r\n    workSpace:state.farm.workSpace,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"auto\",\r\n\t\theight: 400\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({classes} : WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img src={consts.bridgeIcon_2} alt=\"logo\" className={classes.logo} />\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.FARM_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { IHomeStore } from './homeReducer';\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\tminWidth: window.innerWidth,\r\n\t\tminHeight: window.innerHeight,\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends IHomeStore, WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport * as consts from './static/const';\nimport {CssBaseline} from '@material-ui/core';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/styles';\n\n\ninterface IAppProps {\n\n}\n\n\nclass App extends React.Component<IAppProps> {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={consts.title}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":consts.bridgeIcon_2},\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":consts.airBridge},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/css?family=Roboto:300,400,500'},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/icon?family=Material+Icons'}\n\t\t\t\t\t]}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": consts.description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": consts.title},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": consts.url},\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<CssBaseline/>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<main style={{height:\"100%\"}}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</main>\n\n\t\t\t\t</ThemeProvider>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","// import favicon from './favicon.ico'\r\nimport ogImage from './ogImage.png'\r\nimport bridgeIcon_1 from './icon.png'\r\nimport bridgeIcon_2 from './bridge.png'\r\nimport airBridge from './airBridge.png'\r\nimport path from 'path'\r\n\r\n// Strings\r\nexport const url = process.env.PUBLIC_URL\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"\r\nexport const favicon = path.resolve(__dirname,\"favicon.ico\")\r\n\r\n// UI\r\nexport const UI_cellSize = 40\r\nexport const UI_nodeSize = 10\r\nexport const UI_beamSize = 6\r\n\r\n\r\n// Images\r\nexport {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";"],"sourceRoot":""}