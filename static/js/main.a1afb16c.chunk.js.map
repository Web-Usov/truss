{"version":3,"sources":["pages/Farm/components/UIToolPanel.tsx","utils/history.ts","utils/math.ts","models/Farm/ModelEntity.ts","models/Farm/ModelForce.ts","models/Farm/ModelNode.ts","models/Farm/ModelBeam.ts","models/Farm/ModelFarm.ts","pages/Farm/farmReducer.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Farm/farmTypes.ts","pages/Home/homeTypes.ts","components/sidebar.tsx","components/appBar.tsx","components/myToggleButton.tsx","theme.ts","pages/Farm/components/UIFarmEntities/UINode.tsx","pages/Farm/components/UIFarmEntities/UIBeam.tsx","pages/Farm/components/UIFarmEntities/UIGrid.tsx","pages/Farm/components/UIFarmEntities/UIStage.tsx","pages/Farm/components/UIHeader.tsx","pages/Farm/components/UITreePanel.tsx","pages/Farm/components/UIEntityInfo.tsx","pages/Farm/_testFarm.ts","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","static/const.ts","static/ogImage.png","static/icon.png","static/bridge.png","static/airBridge.png"],"names":["UIModes","createBrowserHistory","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","UI_cellSize","y","Entity","props","Object","classCallCheck","this","id","angle","name","newX","newY","Date","now","random","Force","_Entity","_this","possibleConstructorReturn","getPrototypeOf","call","value","nodeID","_props$value","_props$angle","_props$nodeID","inherits","Node","beamsID","forceX","forceY","isStatic","createClass","key","beamID","find","push","filter","Beam","endX","endY","length","startConnectedNodeID","endConnectedNodeID","newAngle","place","Farm","_farm","fixedNodes","forces","nodes","beams","time","Map","arguments","undefined","getNodes","item","node","set","beam","delete","forceID","get","Error","concat","force","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getNode","map","getBeam","_beam","_node","connectNode","connectBeam","getBeamsOnNode","moveEndPoint","entity","_this2","forEach","removeBeam","deleteBeam","deleteForce","deleteNode","_entity","deleteEntity","_this3","moveStartPoint","defaultFarmState","workSpace","defaultHomeState","title","mainReducer","combineReducers","farm","state","action","type","home","objectSpread","createStore","Sidebar","open","viewTooltip","switchDrawer","bind","assertThisInitialized","setState","flag","_this$props","classes","children","btnIcon","anchor","_this$state","react","Drawer","className","drawer","variant","paper","drawerPaper","toolbar","Typography","align","Divider","Tooltip","onOpen","changeViewtooltip","onClose","Fab","style","left","drawerWidth","right","color","size","toogleIcon","onClick","Close","React","withStyles","theme","createStyles","position","width","top","spacing","zIndex","padding","mixins","appBar","logo","marginRight","marginLeft","& img","height","_ref","_ref$withLogo","withLogo","AppBar","clsx","Toolbar","react_router_dom","to","alt","src","bridgeIcon_2","viewLogo","btn","borderRadius","border","fade","palette","active","transition","transitions","create","duration","short","secondary","contrastText","backgroundColor","light","&$selected","main","&:hover","dark","@media (hover: none)","&$disabled","selected","icon","other","objectWithoutProperties","ToggleButton","assign","defineProperty","root","bottom","transform","primary","modsBtnGroup","onSelect","mods","mod","move","ZoomOutMap","addNode","MyLocation","addBeam","Power","Delete","Paper","ToggleButtonGroup","exclusive","onChange","e","myToggleButton","createMuiTheme","background","default","UINode","drag","mode","UI_nodeSize","viewForce","ReactKonvaCore","points","stroke","grey","strokeWidth","shadowBlur","pointerLength","pointerWidth","hitStrokeWidth","rotation","text","radius","fill","addBeamStart","getStorkeColor","getStorkeWidth","draggable","_useStrictMode","onDragMove","_onClick","_x","apply","toString","onMouseEnter","stage","target","getStage","container","cursor","none","hundleMouseEnter","onMouseLeave","hundleMouseLeave","UIBeam","UI_beamSize","UIGrid","widthCell","heightCell","heightBox","widthBox","countOfX","countOfY","columns","index","ReactKonva","viewColumns","rows","viewRows","flexGrow","stageHeight","stageWidth","onMouseMove","onDrag","uiMode","selectedEntity","lib_default","a","autoHide","ref","UIFarmEntities_UIGrid","getBeams","UIFarmEntities_UIBeam","UIFarmEntities_UINode","grow","_ref$hundleSave","hundleSave","alert","_ref$hundleClear","hundleClear","Button","UITreePanel","tabs","openTab","viewListItem","tab","entityArray","ListItem","button","ListItemIcon","Badge","badgeContent","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","nested","_this$props2","sidebar","esm_List","GpsNotFixed","Timeline","paddingLeft","UIEntityInfo","onDelete","Box","subTitle","gutterBottom","getTypeStr","IconButton","aria-label","Info","viewInfo","fontSize","marginBottom","_testFarm","connectForceToNode","UIFarm","CreateDefaultFarm","paintEntity","updateFarm","onKeyHandle","_setStageSize","selectEntity","clearFarm","window","addEventListener","current","attrs","parentElement","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","removeEventListener","nextProps","isEmptyPlace","evt","preventDefault","_e$evt","layerX","layerY","cellX","connectBeamToNode","_this$state2","_e$evt2","_this$state3","defaultPrevented","_e$evt3","moveNodeTo","cellY","deletePaintEntity","_this$state4","innerHeight","innerWidth","confirm","_this$state5","react_stats_default","FPSStats","isActive","esm","keyEventName","keyValue","components_UIHeader","stageBox","components_UITreePanel","UIFarmEntities_UIStage","components_UIEntityInfo","components_UIToolPanel","setSelectedMode","overflow","display","flexDirection","update","connect","dispatch","bindActionCreators","farmActions","navPath","alignItems","justifyContent","descripton","description","Link","Home","homeHeader","minHeight","setTitle","homeActions","App","Helmet_default","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","path","exact","ReactDOM","render","react_default","createElement","es","store","src_App","document","getElementById","__webpack_require__","r","__webpack_exports__","__dirname","d","url","favicon","_ogImage_png__WEBPACK_IMPORTED_MODULE_0__","_ogImage_png__WEBPACK_IMPORTED_MODULE_0___default","n","_icon_png__WEBPACK_IMPORTED_MODULE_1__","_icon_png__WEBPACK_IMPORTED_MODULE_1___default","_bridge_png__WEBPACK_IMPORTED_MODULE_2__","_bridge_png__WEBPACK_IMPORTED_MODULE_2___default","_airBridge_png__WEBPACK_IMPORTED_MODULE_3__","_airBridge_png__WEBPACK_IMPORTED_MODULE_3___default","path__WEBPACK_IMPORTED_MODULE_4__","process","resolve","module","exports","p"],"mappings":"+QA8BYA,sDC5BGC,qCCkBAC,6GAjBUC,EAAWC,EAAWC,EAAWC,GAClD,OAAOC,KAAKC,OAAOJ,EAAKE,GAAKH,EAAKE,GAAOE,KAAKE,0CAG5BN,EAAWC,EAAWC,EAAWC,GACnD,OAAOC,KAAKG,KAAKH,KAAKI,IAAIR,EAAIE,EAAI,GAAKE,KAAKI,IAAIP,EAAKE,EAAI,kCAGhDM,GACT,OAAQL,KAAKM,MAAMD,EAAIE,EAAOC,aAAeD,EAAOC,0CAE3CC,GACT,OAAQT,KAAKM,MAAMG,EAAIF,EAAOC,aAAeD,EAAOC,qDCL/CE,EAQT,SAAAA,EAAYC,GAAiBC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAI,KAP7BC,QAO4B,EAAAD,KAN5BT,OAM4B,EAAAS,KAL5BL,OAK4B,EAAAK,KAJ5BE,WAI4B,EAAAF,KAH5BG,UAG4B,EAAAH,KAF5BI,UAE4B,EAAAJ,KAD5BK,UAC4B,EACxBL,KAAKC,GAAKK,KAAKC,MAAMrB,KAAKsB,SAC1BR,KAAKT,EAAIM,EAAMN,GAAK,EACpBS,KAAKL,EAAIE,EAAMF,GAAK,EACpBK,KAAKE,MAAQL,EAAMK,OAAS,EAC5BF,KAAKG,KAAON,EAAMM,MAAQH,KAAKC,GAAK,GACpCD,KAAKI,KAAOJ,KAAKT,EACjBS,KAAKK,KAAOL,KAAKL,GCjBZc,EAAb,SAAAC,GAII,SAAAD,EAAYZ,GAAe,IAAAc,EAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAAS,IACvBE,EAAAb,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAW,GAAAK,KAAAd,KAAMH,KAJVkB,WAG2B,EAAAJ,EAF3BT,WAE2B,EAAAS,EAD3BK,YAC2B,MAAAC,EAEsBpB,EAArCkB,aAFe,IAAAE,EAEP,EAFOA,EAAAC,EAEsBrB,EAAzBK,aAFG,IAAAgB,EAEK,EAFLA,EAAAC,EAEsBtB,EAAdmB,cAFR,IAAAG,EAEiB,EAFjBA,EAAA,OAGvBR,EAAKI,MAAQA,EACbJ,EAAKT,MAAQA,EACbS,EAAKK,OAASA,EALSL,EAJ/B,OAAAb,OAAAsB,EAAA,EAAAtB,CAAAW,EAAAC,GAAAD,EAAA,CAA2Bb,GCEdyB,EAAb,SAAAX,GAMI,SAAAW,EAAYxB,GAAa,IAAAc,EAAA,OAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,IACrBV,EAAAb,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAuB,GAAAP,KAAAd,KAAMH,KANVyB,aAKyB,EAAAX,EAJzBY,YAIyB,EAAAZ,EAHzBa,YAGyB,EAAAb,EAFzBc,cAEyB,EAErBd,EAAKW,QAAUzB,EAAMyB,SAAW,GAChCX,EAAKY,OAAS1B,EAAM0B,OACpBZ,EAAKa,OAAS3B,EAAM2B,OACpBb,EAAKc,SAAW5B,EAAM4B,WAAY,EALbd,EAN7B,OAAAb,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAX,GAAAZ,OAAA4B,EAAA,EAAA5B,CAAAuB,EAAA,EAAAM,IAAA,cAAAZ,MAAA,SAagBa,GACR,OAAK5B,KAAKsB,QAAQO,KAAK,SAAA5B,GAAE,OAAIA,IAAO2B,MAChC5B,KAAKsB,QAAQQ,KAAKF,IACX,KAhBnB,CAAAD,IAAA,aAAAZ,MAAA,SAoBea,GAEP5B,KAAKsB,QAAWtB,KAAKsB,QAAQS,OAAO,SAAA9B,GAAE,OAAIA,IAAO2B,QAtBzDP,EAAA,CAA0BzB,GCEboC,EAAb,SAAAtB,GAOI,SAAAsB,EAAYnC,GAAc,IAAAc,EAAA,OAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,IACtBrB,EAAAb,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAkC,GAAAlB,KAAAd,KAAMH,KAPVoC,UAM0B,EAAAtB,EAL1BuB,UAK0B,EAAAvB,EAJ1BwB,YAI0B,EAAAxB,EAH1ByB,0BAG0B,EAAAzB,EAF1B0B,wBAE0B,EAAA1B,EAD1B2B,cAC0B,EAEtB3B,EAAKwB,OAAStC,EAAMsC,QAAU,EAC9BxB,EAAKyB,qBAAuBvC,EAAMuC,sBAAwB,EAC1DzB,EAAK0B,mBAAqBxC,EAAMwC,oBAAsB,EACtD1B,EAAK2B,SAAW3B,EAAKT,MACrBS,EAAKsB,KAAOpC,EAAMoC,MAAQpC,EAAMN,GAAK,EACrCoB,EAAKuB,KAAOrC,EAAMqC,MAAQrC,EAAMF,GAAK,EAPfgB,EAP9B,OAAAb,OAAAsB,EAAA,EAAAtB,CAAAkC,EAAAtB,GAAAZ,OAAA4B,EAAA,EAAA5B,CAAAkC,EAAA,EAAAL,IAAA,cAAAZ,MAAA,SAiBgBC,EAAgBuB,GACxB,OAAQA,GACJ,IAAK,QACDvC,KAAKoC,qBAAuBpB,EAC5B,MAEJ,IAAK,MACDhB,KAAKqC,mBAAqBrB,KAxB1C,CAAAW,IAAA,aAAAZ,MAAA,SA+BewB,GACG,UAAVA,EACAvC,KAAKoC,qBAAuB,EAC5BpC,KAAKqC,mBAAqB,IAlClC,CAAAV,IAAA,UAAAZ,MAAA,WAqCQ,OAAOf,KAAKiC,OArCpB,CAAAN,IAAA,UAAAZ,MAAA,WAwCQ,OAAOf,KAAKkC,OAxCpB,CAAAP,IAAA,iBAAAZ,MAAA,SA0CmBxB,EAASI,GACpBK,KAAKT,EAAIA,EACTS,KAAKL,EAAIA,IA5CjB,CAAAgC,IAAA,eAAAZ,MAAA,SA+CiBxB,EAASI,GAClBK,KAAKiC,KAAO1C,EACZS,KAAKkC,KAAOvC,MAjDpBqC,EAAA,CAA0BpC,GCMb4C,EAAb,WAMI,SAAAA,EAAYC,GAAe3C,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,GAAAxC,KAL3B0C,gBAK0B,EAAA1C,KAJ1B2C,YAI0B,EAAA3C,KAH1B4C,WAG0B,EAAA5C,KAF1B6C,WAE0B,EAAA7C,KAD1B8C,UAC0B,EACtB9C,KAAK4C,MAAQH,EAAQA,EAAMG,MAAQ,IAAIG,IACvC/C,KAAK0C,WAAaD,EAAQA,EAAMC,WAAa,IAAIK,IACjD/C,KAAK2C,OAASF,EAAQA,EAAME,OAAS,IAAII,IACzC/C,KAAK6C,MAAQJ,EAAQA,EAAMI,MAAQ,IAAIE,IACvC/C,KAAK8C,KAAOxC,KAAKC,MAXzB,OAAAT,OAAA4B,EAAA,EAAA5B,CAAA0C,EAAA,EAAAb,IAAA,UAAAZ,MAAA,SAcYxB,EAAWI,EAAWO,GAA4E,IAA7DC,EAA6D6C,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAA9C,GAAIvB,EAA0CuB,UAAAb,OAAA,QAAAc,IAAAD,UAAA,IAAAA,UAAA,GAEtG,GADgBhD,KAAKkD,WAAWrB,KAAK,SAAAsB,GAAI,OAAIA,EAAK5D,IAAMA,GAAK4D,EAAKxD,IAAMA,IAC5D,OAAO,EACnB,IAAMyD,EAAO,IAAI/B,EAAK,CAClB9B,IACAI,IACAO,QACAC,OACAsB,aAIJ,OAFAzB,KAAK4C,MAAMS,IAAID,EAAKnD,GAAImD,GAEjBA,IA1Bf,CAAAzB,IAAA,UAAAZ,MAAA,SA4BYxB,EAAWI,GACf,IAAM2D,EAAO,IAAItB,EAAK,CAClBzC,IACAI,MAGJ,OADAK,KAAK6C,MAAMQ,IAAIC,EAAKrD,GAAIqD,GACjBA,IAlCf,CAAA3B,IAAA,aAAAZ,MAAA,SAoCuBC,GACfhB,KAAK4C,MAAMW,OAAOvC,KArC1B,CAAAW,IAAA,aAAAZ,MAAA,SAuCuBa,GACf5B,KAAK6C,MAAMU,OAAO3B,KAxC1B,CAAAD,IAAA,cAAAZ,MAAA,SA0CwByC,GAChBxD,KAAK2C,OAAOY,OAAOC,KA3C3B,CAAA7B,IAAA,UAAAZ,MAAA,SA8CYC,GACJ,IAAMoC,EAAOpD,KAAK4C,MAAMa,IAAIzC,GAC5B,IAAKoC,EAAM,MAAMM,MAAK,wFAAAC,OAAwB3C,IAC9C,OAAOoC,IAjDf,CAAAzB,IAAA,UAAAZ,MAAA,SAmDYa,GACJ,IAAM0B,EAAOtD,KAAK6C,MAAMY,IAAI7B,GAC5B,IAAK0B,EAAM,MAAMI,MAAK,kFAAAC,OAAuB/B,IAC7C,OAAO0B,IAtDf,CAAA3B,IAAA,WAAAZ,MAAA,SAwDayC,GACL,IAAMI,EAAQ5D,KAAK2C,OAAOc,IAAID,GAC9B,IAAKI,EAAO,MAAMF,MAAK,8FAAAC,OAAyBH,IAChD,OAAOI,IA3Df,CAAAjC,IAAA,WAAAZ,MAAA,WA+DQ,IAAM6B,EAAgB,GADPiB,GAAA,EAAAC,GAAA,EAAAC,OAAAd,EAAA,IAEf,QAAAe,EAAAC,EAAiBjE,KAAK4C,MAAMsB,SAA5BC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAAsC,KAA7BT,EAA6BY,EAAAjD,MAClC6B,EAAMd,KAAKsB,IAHA,MAAAmB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAMf,OAAOnB,IApEf,CAAAjB,IAAA,WAAAZ,MAAA,WAuEQ,IAAM8B,EAAgB,GADP4B,GAAA,EAAAC,GAAA,EAAAC,OAAA1B,EAAA,IAEf,QAAA2B,EAAAC,EAAiB7E,KAAK6C,MAAMqB,SAA5BC,OAAAC,cAAAK,GAAAG,EAAAC,EAAAR,QAAAC,MAAAG,GAAA,EAAsC,KAA7BnB,EAA6BsB,EAAA7D,MAClC8B,EAAMf,KAAKwB,IAHA,MAAAiB,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,YAAAE,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,GAKf,OAAO9B,IA3Ef,CAAAlB,IAAA,kBAAAZ,MAAA,SA8EoBC,GACZ,IAAMoC,EAAapD,KAAK8E,QAAQ9D,GAChC,MAAO,CAACoC,EAAK7B,OAAQ6B,EAAK5B,UAhFlC,CAAAG,IAAA,iBAAAZ,MAAA,SAkFmBC,GAAwB,IAAAL,EAAAX,KAEnC,OADsBA,KAAK8E,QAAQ9D,GAAQM,QAAQyD,IAAI,SAAAnD,GAAM,OAAIjB,EAAKqE,QAAQpD,OAnFtF,CAAAD,IAAA,iBAAAZ,MAAA,SAsFmBa,GACX,IAAM0B,EAAOtD,KAAKgF,QAAQpD,GAClBQ,EAA6CkB,EAA7ClB,qBAAsBC,EAAuBiB,EAAvBjB,mBAK9B,MAAO,CAHWrC,KAAK8E,QAAQ1C,GACfpC,KAAK8E,QAAQzC,MA3FrC,CAAAV,IAAA,oBAAAZ,MAAA,SAgGsBuC,EAAqBF,GAAgE,IAA3Cb,EAA2CS,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAlB,QAC7EiC,EAAc3B,aAAgBtB,EAAOsB,EAAOtD,KAAKgF,QAAQ1B,GACzD4B,EAAc9B,aAAgB/B,EAAO+B,EAAOpD,KAAK8E,QAAQ1B,GAE7D,OAAQb,GACJ,IAAK,QAED0C,EAAME,YAAYD,EAAMjF,GAAI,SAC5BiF,EAAME,YAAYH,EAAMhF,IACxB,MAEJ,IAAK,MAUD,GATcD,KAAKqF,eAAeJ,EAAM7C,sBAClBP,KAAK,SAAAsB,GAAI,OAC1BA,EAAKf,uBAAyB6C,EAAM7C,sBAAwBe,EAAKd,qBAAuB6C,EAAMjF,IAC9FkD,EAAKf,uBAAyB8C,EAAMjF,IAAMkD,EAAKd,qBAAuB4C,EAAM7C,sBAC5Ee,EAAKlD,KAAOgF,EAAMhF,IAAMkD,EAAKd,qBAAuB4C,EAAMhF,OAK/CiF,EAAME,YAAYH,EAAMhF,IAGjC,OAAO,EAFVgF,EAAMK,aAAaJ,EAAM3F,EAAG2F,EAAMvF,GAClCsF,EAAME,YAAYD,EAAMjF,GAAI,OAEhC,MAEJ,QAAS,OAAO,EAGpB,OAAO,IA9Hf,CAAA0B,IAAA,qBAAAZ,MAAA,SAgIuBqC,EAAWlD,EAAea,GACzC,IAAM6C,EAAQ,IAAInD,EAAM,CACpBP,QACAa,QACAC,OAAOoC,EAAKnD,KAEH,IAAVC,EAAakD,EAAK7B,OAASqC,EACzBR,EAAK5B,OAASoC,EACnB5D,KAAK2C,OAAOU,IAAIO,EAAM3D,GAAI2D,KAxIlC,CAAAjC,IAAA,eAAAZ,MAAA,SA0IiBwE,GAAgC,IAAAC,EAAAxF,KACzC,GAAIuF,aAAkBlE,EAAM,CACxB,GAAGkE,EAAO9D,SAAU,OACN8D,EAAOjE,QAAQyD,IAAI,SAAAnD,GAAM,OAAI4D,EAAKR,QAAQpD,KAClD6D,QAAQ,SAAAnC,GACNA,EAAKlB,uBAAyBmD,EAAOtF,GAAIuF,EAAKV,QAAQxB,EAAKjB,oBAAoBqD,WAAWpC,EAAKrD,IAC9FuF,EAAKV,QAAQxB,EAAKlB,sBAAsBsD,WAAWpC,EAAKrD,IAC7DuF,EAAKG,WAAWrC,EAAKrD,MAEtBsF,EAAOhE,QAAQvB,KAAK4F,YAAYL,EAAOhE,OAAOtB,IAC9CsF,EAAO/D,QAAQxB,KAAK4F,YAAYL,EAAO/D,OAAOvB,IACjDD,KAAK6F,WAAWN,EAAOtF,SACpB,GAAIsF,aAAkBvD,EACzB,CAACuD,EAAOnD,qBAAqBmD,EAAOlD,oBAAoBoD,QAAQ,SAAAzE,GACzDA,EAAS,GACRwE,EAAKV,QAAQ9D,GAAQ0E,WAAWH,EAAOtF,MAG/CD,KAAK2F,WAAWJ,EAAOtF,SACpB,GAAGsF,aAAkB3F,EAAO,CAC/B,IAAMkG,EAAU9F,KAAK4C,MAAMa,IAAI8B,EAAOtF,KAAOD,KAAK6C,MAAMY,IAAI8B,EAAOtF,IAChE6F,GAAS9F,KAAK+F,aAAaD,OAC7B,CACD,IAAMA,EAAU9F,KAAK4C,MAAMa,IAAI8B,IAAWvF,KAAK6C,MAAMY,IAAI8B,GACtDO,GAAS9F,KAAK+F,aAAaD,MAlK1C,CAAAnE,IAAA,aAAAZ,MAAA,SAqKeC,EAAgBzB,EAAWI,GAAiB,IAAAqG,EAAAhG,KAC7CoD,EAAOpD,KAAK8E,QAAQ9D,GACvBoC,EAAK3B,WACMzB,KAAKkD,WAAWrB,KAAK,SAAAsB,GAAI,OAAIA,EAAK5D,IAAMA,GAAK4D,EAAKxD,IAAMA,MAGlEyD,EAAK7D,EAAIA,EACT6D,EAAKzD,EAAIA,EACTyD,EAAK9B,QAAQmE,QAAQ,SAAA7D,GACjB,IAAM0B,EAAO0C,EAAKhB,QAAQpD,GACtB0B,EAAKlB,uBAAyBpB,EAC9BsC,EAAK2C,eAAe1G,EAAGI,GAChB2D,EAAKjB,qBAAuBrB,GACnCsC,EAAKgC,aAAa/F,EAAGI,WAlLzC6C,EAAA,GCVa0D,EAA+B,CACxCC,UAAW,IAAI3D,WCHN4D,EAAgC,CACzCC,MAAO,iBCEEC,EAAcC,YAAgB,CACvCC,KFEuB,WAA2E,IAA1EC,EAA0EzD,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAtDkD,EAAkBQ,EAAoC1D,UAAAb,OAAA,EAAAa,UAAA,QAAAC,EAClG,OAAQyD,EAAOC,MACX,IGXmB,cHcf,MAF8B,CAACR,UAAU,IAAI3D,EAAKkE,EAAOP,YAK7D,QACI,OAAOM,IEVfG,KDDuB,WAA2E,IAA1EH,EAA0EzD,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAtDoD,EAAkBM,EAAoC1D,UAAAb,OAAA,EAAAa,UAAA,QAAAC,EAClG,OAAQyD,EAAOC,MACX,IGViB,YHWb,OAAO7G,OAAA+G,EAAA,EAAA/G,CAAA,GACA2G,EADP,CAEIJ,MAAOK,EAAOL,QAEtB,QACI,OAAOI,MCJJK,cAAYR,wLG0BrBS,cACF,SAAAA,EAAYlH,GAAqB,IAAAc,EAAA,OAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAA+G,IAC7BpG,EAAAb,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAiH,GAAAjG,KAAAd,KAAMH,KACD4G,MAAQ,CACTO,MAAM,EACNC,aAAa,GAEjBtG,EAAKuG,aAAevG,EAAKuG,aAAaC,KAAlBrH,OAAAsH,EAAA,EAAAtH,CAAAa,IANSA,8EAS7BX,KAAKqH,SACD,CACIL,MAAOhH,KAAKyG,MAAMO,KAClBC,aAAa,8CAKPK,GACdtH,KAAKqH,SAAS,CAAEJ,YAAaK,qCAExB,IAAA9B,EAAAxF,KAAAuH,EACgDvH,KAAKH,MAAlD2H,EADHD,EACGC,QAAQC,EADXF,EACWE,SAAUpB,EADrBkB,EACqBlB,MAAOqB,EAD5BH,EAC4BG,QAASC,EADrCJ,EACqCI,OADrCC,EAEyB5H,KAAKyG,MAA3BO,EAFHY,EAEGZ,KAAMC,EAFTW,EAESX,YACd,OACIY,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACC,EAAA,EAAD,CACIC,UAAWP,EAAQQ,OACnBC,QAAQ,aACRjB,KAAMA,EACNW,OAAQA,EACRH,QAAS,CACLU,MAAOV,EAAQW,cAGnBN,EAAA,qBAAKE,UAAWP,EAAQY,UAExBP,EAAA,cAACQ,EAAA,EAAD,CACIJ,QAAQ,QACRK,MAAM,SACNP,UAAWP,EAAQnB,OAClBA,GAELwB,EAAA,cAACU,EAAA,EAAD,MACCd,GAELI,EAAA,cAACW,EAAA,EAAD,CACInC,MAAOA,EACPW,UAAgB/D,IAAVoD,GAAuBY,IAAgBD,EAC7CyB,OAAQ,kBAAMjD,EAAKkD,mBAAkB,IACrCC,QAAS,kBAAMnD,EAAKkD,mBAAkB,KACtCb,EAAA,cAACe,EAAA,EAAD,CACIC,MAAO,CACHC,KAAiB,SAAXnB,EAAqBX,EAAY+B,IAAL,GAAwB,OAE1DC,MAAkB,UAAXrB,EAAsBX,EAAY+B,IAAL,GAAwB,QAEhEE,MAAM,YACNC,KAAK,SACLnB,UAAWP,EAAQ2B,WACnBC,QAASpJ,KAAKkH,cAEbF,EAAOa,EAAA,cAACwB,EAAA,EAAD,MAAgB3B,YA9D1B4B,iBAuEPC,cAxGA,SAACC,GAAD,OAAkBC,YAAa,CAC1CzB,OAAQ,CACJ0B,SAAU,YAEdvB,YAAa,CACTwB,MAPY,KAShBR,WAAY,CACRO,SAAU,WACVE,IAAKJ,EAAMK,QAAQ,IACnBC,OAAQN,EAAMM,OAAO9B,OAAS,GAElC3B,MAAM,CACF0D,QAAQP,EAAMK,QAAQ,IAE1BzB,QAASoB,EAAMQ,OAAO5B,WAyFXmB,CAAmBxC,8BCxDnBwC,eA/CA,SAACC,GAAD,OAAkBC,YAAa,CAC1CQ,OAAQ,CACJH,OAAQN,EAAMM,OAAO9B,OAAS,GAElCkC,KAAM,CACFC,YAAaX,EAAMK,QAAQ,GAC3BO,WAAYZ,EAAMK,QAAQ,GAC1BQ,QAAS,CACLV,MAAO,GACPW,OAAQ,YAsCLf,CA3B4B,SAAAgB,GAAwE,IAArE/C,EAAqE+C,EAArE/C,QAASC,EAA4D8C,EAA5D9C,SAAUM,EAAkDwC,EAAlDxC,UAAWkB,EAAuCsB,EAAvCtB,MAAOS,EAAgCa,EAAhCb,SAAgCc,EAAAD,EAAtBE,gBAAsB,IAAAD,KAc/G,OACI3C,EAAA,cAAC6C,GAAA,EAAD,CACIhB,SAAUA,GAAY,QACtB3B,UAAW4C,YAAKnD,EAAQyC,OAAQlC,GAChCkB,MAAOA,GAAS,WAChBpB,EAAA,cAAC+C,GAAA,EAAD,KAlBS,WACb,GAAIH,EAAU,OACV5C,EAAA,cAACgD,EAAA,EAAD,CACIC,GAAI,IACJ/C,UAAWP,EAAQ0C,MAEnBrC,EAAA,qBACIkD,IAAI,YACJC,IAAKvL,EAAOwL,gBAWfC,GACAzD,mCCsBF8B,eA9DA,SAACC,GAAD,OAAkBC,YAAa,CAC1C0B,IAAK,CACDf,WAAYZ,EAAMK,QAAQ,GAC1BM,YAAaX,EAAMK,QAAQ,GAC3BuB,aAAc,iBACdC,OAAM,aAAA1H,OAAe2H,YAAK9B,EAAM+B,QAAQ7E,OAAO8E,OAAQ,IAAjD,eACNC,WAAYjC,EAAMkC,YAAYC,OAAO,CAAC,mBAAoB,aAAc,UAAW,CAC/EC,SAAUpC,EAAMkC,YAAYE,SAASC,QAGzC5C,MAAOO,EAAM+B,QAAQO,UAAUC,aAC/BC,gBAAiBxC,EAAM+B,QAAQO,UAAUG,MAEzCC,aAAc,CACVF,gBAAiBxC,EAAM+B,QAAQO,UAAUK,KACzCC,UAAW,CACPJ,gBAAiBxC,EAAM+B,QAAQO,UAAUO,OAGjDD,UAAW,CACPJ,gBAAiBxC,EAAM+B,QAAQO,UAAUO,KACzCC,uBAAwB,CACpBN,gBAAiBxC,EAAM+B,QAAQO,UAAUK,MAE7CI,aAAc,CACVP,gBAAiBxC,EAAM+B,QAAQO,UAAUK,QAIrDK,SAAU,MAiCCjD,CArB2D,SAAAgB,GAAyD,IAArDiC,EAAqDjC,EAArDiC,SAAUhF,EAA2C+C,EAA3C/C,QAAUzG,EAAiCwJ,EAAjCxJ,MAAOZ,EAA0BoK,EAA1BpK,KAAMsM,EAAoBlC,EAApBkC,KAASC,EAAW5M,OAAA6M,GAAA,EAAA7M,CAAAyK,EAAA,8CAC/H,OACI1C,EAAA,cAAC+E,GAAA,EAAD9M,OAAA+M,OAAA,CACIlL,IAAKxB,EACLY,MAAOA,EACPgH,UAAW4C,YACPnD,EAAQ2D,IADGrL,OAAAgN,GAAA,EAAAhN,CAAA,GAGN0H,EAAQgF,SAAWA,KAGxBE,GAGJ7E,EAAA,cAACW,EAAA,EAAD,CAASnC,MAAOlG,GACXsM,gBfnCL9N,iKAqBZ,IA+Ce4K,eAzFA,SAACC,GAAD,OAAkBC,YAAa,CAC1CsD,KAAM,CACFrD,SAAU,WACVK,QAASP,EAAMK,QAAQ,GACvBmD,OAAQxD,EAAMK,QAAQ,GACtBf,KAAM,MACNmE,UAAW,mBACXjB,gBAAiBV,YAAK9B,EAAM+B,QAAQ2B,QAAQjB,MAAO,IACnDR,WAAYjC,EAAMkC,YAAYC,OAAO,CAAC,mBAAoB,aAAc,UAAW,CAC/EC,SAAUpC,EAAMkC,YAAYE,SAASC,QAEzCO,UAAU,CACNJ,gBAAiBxC,EAAM+B,QAAQ2B,QAAQjB,QAG/CkB,aAAc,CACV/B,aAAc,EACdY,gBAAiB,kBAwEVzC,CA/CiC,SAAAgB,GAAqC,IAAlC6C,EAAkC7C,EAAlC6C,SAAUZ,EAAwBjC,EAAxBiC,SAAUhF,EAAc+C,EAAd/C,QAC7D6F,EAAgB,CAClB,CACIlN,KAAM,qEACNmN,IAAK3O,EAAQ4O,KACbd,KAAO5E,EAAA,cAAC2F,EAAA,EAAD,OAEX,CACIrN,KAAM,4EACNmN,IAAK3O,EAAQ8O,QACbhB,KAAO5E,EAAA,cAAC6F,EAAA,EAAD,OAEX,CACIvN,KAAM,kFACNmN,IAAK3O,EAAQgP,QACblB,KAAO5E,EAAA,cAAC+F,EAAA,EAAD,OAEX,CACIzN,KAAM,6CACNmN,IAAK3O,EAAQ4E,OACbkJ,KAAO5E,EAAA,cAACgG,EAAA,EAAD,QAGf,OACIhG,EAAA,cAACiG,EAAA,EAAD,CAAO/F,UAAWP,EAAQuF,MACtBlF,EAAA,cAACkG,EAAA,EAAD,CACIhN,MAAOyL,EACPwB,WAAS,EACTC,SAAU,SAACC,EAAGnN,GAAJ,OAAcqM,EAASrM,IACjCmI,KAAK,SACLnB,UAAWP,EAAQ2F,cAElBE,EAAKtI,IAAI,SAAA5B,GAAI,OACV0E,EAAA,cAACsG,GAAD,CACIxM,IAAKwB,EAAKmK,IACVvM,MAAOoC,EAAKmK,IACZd,SAAUrJ,EAAKmK,MAAQd,EACvBC,KAAMtJ,EAAKsJ,KACXtM,KAAMgD,EAAKhD,uBgBpEpBqJ,GAnBD4E,aAAe,CACzB7C,QAAS,CACL2B,QAAS,CACLb,KAAK,UACLF,KAAM,UACNF,MAAM,WAEVH,UAAW,CACPO,KAAM,UACNF,KAAM,UACNF,MAAO,WAEXoC,WAAW,CACPC,QAAQ,oECgJLC,GA9IuB,SAAAhE,GAA6C,IAA1CnH,EAA0CmH,EAA1CnH,KAAMoL,EAAoCjE,EAApCiE,KAAMC,EAA8BlE,EAA9BkE,KAAMrF,EAAwBmB,EAAxBnB,QAASoD,EAAejC,EAAfiC,SAC1DtD,EAAOzJ,EAAOiP,YAsEdC,EAAY,SAAC/K,GACf,OACIiE,EAAA,cAACA,EAAA,SAAD,KAEIA,EAAA,cAAC+G,EAAA,MAAD,CACIC,OAAQ,CACJ,EACA,EACApP,EAAOC,YACP,GAEJoP,OAAQtF,GAAM+B,QAAQwD,KAAK,KAC3BC,YAAa9F,EAAO,EACpB+F,WAAY,EACZC,cAAezP,EAAOC,YAAc,GACpCyP,aAAc1P,EAAOC,YAAc,GACnC0P,eAAuB,EAAPlG,EAIhBmG,SAAUzL,EAAM7C,MAAQ,EAAI6C,EAAM1D,MAAQ,IAAM0D,EAAM1D,QAE1D2H,EAAA,cAAC+G,EAAA,KAAD,CACIrP,EAAmB,IAAhBqE,EAAM1D,MAAe0D,EAAM7C,MAAQ,EAAItB,EAAOC,YAAc,GAAKD,EAAOC,YAAeD,EAAOC,YAAc,EAC/GC,EAAmB,KAAhBiE,EAAM1D,MAAgB0D,EAAM7C,MAAQ,EAAItB,EAAOC,YAAc,GAAKD,EAAOC,YAAc,GAAMD,EAAOC,YAAc,IACrH4P,KAAM1L,EAAM7C,MAAQ,QAMpC,OACI8G,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAAC+G,EAAA,MAAD,CACIrP,EAAG6D,EAAK7D,EACRI,EAAGyD,EAAKzD,GAEPyD,EAAK7B,QAAUoN,EAAUvL,EAAK7B,QAC9B6B,EAAK5B,QAAUmN,EAAUvL,EAAK5B,QAC/BqG,EAAA,cAAC+G,EAAA,OAAD,CACI7G,UAAU,WACVwH,OAAQrG,EACR3J,EAAG,EACHI,EAAG,EACH6P,KAhDRpM,EAAK3B,SAAiB+H,GAAM+B,QAAQO,UAAUO,KAC3C7C,GAAM+B,QAAQO,UAAUK,KAgDnB8C,WAAYzC,EAAW,EAAI,EAC3BsC,OA5EO,WACnB,OAAQL,GACJ,KAAK9P,EAAQ4O,KACT,GAAInK,EAAK3B,SAAU,OAAO+H,GAAM+B,QAAQO,UAAUO,KACtD,KAAK1N,EAAQgP,QACb,KAAKhP,EAAQ8Q,aACT,OAAOjG,GAAM+B,QAAQ2B,QAAQjB,MAEjC,QACI,OAAOzC,GAAM+B,QAAQO,UAAUK,MAmEnBuD,GACRV,YAjEO,WACnB,OAAQP,GACJ,KAAK9P,EAAQ4O,KACT,GAAInK,EAAK3B,SAAU,OAAO,EAC9B,KAAK9C,EAAQgP,QACb,KAAKhP,EAAQ8Q,aACT,OAAO,EAEX,QACI,OAAO,GAwDUE,GAEbP,eAAuB,EAAPlG,EAChB0G,UAAWnB,IAAS9P,EAAQ4O,OAASnK,EAAK3B,SAC1CoO,gBAAc,EACdC,WAAY,SAAC5B,GAAD,OAAWM,EAAKN,EAAG9K,IAC/BgG,QAAO,SAAA2G,GAAA,SAAA3G,EAAA4G,GAAA,OAAAD,EAAAE,MAAAjQ,KAAAgD,WAAA,OAAAoG,EAAA8G,SAAA,kBAAAH,EAAAG,YAAA9G,EAAA,CAAE,SAAC8E,GAAD,OAAW9E,EAAQ8E,EAAG9K,KAC/B+M,aAAc,SAACjC,GAAD,OA1HL,SAACA,EAAuCO,GAC7D,IAAM2B,EAAoClC,EAAEmC,OAAOC,WAEnD,OAAQ7B,GACJ,KAAK9P,EAAQ4E,OACT,GAAIH,EAAK3B,SAAU,CACf2O,EAAMG,YAAY1H,MAAM2H,OAAS,UACjC,MAER,KAAK7R,EAAQ8R,KACTL,EAAMG,YAAY1H,MAAM2H,OAAS,UACjC,MAGJ,KAAK7R,EAAQgP,QACb,KAAKhP,EAAQ8Q,aACTW,EAAMG,YAAY1H,MAAM2H,OAAS,YACjC,MAEJ,KAAK7R,EAAQ4O,KACT,GAAInK,EAAK3B,SAAU,CACf2O,EAAMG,YAAY1H,MAAM2H,OAAS,UACjC,MAEJJ,EAAMG,YAAY1H,MAAM2H,OAAS,QAkGJE,CAAiBxC,EAAGO,IAC7CkC,aAAc,SAACzC,GAAD,OAzFL,SAACA,GACtB,IAAMkC,EAAoClC,EAAEmC,OAAOC,WAChDF,IAAOA,EAAMG,YAAY1H,MAAM2H,OAAS,WAuFNI,CAAiB1C,SCpF/C2C,GA5CuB,SAAAtG,GAAwC,IAArCjH,EAAqCiH,EAArCjH,KAAOmL,EAA8BlE,EAA9BkE,KAAMrF,EAAwBmB,EAAxBnB,QAASoD,EAAejC,EAAfiC,SACrDtD,EAAOzJ,EAAOqR,YAqBpB,OACIjJ,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAAC+G,EAAA,KAAD,CACIC,OAAQ,CACJvL,EAAK/D,EACL+D,EAAK3D,EACL2D,EAAKrB,KACLqB,EAAKpB,MAET4M,OAAQtF,GAAM+B,QAAQO,UAAUG,MAChC+C,YAAa9F,EACb+F,WAAYzC,EAAW,EAAI,EAE3B4C,eAAqB,EAALlG,EAChBE,QAAO,SAAA2G,GAAA,SAAA3G,EAAA4G,GAAA,OAAAD,EAAAE,MAAAjQ,KAAAgD,WAAA,OAAAoG,EAAA8G,SAAA,kBAAAH,EAAAG,YAAA9G,EAAA,CAAE,SAAC8E,GAAD,OAAW9E,EAAQ8E,EAAE5K,KAC9B6M,aAAc,SAACjC,GAAD,OAnCD,SAACA,EAAuCO,GAC7D,IAAM2B,EAAoClC,EAAEmC,OAAOC,WAEnD,OAAQ7B,GACJ,KAAK9P,EAAQ4E,OACb,KAAK5E,EAAQ8R,KACTL,EAAMG,YAAY1H,MAAM2H,OAAS,WA6BRE,CAAiBxC,EAAGO,IAC7CkC,aAAc,SAACzC,GAAD,OApBD,SAACA,GACtB,IAAMkC,EAAoClC,EAAEmC,OAAOC,WAChDF,IAAOA,EAAMG,YAAY1H,MAAM2H,OAAS,WAkBVI,CAAiB1C,iBCS3C6C,GAnDuB,SAAAxG,GAAoD,IAAjDyG,EAAiDzG,EAAjDyG,UAAWC,EAAsC1G,EAAtC0G,WAAYC,EAA0B3G,EAA1B2G,UAAWC,EAAe5G,EAAf4G,SACjEC,EAAmBD,EAAWH,EAC9BK,EAAmBH,EAAYD,EAwCrC,OACIpJ,EAAA,cAACA,EAAA,SAAD,KArBgB,WAEhB,IADA,IAAMyJ,EAAU,GACPC,EAAQ,EAAGA,EAAQH,EAAUG,IAElCD,EAAQxP,KAAK+F,EAAA,cAAC2J,GAAA,KAAD,CACT3C,OAAQ,CACJ0C,EAAMP,EACN,EACAO,EAAMP,EACNE,GAGJpC,OAAO,OACPE,YAAa,EACbrN,IAAK4P,KAIb,OAAOD,EAIFG,GAzCQ,WAEb,IADA,IAAMC,EAAO,GACJH,EAAQ,EAAGA,EAAQF,EAAUE,IAClCG,EAAK5P,KAAK+F,EAAA,cAAC2J,GAAA,KAAD,CACN3C,OAAQ,CACJ,EACA0C,EAAQN,EACRE,EACAI,EAAQN,GAGZnC,OAAO,OACPE,YAAa,EACbrN,IAAK4P,KAGb,OAAOG,EA0BFC,0BC8BEpI,eA1EA,SAACC,GAAD,OAAkBC,YAAa,CAC1CsD,KAAK,CACD6E,SAAU,EACV5F,gBAAiB,QAErBoE,MAAO,CACHpE,gBAAiB,WAoEVzC,CAlDyB,SAAAgB,GAA6G,IAA1G/C,EAA0G+C,EAA1G/C,QAAS4I,EAAiG7F,EAAjG6F,MAAOyB,EAA0FtH,EAA1FsH,YAAaC,EAA6EvH,EAA7EuH,WAAY1I,EAAiEmB,EAAjEnB,QAAS2I,EAAwDxH,EAAxDwH,YAAaC,EAA2CzH,EAA3CyH,OAAQxL,EAAmC+D,EAAnC/D,KAAMyL,EAA6B1H,EAA7B0H,OAAQC,EAAqB3H,EAArB2H,eAC5H,OACIrK,EAAA,cAACsK,GAAAC,EAAD,CACIrK,UAAWP,EAAQuF,KACnBsF,UAAQ,GACRxK,EAAA,cAAC+G,EAAA,MAAD,CACItE,OAAQuH,EACRlI,MAAOmI,EACP/J,UAAWP,EAAQ4I,MACnBhH,QAASA,EACT2I,YAAaA,EACbO,IAAKlC,GAGLvI,EAAA,cAAC+G,EAAA,MAAD,CAAO7G,UAAU,SACbF,EAAA,cAAC0K,GAAD,CACItB,WAAYxR,EAAOC,YACnBsR,UAAWvR,EAAOC,YAClBwR,UAAWW,EACXV,SAAUW,IAEbtL,EAAKgM,WAAWzN,IAAI,SAAAzB,GAAI,OACrBuE,EAAA,cAAC4K,GAAD,CACI9Q,IAAK2B,EAAKrD,GACVqD,KAAMA,EACNmL,KAAMwD,EACN7I,QAASA,EACToD,SAAU0F,IAAmB5O,MAIpCkD,EAAKtD,WAAW6B,IAAI,SAAA3B,GAAI,OACrByE,EAAA,cAAC6K,GAAD,CACI/Q,IAAKyB,EAAKnD,GACVmD,KAAMA,EACNqL,KAAMwD,EACNzD,KAAMwD,EACN5I,QAASA,EACToD,SAAU0F,IAAmB9O,qBCnB1CmG,eAlDA,SAACC,GAAD,OAAkBC,YAAa,CAC1CsD,KAAK,GAGL5B,IAAI,CACAf,WAAWZ,EAAMK,QAAQ,GACzBM,YAAYX,EAAMK,QAAQ,IAE9B8I,KAAK,CACDf,SAAS,MAyCFrI,CAhC2B,SAAAgB,GAKhC,IAHF/C,EAGE+C,EAHF/C,QAGEoL,EAAArI,EAFFsI,kBAEE,IAAAD,EAFW,SAAC1E,GAAO4E,MAAM,8JAEzBF,EAAAG,EAAAxI,EADFyI,mBACE,IAAAD,EADY,SAAC7E,GAAO4E,MAAM,8JAC1BC,EAEN,OACIlL,EAAA,cAACoC,GAAD,CACIlC,UAAWP,EAAQuF,MAEnBlF,EAAA,qBAAKE,UAAWP,EAAQmL,OACxB9K,EAAA,cAACoL,GAAA,EAAD,CACIhK,MAAM,YACNhB,QAAQ,YACRF,UAAWP,EAAQ2D,IACnB/B,QAASyJ,GAJb,0DAQAhL,EAAA,cAACoL,GAAA,EAAD,CACIhK,MAAM,YACNhB,QAAQ,YACRF,UAAWP,EAAQ2D,IACnB/B,QAAS4J,GAJb,qKCjBNE,eACF,SAAAA,EAAYrT,GAAuB,IAAAc,EAAA,OAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAAkT,IAC/BvS,EAAAb,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAoT,GAAApS,KAAAd,KAAMH,KACD4G,MAAQ,CACTO,MAAM,EACNmM,KAAM,IAAIpQ,KAEdpC,EAAKyS,QAAUzS,EAAKyS,QAAQjM,KAAbrH,OAAAsH,EAAA,EAAAtH,CAAAa,IACfA,EAAK0S,aAAe1S,EAAK0S,aAAalM,KAAlBrH,OAAAsH,EAAA,EAAAtH,CAAAa,IAPWA,oFASd,IACTwS,EAASnT,KAAKyG,MAAd0M,KACRA,EAAK9P,IAAI,4BAAQ,GACjB8P,EAAK9P,IAAI,8CAAW,GACpBrD,KAAKqH,SAAS,CAAE8L,KAAM,IAAIpQ,IAAIoQ,qCAE1BG,GAAmB,IACfH,EAASnT,KAAKyG,MAAd0M,KACRA,EAAK9P,IAAIiQ,GAAMH,EAAK1P,IAAI6P,IACxBtT,KAAKqH,SAAS,CAAE8L,KAAM,IAAIpQ,IAAIoQ,0CAErBI,EAAuBlN,EAAeoG,GAAoB,IAAAjH,EAAAxF,KAAAuH,EACrBvH,KAAKH,MAA3CqS,EAD2D3K,EAC3D2K,eAAgB1K,EAD2CD,EAC3CC,QAAS4F,EADkC7F,EAClC6F,SACzB+F,EAASnT,KAAKyG,MAAd0M,KACR,OACItL,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAAC2L,GAAA,EAAD,CAAUC,QAAM,EAACrK,QAAS,kBAAM5D,EAAK4N,QAAQ/M,KACxCoG,GACG5E,EAAA,cAAC6L,GAAA,EAAD,KACI7L,EAAA,cAAC8L,GAAA,EAAD,CAAOC,aAAcL,EAAYpR,OAAQ8G,MAAM,aAC1CwD,IAIb5E,EAAA,cAACgM,GAAA,EAAD,CAAc3G,QAAS7G,IACtB8M,EAAK1P,IAAI4C,GAASwB,EAAA,cAACiM,GAAA,EAAD,MAAiBjM,EAAA,cAACkM,GAAA,EAAD,OAExClM,EAAA,cAACmM,GAAA,EAAD,CAAUC,GAAId,EAAK1P,IAAI4C,GAAQ6N,QAAQ,OAAOC,eAAa,GACvDtM,EAAA,cAACuM,GAAA,EAAD,CAAMC,UAAU,MAAMC,gBAAc,GAC/Bf,EAAYxO,IAAI,SAAA5B,GAAI,OACjB0E,EAAA,cAAC2L,GAAA,EAAD,CACIC,QAAM,EACN1L,UAAWP,EAAQ+M,OACnB5S,IAAKwB,EAAKlD,GACVuM,SAAU0F,IAAmB/O,EAC7BiG,QAAS,SAAC8E,GAAD,OAAOd,EAASjK,KAEzB0E,EAAA,cAACgM,GAAA,EAAD,CAAc3G,QAAS/J,EAAKlD,UAK5C4H,EAAA,cAACU,EAAA,EAAD,wCAIH,IAAAiM,EACoBxU,KAAKH,MAAtB+C,EADH4R,EACG5R,MAAOC,EADV2R,EACU3R,MACf,OACIgF,EAAA,cAAC4M,EAAD,CACI9M,OAAO,OACPtB,MAAM,oGACNqB,QAAUG,EAAA,cAAC6M,GAAA,EAAD,OAGT1U,KAAKqT,aAAazQ,EAAO,2BAASiF,EAAA,cAAC8M,GAAA,EAAD,OAClC3U,KAAKqT,aAAaxQ,EAAO,6CAAYgF,EAAA,cAAC+M,GAAA,EAAD,eAlE5BtL,iBA0EXC,eA7FA,SAACC,GAAD,OAAkBC,YAAa,CAC1C8K,OAAQ,CACJM,YAAarL,EAAMK,QAAQ,OA2FpBN,CAAmB2J,wBCrE5B4B,eACF,SAAAA,EAAYjV,GAAwB,IAAAc,EAAA,OAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAA8U,IAChCnU,EAAAb,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAgV,GAAAhU,KAAAd,KAAMH,KACD4G,MAAQ,GAFmB9F,0EAMzB4E,GACP,OAAIA,aAAkBlE,EAAa,2BAC1BkE,aAAkBvD,EAAa,mDAC5B,8EAEPuD,GAA4B,IAAAgC,EACHvH,KAAKH,MAA3B2H,EADyBD,EACzBC,QAASuN,EADgBxN,EAChBwN,SACjB,GAAIxP,EAAQ,OACRsC,EAAA,cAACmN,EAAA,EAAD,CAAKjN,UAAWP,EAAQuF,MACpBlF,EAAA,cAACQ,EAAA,EAAD,CAAYN,UAAWP,EAAQyN,SAAUhM,MAAM,gBAAgBiM,cAAY,GACtElV,KAAKmV,WAAW5P,IAErBsC,EAAA,cAACQ,EAAA,EAAD,CAAYJ,QAAQ,KAAKF,UAAWP,EAAQnB,OACvCd,EAAOpF,MAEZ0H,EAAA,cAACuN,GAAA,EAAD,CAAYC,aAAW,SAASjM,QAAS,kBAAM2L,EAASxP,KACpDsC,EAAA,cAACgG,EAAA,EAAD,yCAKP,IACGtI,EAAWvF,KAAKH,MAAhB0F,OACR,OACIsC,EAAA,cAAC4M,EAAD,CACI9M,OAAO,QACPtB,MAAM,wKACNqB,QAAUG,EAAA,cAACyN,GAAA,EAAD,OAETtV,KAAKuV,SAAShQ,GACfsC,EAAA,cAACU,EAAA,EAAD,cArCWe,iBA4CZC,eApEA,SAACC,GAAD,OAAkBC,YAAa,CAC1CsD,KAAM,CACFhD,QAASP,EAAMK,QAAQ,IAE3BoL,SAAU,CACNO,SAAU,IAEdnP,MAAO,CACHoP,aAAajM,EAAMK,QAAQ,OA4DpBN,CAAmBuL,ICzEnBY,GAAA,WACX,IAAMlP,EAAO,IAAIhE,EACbY,EAAOoD,EAAKiH,QAAQ,IAAK,IAAS,EAAE,IAAG,GAW3C,OAVGrK,IACCoD,EAAKmP,mBAAmBvS,EAAM,EAAI,KAClCoD,EAAKmP,mBAAmBvS,EAAM,GAAK,OAEvCA,EAAOoD,EAAKiH,QAAQ,KAAK,IAAI,EAAE,IAAG,MAE9BjH,EAAKmP,mBAAmBvS,EAAM,GAAK,KACnCoD,EAAKmP,mBAAmBvS,EAAM,IAAM,MAGjCoD,wBCiCLoP,eAEF,SAAAA,EAAY/V,GAAmB,IAAAc,EAAA,OAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAA4V,IAC3BjV,EAAAb,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAA8V,GAAA9U,KAAAd,KAAMH,KAFFuQ,WACuB,EAG3BzP,EAAK8F,MAAQ,CACToL,YAAa,IACbC,WAAY,IACZtL,KAAMqP,GAAkB/U,KAAlBhB,OAAAsH,EAAA,EAAAtH,CAAAa,IACNsR,OAAQtT,EAAQ8R,KAChByB,oBAAgBjP,EAChB6S,iBAAa7S,GAIjBtC,EAAKyI,QAAUzI,EAAKyI,QAAQjC,KAAbrH,OAAAsH,EAAA,EAAAtH,CAAAa,IACfA,EAAKqR,OAASrR,EAAKqR,OAAO7K,KAAZrH,OAAAsH,EAAA,EAAAtH,CAAAa,IACdA,EAAKoR,YAAcpR,EAAKoR,YAAY5K,KAAjBrH,OAAAsH,EAAA,EAAAtH,CAAAa,IACnBA,EAAKoV,WAAapV,EAAKoV,WAAW5O,KAAhBrH,OAAAsH,EAAA,EAAAtH,CAAAa,IAClBA,EAAKqV,YAAcrV,EAAKqV,YAAY7O,KAAjBrH,OAAAsH,EAAA,EAAAtH,CAAAa,IACnBA,EAAKsV,cAAgBtV,EAAKsV,cAAc9O,KAAnBrH,OAAAsH,EAAA,EAAAtH,CAAAa,IACrBA,EAAKoF,aAAepF,EAAKoF,aAAaoB,KAAlBrH,OAAAsH,EAAA,EAAAtH,CAAAa,IACpBA,EAAKuV,aAAevV,EAAKuV,aAAa/O,KAAlBrH,OAAAsH,EAAA,EAAAtH,CAAAa,IACpBA,EAAKwV,UAAYxV,EAAKwV,UAAUhP,KAAfrH,OAAAsH,EAAA,EAAAtH,CAAAa,IAEjBA,EAAKyP,MAAQ9G,cAvBc3I,oFA0B3BX,KAAKiW,4DAILG,OAAOC,iBAAiB,SAAUrW,KAAKiW,eADvB,IAEC7F,EAAUpQ,KAAKoQ,MAAxBkG,QACR,GAAIlG,EAAO,CACP,IAAMG,EAA6BH,EAAMmG,MAAMhG,UAAUiG,cACtDjG,IACCA,EAAUkG,WAAalG,EAAUmG,aAAenG,EAAUoG,cAAgB,EAC1EpG,EAAUqG,YAAcrG,EAAUsG,YAActG,EAAUuG,aAAe,mDAKjFV,OAAOW,oBAAoB,SAAU/W,KAAKiW,iEAEpBe,GAClBA,EAAU7Q,YAAcnG,KAAKyG,MAAMD,MACnCxG,KAAKqH,SAAS,CAAEb,KAAMwQ,EAAU7Q,+CAE7BK,GACPxG,KAAKqH,SAAS,CAAEb,yCAIZ0H,EAAuC3I,GAAiB,IAAAqC,EACnC5H,KAAKyG,MAAtBwL,EADoDrK,EACpDqK,OAAQzL,EAD4CoB,EAC5CpB,KACVyQ,EAAe/I,EAAEmC,OAAOC,aAAepC,EAAEmC,OAG/C,GAFAnC,EAAEgJ,IAAIC,iBAEe,IAAjBjJ,EAAEgJ,IAAIzD,OACN,OAAQxB,GACJ,KAAKtT,EAAQ8R,KACJwG,EAEEjX,KAAKqH,SAAS,CAAE6K,oBAAgBjP,IADnCjD,KAAKkW,aAAa3Q,GAGtB,MAEJ,KAAK5G,EAAQ8O,QACT,GAAIwJ,EAAc,KAAAG,EACalJ,EAAEgJ,IAArBG,EADMD,EACNC,OAAQC,EADFF,EACEE,OAChB9Q,EAAKiH,QAAQ5O,EAAO0Y,MAAMF,GAASxY,EAAO0Y,MAAMD,GAAS,GAEzDtX,KAAK+V,WAAWvP,GAEpB,MAEJ,KAAK7H,EAAQgP,QACT,IAAKsJ,GAAgB1R,aAAkBlE,EAAM,CAEzC,IAAMiC,EAAOkD,EAAKmH,QAAQpI,EAAOhG,EAAGgG,EAAO5F,GAC3C6G,EAAKgR,kBAAkBlU,EAAMiC,GAC7BvF,KAAKqH,SAAS,CACVyO,YAAaxS,EACb2O,OAAQtT,EAAQ8Q,eAGpBzP,KAAK+V,WAAWvP,GAEpB,MAEJ,KAAK7H,EAAQ8Q,aACT,IAAKwH,GAAgB1R,aAAkBlE,GAAQrB,KAAKyG,MAAMqP,uBAAuB9T,EAAM,CACnF,IAAMsB,EAAOtD,KAAKyG,MAAMqP,YACpBtP,EAAKgR,kBAAkBlU,EAAMiC,EAAQ,QACrCvF,KAAKqH,SAAS,CACV4K,OAAQtT,EAAQgP,QAChBmI,iBAAa7S,IAGrBjD,KAAK+V,WAAWvP,GAEpB,MAEJ,KAAK7H,EAAQ4E,QACJ0T,GAAgB1R,GACjBvF,KAAK+F,aAAaR,wCAa1B2I,GAAuC,IAAAuJ,EACTzX,KAAKyG,MAAnCwL,EADuCwF,EACvCxF,OAAQzL,EAD+BiR,EAC/BjR,KAAMsP,EADyB2B,EACzB3B,YADyB4B,EAEpBxJ,EAAEgJ,IAArBG,EAFuCK,EAEvCL,OAAQC,EAF+BI,EAE/BJ,OAChB,OAAQrF,GACJ,KAAKtT,EAAQ8Q,aACT,GAAGvB,EAAEmC,OAAOC,WAAW,CACnB,GAAIwF,GAAeA,aAAuB9T,EACzB8T,EACRxQ,aAAa+R,EAAQC,QACvBtX,KAAKqH,SAAS,CAAE4K,OAAQtT,EAAQgP,UACvC3N,KAAK+V,WAAWvP,GAEpB,MAEJ,KAAK7H,EAAQ4E,OACT,IAAM6M,EAA6BlC,EAAEmC,OAAOC,WACzCF,IAAUlC,EAAEmC,SACXD,EAAMG,YAAY1H,MAAM2H,OAAS,2CAQ1CtC,EAAsC3I,GAAgB,IAAAoS,EAChC3X,KAAKyG,MAAtBD,EADiDmR,EACjDnR,KACR,OAFyDmR,EAC3C1F,QAEV,KAAKtT,EAAQ4O,KACT,GAAIhI,aAAkBlE,GACd6M,EAAEgJ,IAAIU,iBAAkB,KAAAC,EACG3J,EAAEgJ,IAArBG,EADgBQ,EAChBR,OAAQC,EADQO,EACRP,OAChB9Q,EAAKsR,WAAWvS,EAAOtF,GAAIpB,EAAO0Y,MAAMF,GAASxY,EAAOkZ,MAAMT,IAC9DtX,KAAK+V,WAAWvP,yCAUxB0H,GACR,OAAQA,EAAEvM,KACN,IAAK,SACD3B,KAAKgY,6DAQDvJ,GACZzO,KAAKgY,oBACLhY,KAAKqH,SAAS,CACV4K,OAAQxD,GAAQ,gDAGJ,IAAAwJ,EAEsBjY,KAAKyG,MAAnCwL,EAFQgG,EAERhG,OAAQ6D,EAFAmC,EAEAnC,YAAatP,EAFbyR,EAEazR,KACzByL,IAAWtT,EAAQ8Q,cAAgBqG,IACnCtP,EAAKT,aAAa+P,GAClB9V,KAAKqH,SAAS,CACVyO,iBAAa7S,IAEjBjD,KAAK+V,WAAWvP,0CAGV0H,GACVlO,KAAKqH,SAAS,CACVwK,YAAkC,IAArBuE,OAAO8B,YACpBpG,WAAgC,IAApBsE,OAAO+B,kDAGd5S,GACLA,GAAQvF,KAAKqH,SAAS,CAAE6K,eAAgB3M,yCAEnCA,GAETvF,KAAKqH,SAAS,CAAE6K,oBAAgBjP,IAChCjD,KAAKyG,MAAMD,KAAKT,aAAaR,GAC7BvF,KAAK+V,WAAW/V,KAAKyG,MAAMD,0CAGvB4P,OAAOgC,QAAQ,qMACfpY,KAAKqH,SAAS,CAACb,KAAMqP,wCAGpB,IAAAwC,EAC6DrY,KAAKyG,MAA/DoL,EADHwG,EACGxG,YAAaC,EADhBuG,EACgBvG,WAAYtL,EAD5B6R,EAC4B7R,KAAMyL,EADlCoG,EACkCpG,OAAQC,EAD1CmG,EAC0CnG,eACvC1K,EAAYxH,KAAKH,MAAjB2H,QACR,OACIK,EAAA,cAACmN,EAAA,EAAD,CAAKjN,UAAWP,EAAQuF,MACpBlF,EAAA,cAACyQ,GAAAlG,EAAMmG,SAAP,CAAgBC,UAAU,IAC1B3Q,EAAA,cAAC4Q,EAAA,EAAD,CACIC,aAAc,QACdC,SAAU,SACV3C,YAAahW,KAAKgW,cAEtBnO,EAAA,cAAC+Q,GAAD,CACI5F,YAAahT,KAAKmW,YAEtBtO,EAAA,qBAAKE,UAAWP,EAAQY,UACxBP,EAAA,cAACmN,EAAA,EAAD,CAAKjN,UAAWP,EAAQqR,UACpBhR,EAAA,qBAAKE,UAAWP,EAAQY,UAExBP,EAAA,cAACiR,GAAD,CACIlW,MAAO4D,EAAKtD,WACZL,MAAO2D,EAAKgM,WACZN,eAAgBA,EAChB9E,SAAUpN,KAAKkW,eAGnBrO,EAAA,cAACkR,GAAD,CACI3P,QAASpJ,KAAKoJ,QACd4I,OAAQhS,KAAKgS,OACbD,YAAa/R,KAAK+R,YAClBF,YAAaA,EACbC,WAAYA,EACZtL,KAAMA,EACN4J,MAAOpQ,KAAKoQ,MACZ8B,eAAgBA,EAChBD,OAAQA,IAEZpK,EAAA,cAACmR,GAAD,CACIzT,OAAQ2M,EACR6C,SAAU/U,KAAK+F,gBAGvB8B,EAAA,cAACoR,GAAD,CACIzM,SAAUyF,EACV7E,SAAUpN,KAAKkZ,gBAAgB/R,KAAKnH,gBA7PnCsJ,aAmQNC,eApSA,SAACC,GAAD,OAAkBC,YAAa,CAC1CsD,KAAM,CACFpD,MAAO,OACPW,OAAQ,OACR6O,SAAU,SACV9K,WAAY7E,EAAM+B,QAAQ8C,WAAWC,QACrC8K,QAAS,OACTC,cAAe,UAEnBR,SAAU,CACNO,QAAS,OACTxH,SAAU,EACVuH,SAAU,UAGd/Q,QAASoB,EAAMQ,OAAO5B,WAqRXmB,CAAmBqM,IChTrB0D,GAAS,SAACnT,GAAD,MAAqC,CACvDQ,KfDuB,ceEvBR,cCMWoT,eALU,SAAC9S,GAAD,MAAsB,CAC3CN,UAAUM,EAAMD,KAAKL,YAEE,SAACqT,GAAD,OAAwBC,YAAmB3Z,OAAA+G,EAAA,EAAA/G,CAAA,GAAI4Z,GAAcF,IAEzED,CAA4C3D,ICX9C+D,GACE,IADFA,GAEE,kBC0DApQ,gBApDA,SAACC,GAAD,OAAkBC,YAAa,CAC7CsD,KAAK,CACJqM,QAAS,OACTC,cAAe,SACfO,WAAY,SACZC,eAAgB,cAGjB3P,KAAM,CACLP,MAAO,MACPW,OAAO,OAERjE,MAAO,CACN0D,QAAS,IAEV+P,WAAY,CACX/P,QAAS,IAEVoB,IAAK,MAkCS5B,CA5BI,SAAAgB,GAA2C,IAAzC/C,EAAyC+C,EAAzC/C,QACpB,OACCK,EAAA,wBAAQE,UAAWP,EAAQuF,MAC1BlF,EAAA,qBACCmD,IAAKvL,EAAOwL,aACZF,IAAI,OACJhD,UAAWP,EAAQ0C,OAEpBrC,EAAA,cAACQ,EAAA,EAAD,CAAYJ,QAAQ,KAAKF,UAAWP,EAAQnB,OAC1C5G,EAAO4G,OAETwB,EAAA,cAACQ,EAAA,EAAD,CAAYJ,QAAQ,YAAYK,MAAM,SAASP,UAAWP,EAAQsS,YAChEra,EAAOsa,aAETlS,EAAA,cAACoL,GAAA,EAAD,CACCoB,UAAW2F,IACXlP,GAAI6O,GACJ1R,QAAQ,YACRiB,KAAK,QACLD,MAAM,aALP,iDC3BGgR,oLACI,IACAzS,EAAYxH,KAAKH,MAAjB2H,QACR,OACCK,EAAA,qBAAKE,UAAWP,EAAQuF,MACvBlF,EAAA,cAACqS,GAAD,cALe5Q,aAWJC,eAzBA,SAACC,GAAD,OAAkBC,YAAa,CAC7CsD,KAAM,CACLpD,MAAM,OACNwQ,UAAU,OACVf,QAAQ,QACR/K,WAAY7E,EAAM+B,QAAQ8C,WAAWC,QACrCvE,QAASP,EAAMK,QAAQ,OAmBVN,CAAmB0Q,IC5BrBG,GAAW,SAAC/T,GAAD,MAAkC,CACtDM,KnBDqB,YmBErBN,UCOWkT,eALU,SAAAhP,GAAA,MAAuB,CAC5ClE,MADqBkE,EAAE3D,KACZP,QAEY,SAACmT,GAAD,OAAwBC,YAAmB3Z,OAAA+G,EAAA,EAAA/G,CAAA,GAAIua,GAAcb,IAEzED,CAA4CU,6CCgD5CK,oLAzCb,OACCzS,EAAA,cAACA,EAAA,SAAD,KACCA,EAAA,cAAC0S,GAAAnI,EAAD,CACCoI,eAAgB,CAACC,KAAO,MACxBC,cAAc,aACdC,aAAclb,QACdmb,KAAM,CACL,CAACC,IAAM,gBAAiBC,KAAOrb,gBAC/B,CAACob,IAAM,YAAaC,KAAOrb,aAC3B,CAACob,IAAM,aAAcC,KAAO,8DAC5B,CAACD,IAAM,aAAcC,KAAO,4DAE7BC,KAAM,CACL,CAACC,QAAU,SACX,CAAC7a,KAAQ,WAAY8a,QAAW,0EAChC,CAAC9a,KAAQ,cAAe8a,QAAW,WACnC,CAAC9a,KAAQ,cAAe8a,QAAWxb,eACnC,CAACyb,SAAY,UAAWD,QAAW,WACnC,CAACC,SAAY,WAAYD,QAAWxb,SACpC,CAACyb,SAAY,WAAYD,QAAWxb,aACpC,CAACyb,SAAY,WAAYD,QAAWxb,aACpC,CAACyb,SAAY,gBAAiBD,QAAWxb,aACzC,CAACyb,SAAY,SAAUD,QAAWxb,UAIpCoI,EAAA,cAACsT,GAAA,EAAD,MACAtT,EAAA,cAACuT,GAAA,EAAD,CAAe5R,MAAOA,IACrB3B,EAAA,cAACwT,EAAA,EAAD,KACCxT,EAAA,cAACwT,EAAA,EAAD,CAAOC,KAAM3B,GAAmBtF,UAAW4F,GAAMsB,OAAK,IACtD1T,EAAA,cAACwT,EAAA,EAAD,CAAOC,KAAM3B,GAAmBtF,UAAWuB,eAhC/BtM,oBCSlBkS,IAASC,OACLC,EAAAtJ,EAAAuJ,cAACC,EAAA,EAAD,CAAUC,MAAOA,GACbH,EAAAtJ,EAAAuJ,cAhBK,WACqB,OAC1BD,EAAAtJ,EAAAuJ,cAAC9Q,EAAA,EAAD,KACI6Q,EAAAtJ,EAAAuJ,cAACG,GAAD,QAaJ,OAEJC,SAASC,eAAe,0CC7B5BC,EAAAC,EAAAC,GAAA,SAAAC,GAAAH,EAAAI,EAAAF,EAAA,wBAAAG,IAAAL,EAAAI,EAAAF,EAAA,0BAAA9V,IAAA4V,EAAAI,EAAAF,EAAA,gCAAApC,IAAAkC,EAAAI,EAAAF,EAAA,4BAAAI,IAAAN,EAAAI,EAAAF,EAAA,gCAAAzc,IAAAuc,EAAAI,EAAAF,EAAA,gCAAAzN,IAAAuN,EAAAI,EAAAF,EAAA,gCAAArL,IAAA,IAAA0L,EAAAP,EAAA,IAAAQ,EAAAR,EAAAS,EAAAF,GAAAP,EAAAI,EAAAF,EAAA,4BAAAM,EAAArK,IAAA,IAAAuK,EAAAV,EAAA,IAAAW,EAAAX,EAAAS,EAAAC,GAAAV,EAAAI,EAAAF,EAAA,iCAAAS,EAAAxK,IAAA,IAAAyK,EAAAZ,EAAA,IAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAI,EAAAF,EAAA,iCAAAW,EAAA1K,IAAA,IAAA2K,EAAAd,EAAA,IAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAI,EAAAF,EAAA,8BAAAa,EAAA5K,IAAA,IAAA6K,EAAAhB,EAAA,KAQaK,EAAMY,mCACN7W,EAAQ,uGACR0T,EAAc,guBACdwC,EAXbN,EAAAS,EAAAO,GAWuB3B,EAAK6B,QAAQf,EAAU,eAGjC1c,EAAc,GACdgP,EAAc,GACdoC,EAAc,sCChB3BsM,EAAAC,QAAiBpB,EAAAqB,EAAuB,wDCAxCF,EAAAC,QAAiBpB,EAAAqB,EAAuB,qDCAxCF,EAAAC,QAAiBpB,EAAAqB,EAAuB,uDCAxCF,EAAAC,QAAiBpB,EAAAqB,EAAuB","file":"static/js/main.a1afb16c.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { Theme, createStyles, withStyles,  Paper } from '@material-ui/core';\r\nimport { ToggleButtonGroup } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { ZoomOutMap as MoveIcon, MyLocation as AddNodeIcon, Delete as DeleteIcon, Power as ConnectIcon } from '@material-ui/icons';\r\n\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { MyToggleButton } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        padding: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        left: \"50%\",\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: fade(theme.palette.primary.light, 0.4),\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        '&:hover':{\r\n            backgroundColor: theme.palette.primary.light,\r\n        }\r\n    },\r\n    modsBtnGroup: {\r\n        borderRadius: 0,\r\n        backgroundColor: 'transparent'\r\n    }\r\n})\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport interface IMode {\r\n    name: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolPanelProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIToolPanel: React.FC<UIToolPanelProps> = ({ onSelect, selected, classes }) => {\r\n    const mods: IMode[] = [\r\n        {\r\n            name: \"Перемещение\",\r\n            mod: UIModes.move,\r\n            icon: (<MoveIcon />)\r\n        },\r\n        {\r\n            name: \"Добавить узел\",\r\n            mod: UIModes.addNode,\r\n            icon: (<AddNodeIcon />)\r\n        },\r\n        {\r\n            name: \"Соединить узлы\",\r\n            mod: UIModes.addBeam,\r\n            icon: (<ConnectIcon />)\r\n        },\r\n        {\r\n            name: \"Удалить\",\r\n            mod: UIModes.delete,\r\n            icon: (<DeleteIcon />)\r\n        }\r\n    ]\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <ToggleButtonGroup\r\n                value={selected}\r\n                exclusive\r\n                onChange={(e, value) => onSelect(value)}\r\n                size=\"medium\"\r\n                className={classes.modsBtnGroup}\r\n            >\r\n                {mods.map(item => (\r\n                    <MyToggleButton\r\n                        key={item.mod}\r\n                        value={item.mod}\r\n                        selected={item.mod === selected}\r\n                        icon={item.icon}\r\n                        name={item.name}\r\n                        \r\n                    />\r\n                ))}\r\n            </ToggleButtonGroup>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolPanel)","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { consts } from \"src/static\";\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x:number):number{        \r\n        return  Math.round(x / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n    static cellY(y:number):number{        \r\n        return  Math.round(y / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","export interface IEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\nexport class Entity implements IEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    constructor(props: IEntity) {\r\n        this.id = Date.now()+Math.random()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id + \"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { IEntity, Entity } from \"./ModelEntity\";\r\n\r\nexport interface IForce extends IEntity {\r\n    value?: number,\r\n    angle?: 0 | 90,\r\n    nodeID?: number\r\n}\r\n\r\nexport class Force extends Entity {\r\n    value: number\r\n    angle: 0 | 90\r\n    nodeID: number\r\n    constructor(props: IForce) {\r\n        super(props)\r\n        const { value = 0 , angle = 0, nodeID = 0} = props\r\n        this.value = value\r\n        this.angle = angle\r\n        this.nodeID = nodeID\r\n    }\r\n}","import { IEntity, Entity } from './ModelEntity';\r\nimport { Force } from './ModelForce';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: number[]\r\n    forceX?:Force,\r\n    forceY?:Force,\r\n    isStatic?: boolean\r\n}\r\n\r\nexport class Node extends Entity {\r\n    beamsID: number[];\r\n    forceX:Force | undefined\r\n    forceY:Force | undefined\r\n    isStatic:boolean\r\n    \r\n    constructor(props:INode) {\r\n        super(props)\r\n        this.beamsID = props.beamsID || []\r\n        this.forceX = props.forceX\r\n        this.forceY = props.forceY\r\n        this.isStatic = props.isStatic || false\r\n    }\r\n    connectBeam(beamID: number):boolean {\r\n        if (!this.beamsID.find(id => id === beamID)){\r\n            this.beamsID.push(beamID)\r\n            return true            \r\n        }\r\n        return false\r\n    }\r\n    removeBeam(beamID: number) {\r\n        \r\n        this.beamsID  = this.beamsID.filter(id => id !== beamID)\r\n    }\r\n}","import { IEntity, Entity } from \"./ModelEntity\";\r\nimport { MyMath } from \"src/utils\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    endX?:number\r\n    endY?:number\r\n    length?: number\r\n    startConnectedNodeID?: number\r\n    endConnectedNodeID?: number\r\n    newAngle?:number\r\n}\r\n\r\nexport class Beam extends Entity {\r\n    endX:number\r\n    endY:number\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n    newAngle:number\r\n    constructor(props: IBeam) {\r\n        super(props)\r\n        this.length = props.length || 0\r\n        this.startConnectedNodeID = props.startConnectedNodeID || 0\r\n        this.endConnectedNodeID = props.endConnectedNodeID || 0\r\n        this.newAngle = this.angle\r\n        this.endX = props.endX || props.x || 0\r\n        this.endY = props.endY || props.y || 0\r\n    }\r\n\r\n    connectNode(nodeID: number, place: 'start' | 'end'): void {\r\n        switch (place) {\r\n            case 'start':{\r\n                this.startConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            case 'end':{\r\n                this.endConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    removeNode(place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n        this.startConnectedNodeID = 0 :\r\n        this.endConnectedNodeID = 0\r\n    }\r\n    getEndX():number{\r\n        return this.endX\r\n    }\r\n    getEndY():number{\r\n        return this.endY\r\n    }\r\n    moveStartPoint(x:number,y:number):void{\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n    \r\n    moveEndPoint(x:number,y:number):void{\r\n        this.endX = x\r\n        this.endY = y\r\n    }\r\n}","import { FixedNode } from \"./ModelFixedNode\";\r\nimport { Force } from \"./ModelForce\";\r\nimport { Node } from \"./ModelNode\";\r\nimport { Beam } from \"./ModelBeam\";\r\nimport { Entity } from \"./ModelEntity\";\r\n\r\n\r\n\r\n\r\nexport interface IFarm {\r\n    fixedNodes?: Map<number, FixedNode>\r\n    forces?: Map<number, Force>\r\n    nodes?: Map<number, Node>\r\n    beams?: Map<number, Beam>\r\n}\r\n\r\n\r\n\r\nexport class Farm implements IFarm {\r\n    fixedNodes: Map<number, FixedNode>\r\n    forces: Map<number, Force>\r\n    nodes: Map<number, Node>\r\n    beams: Map<number, Beam>\r\n    time: number\r\n    constructor(_farm?: Farm) {\r\n        this.nodes = _farm ? _farm.nodes : new Map()\r\n        this.fixedNodes = _farm ? _farm.fixedNodes : new Map()\r\n        this.forces = _farm ? _farm.forces : new Map()\r\n        this.beams = _farm ? _farm.beams : new Map()\r\n        this.time = Date.now()\r\n\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\", isStatic: boolean  = false): Node | false {\r\n        const oldNode = this.getNodes().find(item => item.x === x && item.y === y)\r\n        if(oldNode) return false\r\n        const node = new Node({\r\n            x,\r\n            y,\r\n            angle,\r\n            name,\r\n            isStatic\r\n        })\r\n        this.nodes.set(node.id, node)\r\n        \r\n        return node\r\n    }\r\n    addBeam(x: number, y: number): Beam {\r\n        const beam = new Beam({\r\n            x,\r\n            y\r\n        })\r\n        this.beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n    private deleteNode(nodeID: number): void {\r\n        this.nodes.delete(nodeID)\r\n    }\r\n    private deleteBeam(beamID: number): void {\r\n        this.beams.delete(beamID)\r\n    }\r\n    private deleteForce(forceID: number): void {\r\n        this.forces.delete(forceID)\r\n    }\r\n\r\n    getNode(nodeID: number): Node {\r\n        const node = this.nodes.get(nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number): Beam {\r\n        const beam = this.beams.get(beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number): Force {\r\n        const force = this.forces.get(forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n\r\n    getNodes(): Node[] {\r\n        const nodes: Node[] = [];\r\n        for (let node of this.nodes.values()) {\r\n            nodes.push(node)\r\n        }\r\n        \r\n        return nodes\r\n    }\r\n    getBeams(): Beam[] {\r\n        const beams: Beam[] = [];\r\n        for (let beam of this.beams.values()) {\r\n            beams.push(beam)\r\n        }\r\n        return beams\r\n    }\r\n\r\n    getForcesOnNode(nodeID: number): [ Force| undefined, Force| undefined] {\r\n        const node: Node = this.getNode(nodeID)\r\n        return [node.forceX, node.forceY]\r\n    }\r\n    getBeamsOnNode(nodeID: number): Beam[] {\r\n        const beams: Beam[] = this.getNode(nodeID).beamsID.map(beamID => this.getBeam(beamID))\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): Node[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n\r\n    connectBeamToNode(beam: Beam | number, node: Node | number, place: 'start' | 'end' = 'start'): boolean {\r\n        let _beam: Beam = beam instanceof Beam ? beam : this.getBeam(beam)\r\n        let _node: Node = node instanceof Node ? node : this.getNode(node)\r\n\r\n        switch (place) {\r\n            case 'start': {\r\n\r\n                _beam.connectNode(_node.id, 'start')\r\n                _node.connectBeam(_beam.id)\r\n                break;\r\n            }\r\n            case 'end': {\r\n                const beams = this.getBeamsOnNode(_beam.startConnectedNodeID)\r\n                const oldBeam = beams.find(item =>\r\n                    (item.startConnectedNodeID === _beam.startConnectedNodeID && item.endConnectedNodeID === _node.id) ||\r\n                    (item.startConnectedNodeID === _node.id && item.endConnectedNodeID === _beam.startConnectedNodeID) ||\r\n                    (item.id === _beam.id && item.endConnectedNodeID === _beam.id)\r\n                )\r\n\r\n\r\n\r\n                if (!oldBeam && _node.connectBeam(_beam.id)) {\r\n                    _beam.moveEndPoint(_node.x, _node.y)\r\n                    _beam.connectNode(_node.id, \"end\")\r\n                } else return false\r\n                break;\r\n            }\r\n            default: return false\r\n        }\r\n\r\n        return true\r\n    }\r\n    connectForceToNode(node:Node, angle: 0 | 90, value:number ){\r\n        const force = new Force({\r\n            angle, \r\n            value,\r\n            nodeID:node.id,\r\n        })\r\n        if(angle === 0) node.forceX = force\r\n        else node.forceY = force\r\n        this.forces.set(force.id, force)\r\n    }\r\n    deleteEntity(entity: Entity | number): void  {\r\n        if (entity instanceof Node) {           \r\n            if(entity.isStatic) return\r\n            const beams = entity.beamsID.map(beamID => this.getBeam(beamID))\r\n            beams.forEach(beam => {\r\n                if (beam.startConnectedNodeID === entity.id) this.getNode(beam.endConnectedNodeID).removeBeam(beam.id)\r\n                else this.getNode(beam.startConnectedNodeID).removeBeam(beam.id)\r\n                this.deleteBeam(beam.id)\r\n            })\r\n            if(entity.forceX) this.deleteForce(entity.forceX.id)\r\n            if(entity.forceY) this.deleteForce(entity.forceY.id)\r\n            this.deleteNode(entity.id)\r\n        } else if (entity instanceof Beam) {\r\n            [entity.startConnectedNodeID,entity.endConnectedNodeID].forEach(nodeID => {\r\n                if(nodeID > 0){\r\n                    this.getNode(nodeID).removeBeam(entity.id)\r\n                }\r\n            })\r\n            this.deleteBeam(entity.id)\r\n        } else if(entity instanceof Entity){\r\n            const _entity = this.nodes.get(entity.id) || this.beams.get(entity.id)\r\n            if(_entity) this.deleteEntity(_entity)\r\n        }else{            \r\n            const _entity = this.nodes.get(entity) || this.beams.get(entity)\r\n            if(_entity) this.deleteEntity(_entity)\r\n        }\r\n    }\r\n    moveNodeTo(nodeID: number, x: number, y: number): void {\r\n        const node = this.getNode(nodeID)\r\n        if(node.isStatic) return\r\n        const _node = this.getNodes().find(item => item.x === x && item.y === y)\r\n        if(!_node){\r\n\r\n            node.x = x\r\n            node.y = y\r\n            node.beamsID.forEach(beamID => {\r\n                const beam = this.getBeam(beamID)\r\n                if (beam.startConnectedNodeID === nodeID) {\r\n                    beam.moveStartPoint(x, y)\r\n                } else if (beam.endConnectedNodeID === nodeID) {\r\n                    beam.moveEndPoint(x, y)\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport interface IFarmStore {\r\n    workSpace: Farm\r\n\r\n}\r\n\r\nexport const defaultFarmState: IFarmStore = {\r\n    workSpace: new Farm(),\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case FARM_UPDATE:{\r\n            const newState : IFarmStore = {workSpace:new Farm(action.workSpace)}\r\n            \r\n            return newState\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeStore, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeStore\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import { Action } from \"redux\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const FARM_UPDATE = 'FARM_UPDATE'\r\n\r\nexport interface IActionFarmUpdate extends Action {\r\n    type: typeof FARM_UPDATE,\r\n    workSpace:Farm\r\n}\r\n\r\nexport type FarmActions = IActionFarmUpdate;","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip, Typography, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(10),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    title:{\r\n        padding:theme.spacing(1)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface SidebarProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    title? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface SidebarState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\n\r\nclass Sidebar extends React.PureComponent<SidebarProps, SidebarState>{\r\n    constructor(props: SidebarProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    switchDrawer() {\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, title, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <Typography \r\n                        variant='body2'\r\n                        align=\"center\"\r\n                        className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider/>\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={title}\r\n                    open={title !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 15 : drawerWidth + 15 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 15 : drawerWidth + 15 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import * as React from 'react'\r\nimport clsx from 'clsx'\r\nimport { Theme, createStyles, withStyles, AppBar, Toolbar } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { consts } from 'src/static';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBarProps } from '@material-ui/core/AppBar';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n        marginRight: theme.spacing(4),\r\n        marginLeft: theme.spacing(2),\r\n        '& img': {\r\n            width: 50,\r\n            height: 'auto'\r\n        }\r\n    }\r\n})\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles>, React.HTMLAttributes<HTMLDivElement> {\r\n    color?: AppBarProps['color'],\r\n    position?: AppBarProps['position'],\r\n    withLogo?: boolean\r\n}\r\n\r\nconst UIAppBar: React.FC<UIToolBarProps> = ({ classes, children, className, color, position, withLogo = true }) => {\r\n    const viewLogo = () => {\r\n        if (withLogo) return ((\r\n            <Link\r\n                to={'/'}\r\n                className={classes.logo}\r\n            >\r\n                <img\r\n                    alt=\"Logo Icon\"\r\n                    src={consts.bridgeIcon_2}\r\n                />\r\n            </Link>\r\n        ))\r\n    }\r\n    return (\r\n        <AppBar\r\n            position={position || 'fixed'}\r\n            className={clsx(classes.appBar, className)}\r\n            color={color || 'primary'}>\r\n            <Toolbar >\r\n                {viewLogo()}\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIAppBar)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Tooltip } from '@material-ui/core';\r\nimport {  ToggleButton } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButtonProps } from '@material-ui/lab/ToggleButton';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    btn: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        borderRadius: '50% !important',\r\n        border: `1px solid ${fade(theme.palette.action.active, 0.2)} !important`,\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.light,\r\n\r\n        '&$selected': {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            '@media (hover: none)': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            '&$disabled': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n        },\r\n    },\r\n    selected: {},\r\n})\r\n\r\n\r\n\r\nexport interface MyToggleButtonProps extends WithStyles<typeof styles> {\r\n    selected: boolean,\r\n    value?:any,\r\n    name?:string,\r\n    icon:JSX.Element\r\n}\r\n\r\nconst MyToggleButton: React.FC<MyToggleButtonProps & ToggleButtonProps> = ({  selected, classes , value, name, icon, ...other}) => {\r\n    return (\r\n        <ToggleButton\r\n            key={name}\r\n            value={value}\r\n            className={clsx(\r\n                classes.btn,\r\n                {\r\n                    [classes.selected]: selected,\r\n                }\r\n            )}\r\n            {...other}\r\n            \r\n        >\r\n            <Tooltip title={name}>\r\n                {icon}\r\n            </Tooltip>\r\n        </ToggleButton>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MyToggleButton)","\r\nimport {  createMuiTheme } from '@material-ui/core';\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark:\"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light:'#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\"\r\n        },\r\n        background:{\r\n            default:'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }  \r\n        \r\n    },\r\n});\r\n\r\nexport default theme","import * as React from 'react'\r\nimport { Circle, Stage, Text, Group, Arrow } from 'react-konva/lib/ReactKonvaCore'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from '../UIToolPanel';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\n\r\nexport interface UINodeProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, node: Node): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, node: Node): void\r\n    node: Node,\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\n\r\nconst UINode: React.FC<UINodeProps> = ({ node, drag, mode, onClick, selected }) => {\r\n    const size = consts.UI_nodeSize\r\n\r\n    const hundleMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n\r\n        switch (mode) {\r\n            case UIModes.delete:\r\n                if (node.isStatic) {\r\n                    stage.container().style.cursor = 'default'\r\n                    break\r\n                } \r\n            case UIModes.none: {\r\n                stage.container().style.cursor = 'pointer'\r\n                break;\r\n            }\r\n\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                stage.container().style.cursor = 'crosshair'\r\n                break\r\n            }\r\n            case UIModes.move: {\r\n                if (node.isStatic) {\r\n                    stage.container().style.cursor = 'default'\r\n                    break\r\n                }\r\n                stage.container().style.cursor = 'move'\r\n                break\r\n            }\r\n\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n    const hundleMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n        if(stage) stage.container().style.cursor = 'default'\r\n    }\r\n    const getStorkeColor = (): string => {\r\n        switch (mode) {\r\n            case UIModes.move:\r\n                if (node.isStatic) return theme.palette.secondary.dark\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                return theme.palette.primary.light\r\n            }\r\n            default:\r\n                return theme.palette.secondary.main\r\n        }\r\n    }\r\n    const getStorkeWidth = (): number => {\r\n        switch (mode) {\r\n            case UIModes.move:\r\n                if (node.isStatic) return 0\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                return 2\r\n            }\r\n            default:\r\n                return 0\r\n        }\r\n\r\n    }\r\n    const getFillColor = (): string => {\r\n        if (node.isStatic) return theme.palette.secondary.dark\r\n        return theme.palette.secondary.main\r\n\r\n    }\r\n    const viewForce = (force: Force) => {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Arrow\r\n                    points={[\r\n                        0,\r\n                        0,\r\n                        consts.UI_cellSize,\r\n                        0,\r\n                    ]}\r\n                    stroke={theme.palette.grey[300]}\r\n                    strokeWidth={size / 3}\r\n                    shadowBlur={2}\r\n                    pointerLength={consts.UI_cellSize / 10}\r\n                    pointerWidth={consts.UI_cellSize / 10}\r\n                    hitStrokeWidth={size * 2}\r\n\r\n                    // lineCap='round'\r\n                    // lineJoin='round'\r\n                    rotation={force.value > 0 ? force.angle : 180 + force.angle}\r\n                />\r\n                <Text\r\n                    x={force.angle === 0 ? (force.value > 0 ? consts.UI_cellSize / 3 : -consts.UI_cellSize) : consts.UI_cellSize / 3 }\r\n                    y={force.angle === 90 ? (force.value > 0 ? consts.UI_cellSize / 3 : -consts.UI_cellSize / 2) : -consts.UI_cellSize / 1.5 }\r\n                    text={force.value + \"H\"}\r\n                />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Group\r\n                x={node.x}\r\n                y={node.y}\r\n            >\r\n                {node.forceX && viewForce(node.forceX)}\r\n                {node.forceY && viewForce(node.forceY)}\r\n                <Circle\r\n                    className=\"MyCircle\"\r\n                    radius={size}\r\n                    x={0}\r\n                    y={0}\r\n                    fill={getFillColor()}\r\n                    shadowBlur={selected ? 8 : 2}\r\n                    stroke={getStorkeColor()}\r\n                    strokeWidth={getStorkeWidth()}\r\n\r\n                    hitStrokeWidth={size * 2}\r\n                    draggable={mode === UIModes.move && !node.isStatic}\r\n                    _useStrictMode\r\n                    onDragMove={(e:any) => drag(e, node)}\r\n                    onClick={(e:any) => onClick(e, node)}\r\n                    onMouseEnter={(e:any) => hundleMouseEnter(e, mode)}\r\n                    onMouseLeave={(e:any) => hundleMouseLeave(e)}\r\n                />\r\n\r\n                {/* <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            /> */}\r\n            </Group>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Line, Stage } from 'react-konva/lib/ReactKonvaCore'\r\nimport Konva from 'konva'\r\nimport { UIModes } from '../UIToolPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\n\r\nexport interface UIBeamProps {\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    beam: Beam,\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\n\r\nconst UIBeam: React.FC<UIBeamProps> = ({ beam,  mode, onClick, selected }) => {\r\n    const size = consts.UI_beamSize\r\n    const hundleMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    \r\n        switch (mode) {\r\n            case UIModes.delete:\r\n            case UIModes.none:{            \r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            }\r\n\r\n            default:{\r\n                break\r\n            }\r\n        }\r\n    \r\n    }\r\n    const hundleMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n        if(stage) stage.container().style.cursor = 'default'\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.endX,\r\n                    beam.endY\r\n                ]}\r\n                stroke={theme.palette.secondary.light}\r\n                strokeWidth={size}\r\n                shadowBlur={selected ? 8 : 2}\r\n\r\n                hitStrokeWidth={size*4} \r\n                onClick={(e:any) => onClick(e,beam)}\r\n                onMouseEnter={(e:any) => hundleMouseEnter(e, mode)}\r\n                onMouseLeave={(e:any) => hundleMouseLeave(e)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIBeam","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst UIGrid: React.FC<UIGridProps> = ({ widthCell, heightCell, heightBox, widthBox }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    const viewRows = () => {\r\n        const rows = []\r\n        for (let index = 0; index < countOfY; index++) {\r\n            rows.push(<Line\r\n                points={[\r\n                    0,\r\n                    index * heightCell,\r\n                    widthBox,\r\n                    index * heightCell,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const viewColumns = () => {\r\n        const columns = []\r\n        for (let index = 0; index < countOfX; index++) {\r\n\r\n            columns.push(<Line\r\n                points={[\r\n                    index*widthCell,\r\n                    0,\r\n                    index*widthCell,\r\n                    heightBox,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n\r\n        }\r\n        return columns\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns()}\r\n            {viewRows()}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIGrid","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer } from 'react-konva/lib/ReactKonvaCore';\r\nimport { UINode, UIBeam } from '..';\r\nimport { Farm, Entity } from 'src/models/Farm';\r\nimport { UIModes } from '../UIToolPanel';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\nimport ScrollBar from 'react-custom-scrollbars';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n        flexGrow: 1,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n        // width:\"100%\",\r\n    }\r\n})\r\n\r\n\r\nexport interface UIStageProps extends WithStyles<typeof styles> {\r\n    farm: Farm,\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    stageHeight: number,\r\n    stageWidth: number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity): void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent | TouchEvent>): void,\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity): void,\r\n    stage: React.RefObject<typeof Stage & Konva.Stage>\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = ({ classes, stage, stageHeight, stageWidth, onClick, onMouseMove, onDrag, farm, uiMode, selectedEntity }) => {\r\n    return (\r\n        <ScrollBar \r\n            className={classes.root}\r\n            autoHide>\r\n            <Stage\r\n                height={stageHeight}\r\n                width={stageWidth}\r\n                className={classes.stage}\r\n                onClick={onClick}\r\n                onMouseMove={onMouseMove}\r\n                ref={stage}\r\n            >\r\n\r\n                <Layer className=\"layer\" >\r\n                    <UIGrid\r\n                        heightCell={consts.UI_cellSize}\r\n                        widthCell={consts.UI_cellSize}\r\n                        heightBox={stageHeight}\r\n                        widthBox={stageWidth}\r\n                    />\r\n                    {farm.getBeams().map(beam => (\r\n                        <UIBeam\r\n                            key={beam.id}\r\n                            beam={beam}\r\n                            mode={uiMode}\r\n                            onClick={onClick}\r\n                            selected={selectedEntity === beam}\r\n                        />\r\n                    ))}\r\n\r\n                    {farm.getNodes().map(node => (\r\n                        <UINode\r\n                            key={node.id}\r\n                            node={node}\r\n                            mode={uiMode}\r\n                            drag={onDrag}\r\n                            onClick={onClick}\r\n                            selected={selectedEntity === node}\r\n                        />\r\n                    ))}\r\n                </Layer>\r\n            </Stage>\r\n        </ScrollBar>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIStage)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Button } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { AppBar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n\r\n    },\r\n    btn:{\r\n        marginLeft:theme.spacing(2),\r\n        marginRight:theme.spacing(2)\r\n    },\r\n    grow:{\r\n        flexGrow:1\r\n    }\r\n})\r\n\r\nexport interface UIHeaderProps extends WithStyles<typeof styles> {\r\n    hundleSave?:(e: React.FormEvent<HTMLButtonElement>) => void,\r\n    hundleClear?:(e: React.FormEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nconst UIHeader: React.FC<UIHeaderProps> = (\r\n    { \r\n        classes, \r\n        hundleSave = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n        hundleClear = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n    }) => {\r\n\r\n    return (\r\n        <AppBar \r\n            className={classes.root}\r\n        >\r\n            <div className={classes.grow}/>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleSave}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleClear}\r\n            >\r\n                Очистить\r\n            </Button>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIHeader)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, List, ListItem, ListItemText, Collapse, ListItemIcon, Divider, Badge } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Node, Beam, Entity } from 'src/models/Farm';\r\nimport { GpsNotFixed as NodeIcon, Timeline as BeamIcon, List as TreePanelIcon, ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n        paddingLeft: theme.spacing(6)\r\n    },\r\n})\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes: Node[],\r\n    beams: Beam[]\r\n    selectedEntity: Entity | undefined\r\n    onSelect(entity: Entity): void\r\n}\r\n\r\ninterface TreeState {\r\n    tabs: Map<string, boolean>,\r\n    open: boolean,\r\n\r\n}\r\n\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            tabs: new Map()\r\n        }\r\n        this.openTab = this.openTab.bind(this)\r\n        this.viewListItem = this.viewListItem.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        const { tabs } = this.state\r\n        tabs.set('Узлы', false)\r\n        tabs.set('Стержни', false)\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    openTab(tab: string): void {\r\n        const { tabs } = this.state\r\n        tabs.set(tab, !tabs.get(tab))\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    viewListItem(entityArray: Entity[], title: string, icon?: JSX.Element) {\r\n        const { selectedEntity, classes, onSelect } = this.props\r\n        const { tabs } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={() => this.openTab(title)}>\r\n                    {icon && (\r\n                        <ListItemIcon>\r\n                            <Badge badgeContent={entityArray.length} color=\"secondary\">\r\n                                {icon}\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                    )}\r\n                    <ListItemText primary={title} />\r\n                    {tabs.get(title) ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={tabs.get(title)} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {entityArray.map(item => (\r\n                            <ListItem\r\n                                button\r\n                                className={classes.nested}\r\n                                key={item.id}\r\n                                selected={selectedEntity === item}\r\n                                onClick={(e) => onSelect(item)}\r\n                            >\r\n                                <ListItemText primary={item.id} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render() {\r\n        const { nodes, beams } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"left\"\r\n                title=\"Структура проекта\"\r\n                btnIcon={(<TreePanelIcon />)}\r\n            >\r\n\r\n                {this.viewListItem(nodes, 'Узлы', (<NodeIcon />))}\r\n                {this.viewListItem(beams, 'Стержни', (<BeamIcon />))}\r\n\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Typography, IconButton, Box, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Node, Beam, Entity } from 'src/models/Farm';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    subTitle: {\r\n        fontSize: 14,\r\n    },\r\n    title: {\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: Entity | undefined,\r\n    onDelete(entity: Entity): void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\n\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    getTypeStr(entity: Entity): string {\r\n        if (entity instanceof Node) return \"Узел\"\r\n        else if (entity instanceof Beam) return \"Стержень\"\r\n        else return \"Элемент\"\r\n    }\r\n    viewInfo(entity: Entity | undefined) {\r\n        const { classes, onDelete } = this.props\r\n        if (entity) return (\r\n            <Box className={classes.root}>\r\n                <Typography className={classes.subTitle} color=\"textSecondary\" gutterBottom>\r\n                    {this.getTypeStr(entity)}\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    {entity.name}\r\n                </Typography>\r\n                <IconButton aria-label=\"Delete\" onClick={() => onDelete(entity)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Box>\r\n        )\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"right\"\r\n                title=\"Информация о выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon />)}\r\n            >\r\n                {this.viewInfo(entity)}\r\n                <Divider />\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","import { Farm } from \"src/models/Farm\";\r\n\r\nexport default ()  => {\r\n    const farm = new Farm()\r\n    let node = farm.addNode(1000,560 + 40,0,\"\",true)\r\n    if(node) {\r\n        farm.connectForceToNode(node, 0 , 100)\r\n        farm.connectForceToNode(node, 90 , 100)\r\n    }\r\n    node = farm.addNode(1200,760,0,\"\",true)\r\n    if(node) {\r\n        farm.connectForceToNode(node, 0 , -100)\r\n        farm.connectForceToNode(node, 90 , -100)\r\n    }\r\n    \r\n    return farm\r\n}","import * as React from 'react'\r\nimport KeyHandler from 'react-key-handler'\r\nimport Konva from \"konva\"\r\nimport { Stage } from \"react-konva\"\r\nimport { createStyles, Theme, WithStyles, withStyles, Box } from '@material-ui/core';\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Farm, Node, Beam, Entity } from 'src/models/Farm';\r\nimport { UITreePanel, UIEntityInfo, UIStage, UIHeader } from './components';\r\nimport UIToolPanel, { UIModes } from './components/UIToolPanel';\r\nimport { MyMath } from 'src/utils';\r\nimport CreateDefaultFarm from './_testFarm'\r\nimport Stats from 'react-stats'\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\nexport interface UIFarmProps extends IFarmStore, WithStyles<typeof styles> {\r\n\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm: Farm,\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\nclass UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UIFarmProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: 100,\r\n            stageWidth: 100,\r\n            farm: CreateDefaultFarm.call(this),\r\n            uiMode: UIModes.none,\r\n            selectedEntity: undefined,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n        \r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.updateFarm = this.updateFarm.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this._setStageSize = this._setStageSize.bind(this)\r\n        this.deleteEntity = this.deleteEntity.bind(this)\r\n        this.selectEntity = this.selectEntity.bind(this)\r\n        this.clearFarm = this.clearFarm.bind(this)\r\n\r\n        this.stage = React.createRef();\r\n    }\r\n    componentWillMount(){\r\n        this._setStageSize()\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this._setStageSize)\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container : HTMLDivElement = stage.attrs.container.parentElement            \r\n            if(container){             \r\n                container.scrollTop = (container.scrollHeight - container.offsetHeight) / 2\r\n                container.scrollLeft = (container.scrollWidth - container.offsetWidth) / 2\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this._setStageSize)\r\n    }\r\n    componentWillReceiveProps(nextProps: UIFarmProps) {\r\n        if (nextProps.workSpace !== this.state.farm)\r\n            this.setState({ farm: nextProps.workSpace })\r\n    }\r\n    updateFarm(farm: Farm): void {\r\n        this.setState({ farm })\r\n\r\n    }\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity) {\r\n        const { uiMode, farm } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n\r\n        if (e.evt.button === 0) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace) {\r\n                        this.selectEntity(entity);\r\n                    } else this.setState({ selectedEntity: undefined })\r\n\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        farm.addNode(MyMath.cellX(layerX), MyMath.cellX(layerY), 0)\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && entity instanceof Node) {\r\n\r\n                        const beam = farm.addBeam(entity.x, entity.y)\r\n                        farm.connectBeamToNode(beam, entity)\r\n                        this.setState({\r\n                            paintEntity: beam,\r\n                            uiMode: UIModes.addBeamStart\r\n                        })\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && entity instanceof Node && this.state.paintEntity instanceof Beam) {\r\n                        const beam = this.state.paintEntity\r\n                        if (farm.connectBeamToNode(beam, entity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: undefined\r\n                            })\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this.deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        // if (isEmptyPlace) this.setState({ selectedEntity: undefined })\r\n\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, farm, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if(e.target.getStage()){\r\n                    if (paintEntity && paintEntity instanceof Beam) {\r\n                        const beam = paintEntity\r\n                        beam.moveEndPoint(layerX, layerY)\r\n                    } else this.setState({ uiMode: UIModes.addBeam })\r\n                    this.updateFarm(farm)\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.delete:{                \r\n                const stage: Stage & Konva.Stage = e.target.getStage()\r\n                if(stage === e.target){                    \r\n                    stage.container().style.cursor = 'default'\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n        const { farm, uiMode } = this.state\r\n        switch (uiMode) {\r\n            case UIModes.move:{\r\n                if (entity instanceof Node) {\r\n                    if (e.evt.defaultPrevented) {                        \r\n                        const { layerX, layerY } = e.evt\r\n                        farm.moveNodeTo(entity.id, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                        this.updateFarm(farm)\r\n                    }\r\n                }\r\n                break\r\n            }        \r\n            default:\r\n                break;\r\n        }\r\n       \r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this.deletePaintEntity()\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        this.deletePaintEntity()\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n        })\r\n    }\r\n    deletePaintEntity() {\r\n\r\n        const { uiMode, paintEntity, farm } = this.state\r\n        if (uiMode === UIModes.addBeamStart && paintEntity) {\r\n            farm.deleteEntity(paintEntity)\r\n            this.setState({\r\n                paintEntity: undefined,\r\n            })\r\n            this.updateFarm(farm)\r\n        }\r\n    }\r\n    _setStageSize(e?: UIEvent) {\r\n        this.setState({\r\n            stageHeight: window.innerHeight * 1.5,\r\n            stageWidth: window.innerWidth * 1.5\r\n        })\r\n    }\r\n    selectEntity(entity:Entity | undefined){\r\n        if (entity) this.setState({ selectedEntity: entity })\r\n    }\r\n    deleteEntity(entity: Entity) {\r\n\r\n        this.setState({ selectedEntity: undefined })\r\n        this.state.farm.deleteEntity(entity)\r\n        this.updateFarm(this.state.farm)\r\n    }\r\n    clearFarm():void{\r\n        if (window.confirm('Выуверены, что хотите очистить холст?')) {\r\n            this.setState({farm: CreateDefaultFarm()})\r\n        }\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, farm, uiMode, selectedEntity } = this.state\r\n        const { classes } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Stats.FPSStats isActive={true}/>\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIHeader\r\n                    hundleClear={this.clearFarm}/>\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <UITreePanel\r\n                        nodes={farm.getNodes()}\r\n                        beams={farm.getBeams()}\r\n                        selectedEntity={selectedEntity}\r\n                        onSelect={this.selectEntity}\r\n                    />\r\n                    \r\n                    <UIStage\r\n                        onClick={this.onClick}\r\n                        onDrag={this.onDrag}\r\n                        onMouseMove={this.onMouseMove}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        farm={farm}\r\n                        stage={this.stage}\r\n                        selectedEntity={selectedEntity}\r\n                        uiMode={uiMode}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={selectedEntity}\r\n                        onDelete={this.deleteEntity} />\r\n                </Box>\r\n\r\n                <UIToolPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)} />\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UIFarm)","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const update = (workSpace : Farm) : FarmActions => ({\r\n    type:FARM_UPDATE,\r\n    workSpace\r\n})","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  (state: AppState) => ({\r\n    workSpace:state.farm.workSpace,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"20%\",\r\n\t\theight:'20%'\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({classes} : WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img \r\n\t\t\t\tsrc={consts.bridgeIcon_2} \r\n\t\t\t\talt=\"logo\" \r\n\t\t\t\tclassName={classes.logo} \r\n\t\t\t/>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.FARM_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { IHomeStore } from './homeReducer';\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\twidth:'100%',\r\n\t\tminHeight:'100%',\r\n\t\tdisplay:'block',\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends IHomeStore, WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport * as consts from './static/const';\nimport {CssBaseline} from '@material-ui/core';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/styles';\n\n\ninterface IAppProps {\n\n}\n\n\nclass App extends React.Component<IAppProps> {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={consts.title}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":consts.bridgeIcon_2},\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":consts.airBridge},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/css?family=Roboto:300,400,500'},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/icon?family=Material+Icons'}\n\t\t\t\t\t]}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": consts.description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": consts.title},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": consts.url},\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<CssBaseline/>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t</Switch>\n\n\t\t\t\t</ThemeProvider>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","// import favicon from './favicon.ico'\r\nimport ogImage from './ogImage.png'\r\nimport bridgeIcon_1 from './icon.png'\r\nimport bridgeIcon_2 from './bridge.png'\r\nimport airBridge from './airBridge.png'\r\nimport path from 'path'\r\n\r\n// Strings\r\nexport const url = process.env.PUBLIC_URL\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"\r\nexport const favicon = path.resolve(__dirname,\"favicon.ico\")\r\n\r\n// UI\r\nexport const UI_cellSize = 40\r\nexport const UI_nodeSize = 15\r\nexport const UI_beamSize = 6\r\n\r\n\r\n// Images\r\nexport {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";"],"sourceRoot":""}