{"version":3,"sources":["pages/Farm/components/UIPanel.tsx","utils/history.ts","utils/math.ts","models/Farm/ModelEntity.ts","models/Farm/ModelNode.ts","models/Farm/ModelBeam.ts","models/Farm/ModeslFarm.ts","pages/Farm/farmReducer.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Farm/farmTypes.ts","pages/Home/homeTypes.ts","pages/Farm/components/UINode.tsx","pages/Farm/components/UIBeam.tsx","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","navigation/index.ts","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","pages/Home/logo.svg"],"names":["UIModes","createBrowserHistory","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","Entity","props","Object","classCallCheck","this","id","x","y","angle","name","newX","newY","Date","now","Node","_Entity","_this","possibleConstructorReturn","getPrototypeOf","call","beamsID","forcesID","inherits","createClass","key","value","beamID","find","push","filter","forceID","Beam","length","startConnectedNodeID","endConnectedNodeID","newAngle","nodeID","place","Farm","_farm","fixedNodes","forces","nodes","beams","time","Map","arguments","undefined","node","set","beam","delete","get","Error","concat","force","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getNode","map","getForce","_this2","getBeam","defaultFarmState","workSpace","defaultHomeState","title","mainReducer","combineReducers","farm","state","action","type","home","objectSpread","createStore","mods","mod","none","drag","addNode","addBeam","UIPanel","_ref","onSelect","selected","react","style","position","item","i","checked","onChange","e","UINode","mode","onClick","ReactKonva","text","_useStrictMode","radius","fill","stroke","strokeWidth","draggable","dragNode","shadowBlur","onDragMove","_onClick","_x","apply","toString","UIBeam","points","cos","sin","UIFarm","stageHeight","window","innerHeight","stageWidth","innerWidth","uiMode","selectedID","paintEntity","bind","assertThisInitialized","onDrag","onMouseMove","setFarm","updateFarm","nextProps","setState","update","entity","_this$state","isEmptyPlace","target","getStage","_e$evt","evt","layerX","layerY","addBeamStart","angleBePoints","lengthBePoints","_this$state2","_e$evt2","setSelectMode","_this$state3","_this$state4","components_UIPanel","height","width","className","getNodes","components_UINode","getBeams","components_UIBeam","React","connect","dispatch","bindActionCreators","farmActions","navPath","Home","setTitle","src","logo","alt","react_router_dom","to","_setTitle","homeActions","App","document","react_router","path","component","exact","ReactDOM","render","react_default","a","createElement","es","store","src_App_0","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.793fab51.chunk.js","sourcesContent":["import * as React from 'react'\r\n\r\nexport enum UIModes {\r\n    none,\r\n    drag,\r\n    addNode,\r\n    dragNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    addBeamEnd,\r\n    dragBeam\r\n}\r\n\r\nconst mods = [\r\n    {\r\n        name: \"None\",\r\n        mod: UIModes.none\r\n    },\r\n    {\r\n        name: \"Drag\",\r\n        mod: UIModes.drag\r\n    },\r\n    {\r\n        name: \"Add Node\",\r\n        mod: UIModes.addNode\r\n    },\r\n    {\r\n        name: \"Add Beam\",\r\n        mod: UIModes.addBeam\r\n    },\r\n]\r\n\r\nexport interface UIPanelProps {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIPanel: React.FC<UIPanelProps> = ({ onSelect, selected }) => {\r\n    return (\r\n            <ul style={{\r\n                position:'absolute'\r\n            }}>\r\n                {mods.map((item, i) => (\r\n                    <li key={i}>\r\n                        <label>\r\n                            <span>{item.name}</span>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"UiMode\"\r\n                                value={item.mod}\r\n                                checked={selected === item.mod}\r\n                                onChange={(e) => onSelect(item.mod)} />\r\n                        </label>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default UIPanel","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","class MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","export interface IEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\nexport class Entity implements IEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    constructor(props: IEntity) {\r\n        this.id = Date.now()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id + \"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { IEntity, Entity } from './ModelEntity';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: number[]\r\n    forcesID?: number[],\r\n}\r\n\r\nexport class Node extends Entity {\r\n    beamsID: number[];\r\n    forcesID: number[];\r\n    constructor(props:INode) {\r\n        super(props)\r\n        this.beamsID = props.beamsID || []\r\n        this.forcesID = props.forcesID  || []\r\n    }\r\n\r\n    connectBeam(beamID: number) {\r\n        if (!this.beamsID.find(id => id === beamID))\r\n            this.beamsID.push(beamID)\r\n    }\r\n    removeBeam(beamID: number) {\r\n        this.beamsID.filter(id => id !== beamID)\r\n    }\r\n    connectForce(forceID: number) {\r\n        if (!this.forcesID.find(id => id === forceID))\r\n            this.forcesID.push(forceID)\r\n    }\r\n    removeForce(forceID: number) {\r\n        this.forcesID.filter(id => id !== forceID)\r\n    }\r\n}","import { IEntity, Entity } from \"./ModelEntity\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: number\r\n    endConnectedNodeID?: number\r\n    newAngle?:number\r\n}\r\n\r\nexport class Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n    newAngle:number\r\n    constructor(props: IBeam) {\r\n        super(props)\r\n        this.length = props.length || 0\r\n        this.startConnectedNodeID = props.startConnectedNodeID || 0\r\n        this.endConnectedNodeID = props.endConnectedNodeID || 0\r\n        this.newAngle = this.angle\r\n    }\r\n\r\n    connectNode(nodeID: number, place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n            this.startConnectedNodeID = nodeID :\r\n            this.endConnectedNodeID = nodeID\r\n    }\r\n    removeNode(place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n        this.startConnectedNodeID = 0 :\r\n        this.endConnectedNodeID = 0\r\n    }\r\n}","import { FixedNode } from \"./ModelFixedNode\";\r\nimport { Force } from \"./ModelForce\";\r\nimport { Node } from \"./ModelNode\";\r\nimport { Beam } from \"./ModelBeam\";\r\n\r\n\r\n\r\n\r\nexport interface IFarm {\r\n    fixedNodes?: Map<number, FixedNode>\r\n    forces?: Map<number, Force>\r\n    nodes?: Map<number, Node>\r\n    beams?: Map<number, Beam>\r\n}\r\n\r\n\r\n\r\nexport class Farm implements IFarm {\r\n    fixedNodes: Map<number, FixedNode>\r\n    forces: Map<number, Force>\r\n    nodes: Map<number, Node>\r\n    beams: Map<number, Beam>\r\n    time: number\r\n    constructor(_farm?: Farm) {\r\n        this.nodes = _farm ? _farm.nodes : new Map()\r\n        this.fixedNodes = _farm ? _farm.fixedNodes : new Map()\r\n        this.forces = _farm ? _farm.forces : new Map()\r\n        this.beams = _farm ? _farm.beams : new Map()\r\n        this.time = Date.now()\r\n\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\"): void {\r\n        const node = new Node({\r\n            x,\r\n            y,\r\n            angle,\r\n            name\r\n        })\r\n        // this.nodes.push(node)\r\n        this.nodes.set(node.id, node)\r\n    }\r\n    addBeam(x:number, y:number, angle:number, length:number ):Beam{\r\n        const beam = new Beam({\r\n            x,\r\n            y,\r\n            angle,\r\n            length\r\n        })\r\n        this.beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n    deleteNode(nodeID: number): void {\r\n        this.nodes.delete(nodeID)\r\n    }\r\n    deleteBeam(beamID: number): void {\r\n        this.beams.delete(beamID)\r\n    }\r\n\r\n    getNode(nodeID: number): Node {\r\n        const node = this.nodes.get(nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number): Beam {\r\n        const beam = this.beams.get(beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number): Force {\r\n        const force = this.forces.get(forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n    \r\n    getNodes():Node[]{\r\n        const nodes:Node[] = [];\r\n        for(let node of this.nodes.values()){\r\n            nodes.push(node)\r\n        }\r\n        return nodes\r\n    }\r\n    getBeams():Beam[]{\r\n        const beams :Beam[] = [];\r\n        for(let beam of this.beams.values()){\r\n            beams.push(beam)\r\n        }\r\n        return beams\r\n    }\r\n\r\n    getForcesOnNode(nodeID: number): Force[] {\r\n        const forces: Force[] = this.getNode(nodeID).forcesID.map(forceID => this.getForce(forceID))\r\n        return forces\r\n    }\r\n    getBeamsOnNode(nodeID: number): Beam[] {\r\n        const beams: Beam[] = this.getNode(nodeID).beamsID.map(beamID => this.getBeam(beamID))\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): Node[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport interface IFarmStore {\r\n    workSpace: Farm\r\n\r\n}\r\n\r\nexport const defaultFarmState: IFarmStore = {\r\n    workSpace: new Farm(),\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case FARM_UPDATE:{\r\n            const newState : IFarmStore = {workSpace:new Farm(action.workSpace)}\r\n            \r\n            return newState\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeStore, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeStore\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import { Action } from \"redux\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const FARM_UPDATE = 'FARM_UPDATE'\r\n\r\nexport interface IActionFarmUpdate extends Action {\r\n    type: typeof FARM_UPDATE,\r\n    workSpace:Farm\r\n}\r\n\r\nexport type FarmActions = IActionFarmUpdate;","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import * as React from 'react'\r\nimport { Circle, Text } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from './UIPanel';\r\n\r\nexport interface UINodeProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>,node: Node): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>,node:Node):void\r\n    node: Node,\r\n    mode:UIModes,\r\n    selected:boolean\r\n}\r\n\r\nconst UINode: React.FC<UINodeProps> = ({ node, drag, mode, onClick,selected }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            />\r\n               \r\n            <Circle\r\n\r\n                key={node.id}\r\n                radius={selected ? 8 : 6}\r\n                x={node.x}\r\n                y={node.y}\r\n                fill=\"#ddd\"\r\n                stroke=\"#888\"\r\n                strokeWidth={selected ? 2 : 0}\r\n                draggable={mode === UIModes.drag || mode === UIModes.dragNode}\r\n                _useStrictMode \r\n                shadowBlur={5}\r\n                onDragMove={(e) => drag(e,node)} \r\n                onClick={(e) => onClick(e,node)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Circle, Text, Line } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from './UIPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\n\r\nexport interface UIBeamProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, beam: Beam): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    beam: Beam,\r\n    mode: UIModes,\r\n    selected: boolean\r\n    withStartNode?: boolean\r\n    withEndNode?: boolean\r\n}\r\n\r\nconst UIBeam: React.FC<UIBeamProps> = ({ beam, drag, mode, onClick, selected }) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <Circle\r\n\r\n                radius={10}\r\n                x={beam.x}\r\n                y={beam.y}\r\n                fill=\"#ddd\"\r\n                stroke=\"#888\"\r\n                strokeWidth={selected ? 6 : 3}\r\n                draggable={mode === UIModes.drag || mode === UIModes.dragBeam}\r\n                _useStrictMode \r\n                onDragMove={(e) => drag(e,beam)} \r\n                onClick={(e) => onClick(e,beam)}\r\n            /> */}\r\n            {/* <Text\r\n                x={beam.x - beam.name.length * 4}\r\n                y={beam.y - 30}\r\n                text={beam.name}\r\n                _useStrictMode\r\n            /> */}\r\n            <Line\r\n                // x={beam.x}\r\n                // y={beam.y}\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.x + (beam.length * Math.cos(beam.angle * Math.PI)),\r\n                    beam.y + (beam.length * Math.sin(beam.angle * Math.PI ))\r\n                ]}\r\n                stroke='#bbb'\r\n                strokeWidth={4}\r\n                onClick={(e) => onClick(e,beam)}\r\n\r\n            />\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIBeam","import * as React from 'react'\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Stage, Layer } from \"react-konva\"\r\nimport Konva from \"konva\"\r\nimport './style.css'\r\nimport { Farm, Node } from 'src/models/Farm';\r\nimport UINode from './components/UINode';\r\nimport UIBeam from './components/UIBeam';\r\nimport UIPanel, { UIModes } from './components/UIPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { MyMath } from 'src/utils';\r\n\r\n\r\nexport interface UIFarmProps extends IFarmStore {\r\n    update: (workSpace: Farm) => void\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm: Farm,\r\n    uiMode: UIModes,\r\n    selectedID: number,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\n\r\nexport default class UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: window.innerHeight * 0.75,\r\n            stageWidth: window.innerWidth * 0.75,\r\n            farm: props.workSpace,\r\n            uiMode: UIModes.none,\r\n            selectedID: -1,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.setFarm = this.setFarm.bind(this)\r\n        this.updateFarm = this.updateFarm.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: UIFarmProps) {\r\n        if (nextProps.workSpace !== this.state.farm)\r\n            this.setState({ farm: nextProps.workSpace })\r\n    }\r\n    setFarm(farm: Farm): void {\r\n        this.props.update(farm)\r\n    }\r\n    updateFarm(farm: Farm): void {\r\n        this.setState({ farm })\r\n    }\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Node | Beam) {\r\n        const { uiMode, farm } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n\r\n        switch (uiMode) {\r\n            case UIModes.addNode: {\r\n                if (isEmptyPlace) {\r\n\r\n                    const { layerX, layerY } = e.evt\r\n                    farm.addNode(layerX, layerY, 0)\r\n                }\r\n                break;\r\n\r\n            }\r\n            case UIModes.addBeam: {\r\n                if(!isEmptyPlace && entity instanceof Node){\r\n                    \r\n                    const beam = farm.addBeam(entity.x, entity.y, 0, 0)\r\n                    this.setState({\r\n                        paintEntity:beam,\r\n                        uiMode:UIModes.addBeamStart\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.addBeamStart: {\r\n                if(!isEmptyPlace && entity instanceof Node && this.state.paintEntity instanceof Beam){\r\n                    const beam = this.state.paintEntity\r\n\r\n                    beam.angle = MyMath.angleBePoints(beam.x, beam.y, entity.x, entity.y)\r\n                    beam.length = MyMath.lengthBePoints(beam.x, beam.y, entity.x, entity.y)\r\n\r\n                    this.setState({\r\n                        uiMode: UIModes.addBeam,\r\n                        paintEntity: undefined\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        if(isEmptyPlace) this.setState({ selectedID: -1 })\r\n\r\n        this.updateFarm(farm)\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, farm, paintEntity: paintEntity } = this.state\r\n\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n\r\n                if (paintEntity && paintEntity instanceof Beam) {\r\n\r\n                    const beam = paintEntity\r\n                    const { layerX, layerY } = e.evt\r\n                    // beam.angle = Math.atan2(-beam.y + layerY, -beam.x + layerX) / (Math.PI)\r\n                    beam.angle = MyMath.angleBePoints(beam.x, beam.y, layerX, layerY)\r\n                    beam.length = MyMath.lengthBePoints(beam.x, beam.y, layerX, layerY)\r\n\r\n                } else this.setSelectMode(UIModes.addBeam)\r\n\r\n                this.updateFarm(farm)\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Node | Beam) {\r\n\r\n        const { farm, uiMode } = this.state\r\n        if (entity instanceof Node) {\r\n            if (uiMode === UIModes.dragNode || uiMode === UIModes.drag) {\r\n                // const farmNode = farm.getNode(entity.id)\r\n                const node = entity\r\n                node.x = e.evt.layerX\r\n                node.y = e.evt.layerY\r\n            }\r\n        }\r\n\r\n        this.updateFarm(farm)\r\n\r\n\r\n    }\r\n    setSelectMode(mode: UIModes) {\r\n        this.setState({ uiMode: mode })\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, farm, uiMode, selectedID } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <UIPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectMode.bind(this)} />\r\n                <Stage\r\n                    height={stageHeight}\r\n                    width={stageWidth}\r\n                    className=\"stage\"\r\n                    style={{\r\n                        height: stageHeight + 'px',\r\n                        width: stageWidth + 'px',\r\n                    }}\r\n                    onClick={this.onClick}\r\n                    // onMouseDown={this.onMouseDown}\r\n                    // onMouseUp={this.onMouseUp}\r\n                    onMouseMove={this.onMouseMove}\r\n                >\r\n                    <Layer className=\"layer\">\r\n                        {farm.getNodes().map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={this.onDrag}\r\n                                onClick={this.onClick}\r\n                                selected={selectedID === node.id}\r\n                            />\r\n                        ))}\r\n                        {farm.getBeams().map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                drag={this.onDrag}\r\n                                onClick={this.onClick}\r\n                                selected={selectedID === beam.id}\r\n                            />\r\n                        ))}\r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        )\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const update = (workSpace : Farm) : FarmActions => ({\r\n    type:FARM_UPDATE,\r\n    workSpace\r\n})","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  (state: AppState) => ({\r\n    workSpace:state.farm.workSpace,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport logo from './logo.svg'\r\nimport { IHomeStore, defaultHomeState } from './homeReducer';\r\nimport { navPath } from '../../navigation';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface IHomeProps extends IHomeStore {\r\n    setTitle: (title: string) => void,\r\n}\r\n\r\nexport default class Home extends React.Component<IHomeProps> {\r\n    _setTitle() {\r\n        const title = this.props.title === defaultHomeState.title ? \"To Farm\" : defaultHomeState.title\r\n        this.props.setTitle(title + '')\r\n    }\r\n    render() {\r\n        return <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>TypeScript - pain first, then nice</p>\r\n                <Link\r\n                    to={navPath.FARM_PAGE}\r\n                    className=\"App-link\">\r\n                    {this.props.title || \"To Farm )\"}\r\n                </Link>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={this._setTitle.bind(this)}\r\n                >Change title</button>\r\n            </header>\r\n        </div>\r\n    }\r\n}","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n\ninterface IAppProps {\n\n}\n\nclass App extends React.Component<IAppProps> {\n\tconstructor(props : IAppProps){\n\t\tsuper(props)\n\t\tdocument.title = \"Truss - ферма для каждого\"\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}