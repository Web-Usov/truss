{"version":3,"sources":["pages/Farm/farmReducer.ts","store/index.ts","index.tsx","utils/history.ts","utils/math.ts","utils/index.ts","models/Farm/ModelNode.ts","models/Farm/ModeslFarm.ts","models/Farm/index.ts","models/Farm/ModelBeam.ts","pages/Home/homeReducer.ts","navigation/index.ts","pages/Farm/farmTypes.ts","models/Farm/ModelEntity.ts","pages/Home/homeTypes.ts","App.tsx","const.ts","pages/Farm/components/UIPanel.tsx","pages/Farm/components/UINode.tsx","pages/Farm/components/UIBeam.tsx","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","pages/index.ts","pages/Home/logo.svg"],"names":["defaultFarmState","workSpace","Farm","mainReducer","combineReducers","farm","state","arguments","length","undefined","action","type","FARM_UPDATE","home","homeReducer","createStore","ReactDOM","render","react_default","a","createElement","es","store","react_router_dom","App","document","getElementById","createBrowserHistory","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","__webpack_require__","d","__webpack_exports__","utils_history","math","Node","_Entity","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","beamsID","forcesID","inherits","createClass","key","value","beamID","find","id","push","filter","forceID","Entity","_farm","fixedNodes","forces","nodes","beams","time","Map","Date","now","x","y","angle","name","node","set","beam","Beam","nodeID","delete","get","Error","concat","force","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getNode","map","getForce","_this2","getBeam","startConnectedNodeID","endConnectedNodeID","_this3","forEach","moveStartPoint","moveEndPoint","ModeslFarm_Farm","ModelNode_Node","C_Users_User_Documents_DEVELOP_farm_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_User_Documents_DEVELOP_farm_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_User_Documents_DEVELOP_farm_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","newAngle","C_Users_User_Documents_DEVELOP_farm_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_User_Documents_DEVELOP_farm_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","place","cos","sin","endX","getEndX","endY","getEndY","angleBePoints","lengthBePoints","defaultHomeState","title","SET_TITLE","C_Users_User_Documents_DEVELOP_farm_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","navPath","HOME_PAGE","FARM_PAGE","newX","newY","react__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_9___default","htmlAttributes","leng","titleTemplate","defaultTitle","meta","charSet","content","description","property","path","resolve","__dirname","link","rel","href","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","component","Home","exact","UIFarm","React","UIModes","mods","mod","none","drag","addNode","addBeam","UIPanel","_ref","onSelect","selected","react","style","position","item","i","checked","onChange","e","UINode","mode","onClick","ReactKonva","text","_useStrictMode","radius","fill","stroke","strokeWidth","draggable","dragNode","shadowBlur","onDragMove","_onClick","_x","apply","toString","UIBeam","points","stageHeight","window","innerHeight","stageWidth","innerWidth","uiMode","selectedID","paintEntity","bind","assertThisInitialized","onDrag","onMouseMove","setFarm","updateFarm","nextProps","setState","update","entity","_this$state","isEmptyPlace","target","getStage","_e$evt","evt","layerX","layerY","connectNode","connectBeam","addBeamStart","_this$state2","_e$evt2","setSelectMode","_this$state3","moveNodeTo","_this$state4","components_UIPanel","height","width","className","getBeams","components_UIBeam","getNodes","components_UINode","connect","dispatch","bindActionCreators","objectSpread","farmActions","setTitle","src","logo","alt","to","_setTitle","homeActions","pages_Farm","pages_Home","module","exports","p"],"mappings":"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","file":"static/js/main.78c53de5.chunk.js","sourcesContent":["import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport interface IFarmStore {\r\n    workSpace: Farm\r\n\r\n}\r\n\r\nexport const defaultFarmState: IFarmStore = {\r\n    workSpace: new Farm(),\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case FARM_UPDATE:{\r\n            const newState : IFarmStore = {workSpace:new Farm(action.workSpace)}\r\n            \r\n            return newState\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeStore, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeStore\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","class MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","import history from './history'\r\nimport MyMath from './math'\r\n\r\nexport {\r\n    history,\r\n    MyMath\r\n}","import { IEntity, Entity } from './ModelEntity';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: number[]\r\n    forcesID?: number[],\r\n}\r\n\r\nexport class Node extends Entity {\r\n    beamsID: number[];\r\n    forcesID: number[];\r\n    constructor(props:INode) {\r\n        super(props)\r\n        this.beamsID = props.beamsID || []\r\n        this.forcesID = props.forcesID  || []\r\n    }\r\n    connectBeam(beamID: number) {\r\n        if (!this.beamsID.find(id => id === beamID))\r\n            this.beamsID.push(beamID)\r\n    }\r\n    removeBeam(beamID: number) {\r\n        this.beamsID.filter(id => id !== beamID)\r\n    }\r\n    connectForce(forceID: number) {\r\n        if (!this.forcesID.find(id => id === forceID))\r\n            this.forcesID.push(forceID)\r\n    }\r\n    removeForce(forceID: number) {\r\n        this.forcesID.filter(id => id !== forceID)\r\n    }\r\n}","import { FixedNode } from \"./ModelFixedNode\";\r\nimport { Force } from \"./ModelForce\";\r\nimport { Node } from \"./ModelNode\";\r\nimport { Beam } from \"./ModelBeam\";\r\nimport { MyMath } from \"src/utils\";\r\n\r\n\r\n\r\n\r\nexport interface IFarm {\r\n    fixedNodes?: Map<number, FixedNode>\r\n    forces?: Map<number, Force>\r\n    nodes?: Map<number, Node>\r\n    beams?: Map<number, Beam>\r\n}\r\n\r\n\r\n\r\nexport class Farm implements IFarm {\r\n    fixedNodes: Map<number, FixedNode>\r\n    forces: Map<number, Force>\r\n    nodes: Map<number, Node>\r\n    beams: Map<number, Beam>\r\n    time: number\r\n    constructor(_farm?: Farm) {\r\n        this.nodes = _farm ? _farm.nodes : new Map()\r\n        this.fixedNodes = _farm ? _farm.fixedNodes : new Map()\r\n        this.forces = _farm ? _farm.forces : new Map()\r\n        this.beams = _farm ? _farm.beams : new Map()\r\n        this.time = Date.now()\r\n\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\"): void {\r\n        const node = new Node({\r\n            x,\r\n            y,\r\n            angle,\r\n            name\r\n        })\r\n        this.nodes.set(node.id, node)\r\n    }\r\n    addBeam(x:number, y:number):Beam{\r\n        const beam = new Beam({\r\n            x,\r\n            y\r\n        })\r\n        this.beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n    deleteNode(nodeID: number): void {\r\n        this.nodes.delete(nodeID)\r\n    }\r\n    deleteBeam(beamID: number): void {\r\n        this.beams.delete(beamID)\r\n    }\r\n\r\n    getNode(nodeID: number): Node {\r\n        const node = this.nodes.get(nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number): Beam {\r\n        const beam = this.beams.get(beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number): Force {\r\n        const force = this.forces.get(forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n    \r\n    getNodes():Node[]{\r\n        const nodes:Node[] = [];\r\n        for(let node of this.nodes.values()){\r\n            nodes.push(node)\r\n        }\r\n        return nodes\r\n    }\r\n    getBeams():Beam[]{\r\n        const beams :Beam[] = [];\r\n        for(let beam of this.beams.values()){\r\n            beams.push(beam)\r\n        }\r\n        return beams\r\n    }\r\n\r\n    getForcesOnNode(nodeID: number): Force[] {\r\n        const forces: Force[] = this.getNode(nodeID).forcesID.map(forceID => this.getForce(forceID))\r\n        return forces\r\n    }\r\n    getBeamsOnNode(nodeID: number): Beam[] {\r\n        const beams: Beam[] = this.getNode(nodeID).beamsID.map(beamID => this.getBeam(beamID))\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): Node[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n\r\n    moveNodeTo(nodeID:number, x:number, y:number):void{\r\n        const node = this.getNode(nodeID)\r\n        node.x = x\r\n        node.y = y\r\n        node.beamsID.forEach(beamID => {\r\n            const beam = this.getBeam(beamID)\r\n            if(beam.startConnectedNodeID === nodeID){\r\n                beam.moveStartPoint(x,y)\r\n            }else if(beam.endConnectedNodeID === nodeID){\r\n                beam.moveEndPoint(x,y)\r\n            }\r\n        })\r\n    }\r\n}","import { Farm } from \"./ModeslFarm\";\r\nimport { Node } from './ModelNode'\r\n\r\n\r\nexport {\r\n    Farm,\r\n    Node\r\n}","import { IEntity, Entity } from \"./ModelEntity\";\r\nimport { MyMath } from \"src/utils\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: number\r\n    endConnectedNodeID?: number\r\n    newAngle?:number\r\n}\r\n\r\nexport class Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n    newAngle:number\r\n    constructor(props: IBeam) {\r\n        super(props)\r\n        this.length = props.length || 0\r\n        this.startConnectedNodeID = props.startConnectedNodeID || 0\r\n        this.endConnectedNodeID = props.endConnectedNodeID || 0\r\n        this.newAngle = this.angle\r\n    }\r\n\r\n    connectNode(nodeID: number, place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n            this.startConnectedNodeID = nodeID :\r\n            this.endConnectedNodeID = nodeID\r\n    }\r\n    removeNode(place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n        this.startConnectedNodeID = 0 :\r\n        this.endConnectedNodeID = 0\r\n    }\r\n    getEndX():number{\r\n        return this.x + (this.length * Math.cos(this.angle * Math.PI))\r\n    }\r\n    getEndY():number{\r\n        return this.y + (this.length * Math.sin(this.angle * Math.PI))\r\n    }\r\n    moveStartPoint(x:number,y:number):void{\r\n        const endX = this.getEndX()\r\n        const endY = this.getEndY()\r\n        this.x = x\r\n        this.y = y\r\n        this.angle = MyMath.angleBePoints(x,y, endX,endY)\r\n        this.length = MyMath.lengthBePoints(x,y, endX,endY)\r\n    }\r\n    \r\n    moveEndPoint(x:number,y:number):void{\r\n        this.angle = MyMath.angleBePoints(this.x,this.y,x,y)\r\n        this.length = MyMath.lengthBePoints(this.x,this.y,x,y)\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import { Action } from \"redux\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const FARM_UPDATE = 'FARM_UPDATE'\r\n\r\nexport interface IActionFarmUpdate extends Action {\r\n    type: typeof FARM_UPDATE,\r\n    workSpace:Farm\r\n}\r\n\r\nexport type FarmActions = IActionFarmUpdate;","export interface IEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\nexport class Entity implements IEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    constructor(props: IEntity) {\r\n        this.id = Date.now()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id + \"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport './App.css';\nimport { title,description } from './const';\nimport path from 'path'\ninterface IAppProps {\n\n}\n\nclass App extends React.Component<IAppProps> {\n\tconstructor(props : IAppProps){\n\t\tsuper(props)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={title}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"width=device-width, initial-scale=1\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": path.resolve(__dirname,\"ogImage.png\")}\n\t\t\t\t\t]}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":path.resolve(__dirname,\"favicon.ico\")}\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<main>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</main>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","// Strings\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"","import * as React from 'react'\r\n\r\nexport enum UIModes {\r\n    none,\r\n    drag,\r\n    addNode,\r\n    dragNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    addBeamEnd,\r\n    dragBeam\r\n}\r\n\r\nconst mods = [\r\n    {\r\n        name: \"None\",\r\n        mod: UIModes.none\r\n    },\r\n    {\r\n        name: \"Drag\",\r\n        mod: UIModes.drag\r\n    },\r\n    {\r\n        name: \"Add Node\",\r\n        mod: UIModes.addNode\r\n    },\r\n    {\r\n        name: \"Add Beam\",\r\n        mod: UIModes.addBeam\r\n    },\r\n]\r\n\r\nexport interface UIPanelProps {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIPanel: React.FC<UIPanelProps> = ({ onSelect, selected }) => {\r\n    return (\r\n            <ul style={{\r\n                position:'absolute'\r\n            }}>\r\n                {mods.map((item, i) => (\r\n                    <li key={i}>\r\n                        <label>\r\n                            <span>{item.name}</span>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"UiMode\"\r\n                                value={item.mod}\r\n                                checked={selected === item.mod}\r\n                                onChange={(e) => onSelect(item.mod)} />\r\n                        </label>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default UIPanel","import * as React from 'react'\r\nimport { Circle, Text } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from './UIPanel';\r\n\r\nexport interface UINodeProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>,node: Node): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>,node:Node):void\r\n    node: Node,\r\n    mode:UIModes,\r\n    selected:boolean\r\n}\r\n\r\nconst UINode: React.FC<UINodeProps> = ({ node, drag, mode, onClick,selected }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            />\r\n               \r\n            <Circle\r\n\r\n                key={node.id}\r\n                radius={selected ? 8 : 6}\r\n                x={node.x}\r\n                y={node.y}\r\n                fill=\"#ddd\"\r\n                stroke=\"#888\"\r\n                strokeWidth={selected ? 2 : 0}\r\n                draggable={mode === UIModes.drag || mode === UIModes.dragNode}\r\n                _useStrictMode \r\n                shadowBlur={5}\r\n                onDragMove={(e) => drag(e,node)} \r\n                onClick={(e) => onClick(e,node)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Circle, Text, Line } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from './UIPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\n\r\nexport interface UIBeamProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, beam: Beam): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    beam: Beam,\r\n    mode: UIModes,\r\n    selected: boolean\r\n    withStartNode?: boolean\r\n    withEndNode?: boolean\r\n}\r\n\r\nconst UIBeam: React.FC<UIBeamProps> = ({ beam, drag, mode, onClick, selected }) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <Circle\r\n\r\n                radius={10}\r\n                x={beam.x}\r\n                y={beam.y}\r\n                fill=\"#ddd\"\r\n                stroke=\"#888\"\r\n                strokeWidth={selected ? 6 : 3}\r\n                draggable={mode === UIModes.drag || mode === UIModes.dragBeam}\r\n                _useStrictMode \r\n                onDragMove={(e) => drag(e,beam)} \r\n                onClick={(e) => onClick(e,beam)}\r\n            /> */}\r\n            {/* <Text\r\n                x={beam.x - beam.name.length * 4}\r\n                y={beam.y - 30}\r\n                text={beam.name}\r\n                _useStrictMode\r\n            /> */}\r\n            <Line\r\n                // x={beam.x}\r\n                // y={beam.y}\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.getEndX(),\r\n                    beam.getEndY()\r\n                ]}\r\n                stroke='#bbb'\r\n                strokeWidth={4}\r\n                onClick={(e) => onClick(e,beam)}\r\n\r\n            />\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIBeam","import * as React from 'react'\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Stage, Layer } from \"react-konva\"\r\nimport Konva from \"konva\"\r\nimport './style.css'\r\nimport { Farm, Node } from 'src/models/Farm';\r\nimport UINode from './components/UINode';\r\nimport UIBeam from './components/UIBeam';\r\nimport UIPanel, { UIModes } from './components/UIPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { MyMath } from 'src/utils';\r\n\r\n\r\nexport interface UIFarmProps extends IFarmStore {\r\n    update: (workSpace: Farm) => void\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm: Farm,\r\n    uiMode: UIModes,\r\n    selectedID: number,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\n\r\nexport default class UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: window.innerHeight * 0.75,\r\n            stageWidth: window.innerWidth * 0.75,\r\n            farm: props.workSpace,\r\n            uiMode: UIModes.none,\r\n            selectedID: -1,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.setFarm = this.setFarm.bind(this)\r\n        this.updateFarm = this.updateFarm.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: UIFarmProps) {\r\n        if (nextProps.workSpace !== this.state.farm)\r\n            this.setState({ farm: nextProps.workSpace })\r\n    }\r\n    setFarm(farm: Farm): void {\r\n        this.props.update(farm)\r\n    }\r\n    updateFarm(farm: Farm): void {\r\n        this.setState({ farm })\r\n    }\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Node | Beam) {\r\n        const { uiMode, farm } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n\r\n        switch (uiMode) {\r\n            case UIModes.addNode: {\r\n                if (isEmptyPlace) {\r\n\r\n                    const { layerX, layerY } = e.evt\r\n                    farm.addNode(layerX, layerY, 0)\r\n                }\r\n                break;\r\n\r\n            }\r\n            case UIModes.addBeam: {\r\n                if(!isEmptyPlace && entity instanceof Node){\r\n                    \r\n                    const beam = farm.addBeam(entity.x, entity.y)\r\n                    beam.connectNode(entity.id,'start')\r\n                    entity.connectBeam(beam.id)\r\n\r\n                    this.setState({\r\n                        paintEntity:beam,\r\n                        uiMode:UIModes.addBeamStart\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.addBeamStart: {\r\n                if(!isEmptyPlace && entity instanceof Node && this.state.paintEntity instanceof Beam){\r\n                    const beam = this.state.paintEntity\r\n\r\n                    // beam.angle = MyMath.angleBePoints(beam.x, beam.y, entity.x, entity.y)\r\n                    // beam.length = MyMath.lengthBePoints(beam.x, beam.y, entity.x, entity.y)\r\n                    beam.moveEndPoint(entity.x,entity.y)\r\n                    beam.connectNode(entity.id,\"end\")\r\n                    entity.connectBeam(beam.id)\r\n                    this.setState({\r\n                        uiMode: UIModes.addBeam,\r\n                        paintEntity: undefined\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        if(isEmptyPlace) this.setState({ selectedID: -1 })\r\n\r\n        this.updateFarm(farm)\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, farm, paintEntity: paintEntity } = this.state\r\n\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n\r\n                if (paintEntity && paintEntity instanceof Beam) {\r\n\r\n                    const beam = paintEntity\r\n                    const { layerX, layerY } = e.evt\r\n                    // beam.angle = MyMath.angleBePoints(beam.x, beam.y, layerX, layerY)\r\n                    // beam.length = MyMath.lengthBePoints(beam.x, beam.y, layerX, layerY)\r\n                    beam.moveEndPoint(layerX,layerY)\r\n\r\n                } else this.setSelectMode(UIModes.addBeam)\r\n\r\n                this.updateFarm(farm)\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n\r\n        const { farm, uiMode } = this.state\r\n        if (entity instanceof Node) {\r\n            if (uiMode === UIModes.dragNode || uiMode === UIModes.drag) {\r\n                // const farmNode = farm.getNode(entity.id)\r\n                farm.moveNodeTo(entity.id,e.evt.layerX,e.evt.layerY)\r\n            }\r\n        }\r\n\r\n        this.updateFarm(farm)\r\n\r\n\r\n    }\r\n    setSelectMode(mode: UIModes) {\r\n        this.setState({ uiMode: mode })\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, farm, uiMode, selectedID } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <UIPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectMode.bind(this)} />\r\n                <Stage\r\n                    height={stageHeight}\r\n                    width={stageWidth}\r\n                    className=\"stage\"\r\n                    style={{\r\n                        height: stageHeight + 'px',\r\n                        width: stageWidth + 'px',\r\n                    }}\r\n                    onClick={this.onClick}\r\n                    // onMouseDown={this.onMouseDown}\r\n                    // onMouseUp={this.onMouseUp}\r\n                    onMouseMove={this.onMouseMove}\r\n                >\r\n                    <Layer className=\"layer\">\r\n                        {farm.getBeams().map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                drag={this.onDrag}\r\n                                onClick={this.onClick}\r\n                                selected={selectedID === beam.id}\r\n                            />\r\n                        ))}\r\n                        \r\n                        {farm.getNodes().map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={this.onDrag}\r\n                                onClick={this.onClick}\r\n                                selected={selectedID === node.id}\r\n                            />\r\n                        ))}\r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        )\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const update = (workSpace : Farm) : FarmActions => ({\r\n    type:FARM_UPDATE,\r\n    workSpace\r\n})","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  (state: AppState) => ({\r\n    workSpace:state.farm.workSpace,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","import * as React from 'react'\r\nimport logo from './logo.svg'\r\nimport { IHomeStore, defaultHomeState } from './homeReducer';\r\nimport { navPath } from '../../navigation';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface IHomeProps extends IHomeStore {\r\n    setTitle: (title: string) => void,\r\n}\r\n\r\nexport default class Home extends React.Component<IHomeProps> {\r\n    _setTitle() {\r\n        const title = this.props.title === defaultHomeState.title ? \"To Farm\" : defaultHomeState.title\r\n        this.props.setTitle(title + '')\r\n    }\r\n    render() {\r\n        return <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>TypeScript - pain first, then nice</p>\r\n                <Link\r\n                    to={navPath.FARM_PAGE}\r\n                    className=\"App-link\">\r\n                    {this.props.title || \"To Farm )\"}\r\n                </Link>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={this._setTitle.bind(this)}\r\n                >Change title</button>\r\n            </header>\r\n        </div>\r\n    }\r\n}","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import UIFarm from './Farm'\r\nimport Home from './Home'\r\n\r\nexport {\r\n    UIFarm,\r\n    Home \r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}