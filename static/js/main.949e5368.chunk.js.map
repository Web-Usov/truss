{"version":3,"sources":["pages/Farm/components/UIPanel.tsx","utils/history.ts","utils/math.ts","models/Farm/ModelEntity.ts","models/Farm/ModelNode.ts","models/Farm/ModelBeam.ts","models/Farm/ModeslFarm.ts","pages/Farm/farmReducer.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Farm/farmTypes.ts","pages/Home/homeTypes.ts","pages/Farm/components/UINode.tsx","pages/Farm/components/UIBeam.tsx","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","navigation/index.ts","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","static/const.ts","static/ogImage.png","static/icon.png","static/bridge.png","static/airBridge.png"],"names":["UIModes","createBrowserHistory","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","Entity","props","Object","classCallCheck","this","id","x","y","angle","name","newX","newY","Date","now","Node","_Entity","_this","possibleConstructorReturn","getPrototypeOf","call","beamsID","forcesID","inherits","createClass","key","value","beamID","find","push","filter","forceID","Beam","length","startConnectedNodeID","endConnectedNodeID","newAngle","nodeID","place","cos","sin","endX","getEndX","endY","getEndY","angleBePoints","lengthBePoints","Farm","_farm","fixedNodes","forces","nodes","beams","time","Map","arguments","undefined","node","set","beam","delete","get","Error","concat","force","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getNode","map","getForce","_this2","getBeam","_this3","forEach","moveStartPoint","moveEndPoint","defaultFarmState","workSpace","defaultHomeState","title","mainReducer","combineReducers","farm","state","action","type","home","objectSpread","createStore","mods","mod","none","drag","addNode","addBeam","UIPanel","_ref","onSelect","selected","react","style","position","item","i","checked","onChange","e","UINode","mode","onClick","ReactKonva","text","_useStrictMode","radius","fill","stroke","strokeWidth","draggable","dragNode","shadowBlur","onDragMove","_onClick","_x","apply","toString","UIBeam","points","UIFarm","stage","stageHeight","window","innerHeight","stageWidth","innerWidth","uiMode","selectedID","paintEntity","bind","assertThisInitialized","onDrag","onMouseMove","setFarm","updateFarm","onKeyHandle","React","nextProps","setState","update","entity","_this$state","isEmptyPlace","target","getStage","_e$evt","evt","layerX","layerY","connectNode","connectBeam","addBeamStart","getBeamsOnNode","oldBeam","_beam","console","log","removeBeam","deleteBeam","deleteNode","getNodesOnBeam","_this$state2","_e$evt2","_this$state3","moveNodeTo","_deletePaintEntity","_this$state4","_this$state5","components_UIPanel","setSelectMode","height","width","className","ref","esm","keyEventName","keyValue","getBeams","components_UIBeam","getNodes","components_UINode","connect","dispatch","bindActionCreators","farmActions","navPath","Home","setTitle","src","consts","bridgeIcon_2","alt","fontSize","description","react_router_dom","to","homeActions","App","Helmet_default","a","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","react_router","path","component","exact","ReactDOM","render","react_default","createElement","es","store","src_App_0","document","getElementById","__webpack_require__","r","__webpack_exports__","__dirname","d","url","favicon","_ogImage_png__WEBPACK_IMPORTED_MODULE_0__","_ogImage_png__WEBPACK_IMPORTED_MODULE_0___default","n","_icon_png__WEBPACK_IMPORTED_MODULE_1__","_icon_png__WEBPACK_IMPORTED_MODULE_1___default","_bridge_png__WEBPACK_IMPORTED_MODULE_2__","_bridge_png__WEBPACK_IMPORTED_MODULE_2___default","_airBridge_png__WEBPACK_IMPORTED_MODULE_3__","_airBridge_png__WEBPACK_IMPORTED_MODULE_3___default","path__WEBPACK_IMPORTED_MODULE_4__","process","resolve","module","exports","p"],"mappings":"mRAEYA,sDCAGC,4BCSAC,6GAVUC,EAAWC,EAAWC,EAAWC,GAClD,OAAOC,KAAKC,OAAOJ,EAAKE,GAAKH,EAAKE,GAAOE,KAAKE,0CAG5BN,EAAWC,EAAWC,EAAWC,GACnD,OAAOC,KAAKG,KAAKH,KAAKI,IAAIR,EAAIE,EAAI,GAAKE,KAAKI,IAAIP,EAAKE,EAAI,6CCIpDM,EAQT,SAAAA,EAAYC,GAAiBC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAI,KAP7BC,QAO4B,EAAAD,KAN5BE,OAM4B,EAAAF,KAL5BG,OAK4B,EAAAH,KAJ5BI,WAI4B,EAAAJ,KAH5BK,UAG4B,EAAAL,KAF5BM,UAE4B,EAAAN,KAD5BO,UAC4B,EACxBP,KAAKC,GAAKO,KAAKC,MACfT,KAAKE,EAAIL,EAAMK,GAAK,EACpBF,KAAKG,EAAIN,EAAMM,GAAK,EACpBH,KAAKI,MAAQP,EAAMO,OAAS,EAC5BJ,KAAKK,KAAOR,EAAMQ,MAAQL,KAAKC,GAAK,GACpCD,KAAKM,KAAON,KAAKE,EACjBF,KAAKO,KAAOP,KAAKG,GClBZO,EAAb,SAAAC,GAGI,SAAAD,EAAYb,GAAa,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,IACrBE,EAAAd,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAY,GAAAK,KAAAf,KAAMH,KAHVmB,aAEyB,EAAAJ,EADzBK,cACyB,EAErBL,EAAKI,QAAUnB,EAAMmB,SAAW,GAChCJ,EAAKK,SAAWpB,EAAMoB,UAAa,GAHdL,EAH7B,OAAAd,OAAAoB,EAAA,EAAApB,CAAAY,EAAAC,GAAAb,OAAAqB,EAAA,EAAArB,CAAAY,EAAA,EAAAU,IAAA,cAAAC,MAAA,SAQgBC,GACR,OAAKtB,KAAKgB,QAAQO,KAAK,SAAAtB,GAAE,OAAIA,IAAOqB,MAChCtB,KAAKgB,QAAQQ,KAAKF,IACX,KAXnB,CAAAF,IAAA,aAAAC,MAAA,SAeeC,GAEPtB,KAAKgB,QAAWhB,KAAKgB,QAAQS,OAAO,SAAAxB,GAAE,OAAIA,IAAOqB,MAjBzD,CAAAF,IAAA,eAAAC,MAAA,SAmBiBK,GACJ1B,KAAKiB,SAASM,KAAK,SAAAtB,GAAE,OAAIA,IAAOyB,KACjC1B,KAAKiB,SAASO,KAAKE,KArB/B,CAAAN,IAAA,cAAAC,MAAA,SAuBgBK,GACR1B,KAAKgB,QAAYhB,KAAKiB,SAASQ,OAAO,SAAAxB,GAAE,OAAIA,IAAOyB,QAxB3DhB,EAAA,CAA0Bd,GCGb+B,EAAb,SAAAhB,GAKI,SAAAgB,EAAY9B,GAAc,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IACtBf,EAAAd,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA6B,GAAAZ,KAAAf,KAAMH,KALV+B,YAI0B,EAAAhB,EAH1BiB,0BAG0B,EAAAjB,EAF1BkB,wBAE0B,EAAAlB,EAD1BmB,cAC0B,EAEtBnB,EAAKgB,OAAS/B,EAAM+B,QAAU,EAC9BhB,EAAKiB,qBAAuBhC,EAAMgC,sBAAwB,EAC1DjB,EAAKkB,mBAAqBjC,EAAMiC,oBAAsB,EACtDlB,EAAKmB,SAAWnB,EAAKR,MALCQ,EAL9B,OAAAd,OAAAoB,EAAA,EAAApB,CAAA6B,EAAAhB,GAAAb,OAAAqB,EAAA,EAAArB,CAAA6B,EAAA,EAAAP,IAAA,cAAAC,MAAA,SAagBW,EAAgBC,GACxB,OAAQA,GACJ,IAAK,QACDjC,KAAK6B,qBAAuBG,EAC5B,MAEJ,IAAK,MACDhC,KAAK8B,mBAAqBE,KApB1C,CAAAZ,IAAA,aAAAC,MAAA,SA2BeY,GACG,UAAVA,EACAjC,KAAK6B,qBAAuB,EAC5B7B,KAAK8B,mBAAqB,IA9BlC,CAAAV,IAAA,UAAAC,MAAA,WAiCQ,OAAOrB,KAAKE,EAAKF,KAAK4B,OAASrC,KAAK2C,IAAIlC,KAAKI,MAAQb,KAAKE,MAjClE,CAAA2B,IAAA,UAAAC,MAAA,WAoCQ,OAAOrB,KAAKG,EAAKH,KAAK4B,OAASrC,KAAK4C,IAAInC,KAAKI,MAAQb,KAAKE,MApClE,CAAA2B,IAAA,iBAAAC,MAAA,SAsCmBnB,EAASC,GACpB,IAAMiC,EAAOpC,KAAKqC,UACZC,EAAOtC,KAAKuC,UAClBvC,KAAKE,EAAIA,EACTF,KAAKG,EAAIA,EACTH,KAAKI,MAAQlB,EAAOsD,cAActC,EAAEC,EAAGiC,EAAKE,GAC5CtC,KAAK4B,OAAS1C,EAAOuD,eAAevC,EAAEC,EAAGiC,EAAKE,KA5CtD,CAAAlB,IAAA,eAAAC,MAAA,SA+CiBnB,EAASC,GAClBH,KAAKI,MAAQlB,EAAOsD,cAAcxC,KAAKE,EAAEF,KAAKG,EAAED,EAAEC,GAClDH,KAAK4B,OAAS1C,EAAOuD,eAAezC,KAAKE,EAAEF,KAAKG,EAAED,EAAEC,OAjD5DwB,EAAA,CAA0B/B,GCOb8C,EAAb,WAMI,SAAAA,EAAYC,GAAe7C,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,GAAA1C,KAL3B4C,gBAK0B,EAAA5C,KAJ1B6C,YAI0B,EAAA7C,KAH1B8C,WAG0B,EAAA9C,KAF1B+C,WAE0B,EAAA/C,KAD1BgD,UAC0B,EACtBhD,KAAK8C,MAAQH,EAAQA,EAAMG,MAAQ,IAAIG,IACvCjD,KAAK4C,WAAaD,EAAQA,EAAMC,WAAa,IAAIK,IACjDjD,KAAK6C,OAASF,EAAQA,EAAME,OAAS,IAAII,IACzCjD,KAAK+C,MAAQJ,EAAQA,EAAMI,MAAQ,IAAIE,IACvCjD,KAAKgD,KAAOxC,KAAKC,MAXzB,OAAAX,OAAAqB,EAAA,EAAArB,CAAA4C,EAAA,EAAAtB,IAAA,UAAAC,MAAA,SAcYnB,EAAWC,EAAWC,GAAwC,IAAzBC,EAAyB6C,UAAAtB,OAAA,QAAAuB,IAAAD,UAAA,GAAAA,UAAA,GAAV,GAClDE,EAAO,IAAI1C,EAAK,CAClBR,IACAC,IACAC,QACAC,SAEJL,KAAK8C,MAAMO,IAAID,EAAKnD,GAAImD,KArBhC,CAAAhC,IAAA,UAAAC,MAAA,SAuBYnB,EAAUC,GACd,IAAMmD,EAAO,IAAI3B,EAAK,CAClBzB,IACAC,MAGJ,OADAH,KAAK+C,MAAMM,IAAIC,EAAKrD,GAAIqD,GACjBA,IA7Bf,CAAAlC,IAAA,aAAAC,MAAA,SA+BeW,GACPhC,KAAK8C,MAAMS,OAAOvB,KAhC1B,CAAAZ,IAAA,aAAAC,MAAA,SAkCeC,GACPtB,KAAK+C,MAAMQ,OAAOjC,KAnC1B,CAAAF,IAAA,UAAAC,MAAA,SAsCYW,GACJ,IAAMoB,EAAOpD,KAAK8C,MAAMU,IAAIxB,GAC5B,IAAKoB,EAAM,MAAMK,MAAK,wFAAAC,OAAwB1B,IAC9C,OAAOoB,IAzCf,CAAAhC,IAAA,UAAAC,MAAA,SA2CYC,GACJ,IAAMgC,EAAOtD,KAAK+C,MAAMS,IAAIlC,GAC5B,IAAKgC,EAAM,MAAMG,MAAK,kFAAAC,OAAuBpC,IAC7C,OAAOgC,IA9Cf,CAAAlC,IAAA,WAAAC,MAAA,SAgDaK,GACL,IAAMiC,EAAQ3D,KAAK6C,OAAOW,IAAI9B,GAC9B,IAAKiC,EAAO,MAAMF,MAAK,8FAAAC,OAAyBhC,IAChD,OAAOiC,IAnDf,CAAAvC,IAAA,WAAAC,MAAA,WAuDQ,IAAMyB,EAAe,GADRc,GAAA,EAAAC,GAAA,EAAAC,OAAAX,EAAA,IAEb,QAAAY,EAAAC,EAAgBhE,KAAK8C,MAAMmB,SAA3BC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAAoC,KAA5BR,EAA4BW,EAAA1C,MAChCyB,EAAMtB,KAAK4B,IAHF,MAAAkB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAKb,OAAOhB,IA3Df,CAAA1B,IAAA,WAAAC,MAAA,WA8DQ,IAAM0B,EAAgB,GADTyB,GAAA,EAAAC,GAAA,EAAAC,OAAAvB,EAAA,IAEb,QAAAwB,EAAAC,EAAgB5E,KAAK+C,MAAMkB,SAA3BC,OAAAC,cAAAK,GAAAG,EAAAC,EAAAR,QAAAC,MAAAG,GAAA,EAAoC,KAA5BlB,EAA4BqB,EAAAtD,MAChC0B,EAAMvB,KAAK8B,IAHF,MAAAgB,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,YAAAE,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,GAKb,OAAO3B,IAlEf,CAAA3B,IAAA,kBAAAC,MAAA,SAqEoBW,GAAyB,IAAApB,EAAAZ,KAErC,OADwBA,KAAK6E,QAAQ7C,GAAQf,SAAS6D,IAAI,SAAApD,GAAO,OAAId,EAAKmE,SAASrD,OAtE3F,CAAAN,IAAA,iBAAAC,MAAA,SAyEmBW,GAAwB,IAAAgD,EAAAhF,KAEnC,OADsBA,KAAK6E,QAAQ7C,GAAQhB,QAAQ8D,IAAI,SAAAxD,GAAM,OAAI0D,EAAKC,QAAQ3D,OA1EtF,CAAAF,IAAA,iBAAAC,MAAA,SA6EmBC,GACX,IAAMgC,EAAOtD,KAAKiF,QAAQ3D,GAClBO,EAA6CyB,EAA7CzB,qBAAsBC,EAAuBwB,EAAvBxB,mBAK9B,MAAO,CAHW9B,KAAK6E,QAAQhD,GACf7B,KAAK6E,QAAQ/C,MAlFrC,CAAAV,IAAA,aAAAC,MAAA,SAuFeW,EAAe9B,EAAUC,GAAc,IAAA+E,EAAAlF,KACxCoD,EAAOpD,KAAK6E,QAAQ7C,GAC1BoB,EAAKlD,EAAIA,EACTkD,EAAKjD,EAAIA,EACTiD,EAAKpC,QAAQmE,QAAQ,SAAA7D,GACjB,IAAMgC,EAAO4B,EAAKD,QAAQ3D,GACvBgC,EAAKzB,uBAAyBG,EAC7BsB,EAAK8B,eAAelF,EAAEC,GACjBmD,EAAKxB,qBAAuBE,GACjCsB,EAAK+B,aAAanF,EAAEC,SAhGpCuC,EAAA,GCTa4C,EAA+B,CACxCC,UAAW,IAAI7C,WCHN8C,EAAgC,CACzCC,MAAO,iBCEEC,EAAcC,YAAgB,CACvCC,KFEuB,WAA2E,IAA1EC,EAA0E3C,UAAAtB,OAAA,QAAAuB,IAAAD,UAAA,GAAAA,UAAA,GAAtDoC,EAAkBQ,EAAoC5C,UAAAtB,OAAA,EAAAsB,UAAA,QAAAC,EAClG,OAAQ2C,EAAOC,MACX,IGXmB,cHcf,MAF8B,CAACR,UAAU,IAAI7C,EAAKoD,EAAOP,YAK7D,QACI,OAAOM,IEVfG,KDDuB,WAA2E,IAA1EH,EAA0E3C,UAAAtB,OAAA,QAAAuB,IAAAD,UAAA,GAAAA,UAAA,GAAtDsC,EAAkBM,EAAoC5C,UAAAtB,OAAA,EAAAsB,UAAA,QAAAC,EAClG,OAAQ2C,EAAOC,MACX,IGViB,YHWb,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACA+F,EADP,CAEIJ,MAAOK,EAAOL,QAEtB,QACI,OAAOI,MCJJK,cAAYR,oDTZf1G,sPAYZ,IAAMmH,EAAO,CACT,CACI9F,KAAM,OACN+F,IAAKpH,EAAQqH,MAEjB,CACIhG,KAAM,OACN+F,IAAKpH,EAAQsH,MAEjB,CACIjG,KAAM,WACN+F,IAAKpH,EAAQuH,SAEjB,CACIlG,KAAM,WACN+F,IAAKpH,EAAQwH,SAEjB,CACInG,KAAK,SACL+F,IAAIpH,EAAQuE,SAgCLkD,EAvByB,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,SAAUC,EAAeF,EAAfE,SACjD,OACQC,EAAA,oBAAIC,MAAO,CACPC,SAAS,aAERZ,EAAKrB,IAAI,SAACkC,EAAMC,GAAP,OACNJ,EAAA,oBAAIzF,IAAK6F,GACLJ,EAAA,2BACIA,EAAA,0BAAOG,EAAK3G,MACZwG,EAAA,uBACId,KAAK,QACL1F,KAAK,SACLgB,MAAO2F,EAAKZ,IACZc,QAASN,IAAaI,EAAKZ,IAC3Be,SAAU,SAACC,GAAD,OAAOT,EAASK,EAAKZ,cYbhDiB,EA7BuB,SAAAX,GAA4C,IAAzCtD,EAAyCsD,EAAzCtD,KAAMkD,EAAmCI,EAAnCJ,KAAMgB,EAA6BZ,EAA7BY,KAAMC,EAAuBb,EAAvBa,QAAQX,EAAeF,EAAfE,SAC/D,OACIC,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACW,EAAA,KAAD,CACItH,EAAGkD,EAAKlD,EAAqB,EAAjBkD,EAAK/C,KAAKuB,OACtBzB,EAAGiD,EAAKjD,EAAE,GACVsH,KAAMrE,EAAK/C,KACXqH,gBAAc,IAGlBb,EAAA,cAACW,EAAA,OAAD,CAEIpG,IAAKgC,EAAKnD,GACV0H,OAAQf,EAAW,EAAI,EACvB1G,EAAGkD,EAAKlD,EACRC,EAAGiD,EAAKjD,EACRyH,KAAK,OACLC,OAAO,OACPC,YAAalB,EAAW,EAAI,EAC5BmB,UAAWT,IAAStI,EAAQsH,MAAQgB,IAAStI,EAAQgJ,SACrDN,gBAAc,EACdO,WAAY,EACZC,WAAY,SAACd,GAAD,OAAOd,EAAKc,EAAEhE,IAC1BmE,QAAO,SAAAY,GAAA,SAAAZ,EAAAa,GAAA,OAAAD,EAAAE,MAAArI,KAAAkD,WAAA,OAAAqE,EAAAe,SAAA,kBAAAH,EAAAG,YAAAf,EAAA,CAAE,SAACH,GAAD,OAAOG,EAAQH,EAAEhE,SCH3BmF,EAlBuB,SAAA7B,GAA6C,IAA1CpD,EAA0CoD,EAA1CpD,KAAkBiE,GAAwBb,EAApCJ,KAAoCI,EAA9BY,KAA8BZ,EAAxBa,SAAwBb,EAAfE,SAChE,OACIC,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACW,EAAA,KAAD,CACIgB,OAAQ,CACJlF,EAAKpD,EACLoD,EAAKnD,EACLmD,EAAKjB,UACLiB,EAAKf,WAETsF,OAAO,OACPC,YAAa,EACbP,QAAO,SAAAY,GAAA,SAAAZ,EAAAa,GAAA,OAAAD,EAAAE,MAAArI,KAAAkD,WAAA,OAAAqE,EAAAe,SAAA,kBAAAH,EAAAG,YAAAf,EAAA,CAAE,SAACH,GAAD,OAAOG,EAAQH,EAAE9D,iBCErBmF,cAEjB,SAAAA,EAAY5I,GAAoB,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,IAC5B7H,EAAAd,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA2I,GAAA1H,KAAAf,KAAMH,KAFF6I,WACwB,EAG5B9H,EAAKiF,MAAQ,CACT8C,YAAkC,IAArBC,OAAOC,YACpBC,WAAgC,IAApBF,OAAOG,WACnBnD,KAAM/F,EAAM0F,UACZyD,OAAQhK,EAAQqH,KAChB4C,YAAa,EACbC,iBAAa/F,GAGjBvC,EAAK2G,QAAU3G,EAAK2G,QAAQ4B,KAAbrJ,OAAAsJ,EAAA,EAAAtJ,CAAAc,IACfA,EAAKyI,OAASzI,EAAKyI,OAAOF,KAAZrJ,OAAAsJ,EAAA,EAAAtJ,CAAAc,IACdA,EAAK0I,YAAc1I,EAAK0I,YAAYH,KAAjBrJ,OAAAsJ,EAAA,EAAAtJ,CAAAc,IACnBA,EAAK2I,QAAU3I,EAAK2I,QAAQJ,KAAbrJ,OAAAsJ,EAAA,EAAAtJ,CAAAc,IACfA,EAAK4I,WAAa5I,EAAK4I,WAAWL,KAAhBrJ,OAAAsJ,EAAA,EAAAtJ,CAAAc,IAClBA,EAAK6I,YAAc7I,EAAK6I,YAAYN,KAAjBrJ,OAAAsJ,EAAA,EAAAtJ,CAAAc,IAEnBA,EAAK8H,MAAQgB,cAnBe9I,yFAqBN+I,GAClBA,EAAUpE,YAAcvF,KAAK6F,MAAMD,MACnC5F,KAAK4J,SAAS,CAAEhE,KAAM+D,EAAUpE,4CAEhCK,GACJ5F,KAAKH,MAAMgK,OAAOjE,sCAEXA,GACP5F,KAAK4J,SAAS,CAAEhE,yCAGZwB,EAAuC0C,GAAsB,IAAAC,EACxC/J,KAAK6F,MAAtBmD,EADyDe,EACzDf,OAAQpD,EADiDmE,EACjDnE,KACVoE,EAAe5C,EAAE6C,OAAOC,aAAe9C,EAAE6C,OAE/C,OAAQjB,GACJ,KAAKhK,EAAQuH,QACT,GAAIyD,EAAc,KAAAG,EACa/C,EAAEgD,IAArBC,EADMF,EACNE,OAAQC,EADFH,EACEG,OAChB1E,EAAKW,QAAQ8D,EAAQC,EAAQ,GAEjC,MAGJ,KAAKtL,EAAQwH,QACT,IAAKwD,GAAgBF,aAAkBpJ,EAAM,CAEzC,IAAM4C,EAAOsC,EAAKY,QAAQsD,EAAO5J,EAAG4J,EAAO3J,GAC3CmD,EAAKiH,YAAYT,EAAO7J,GAAI,SAC5B6J,EAAOU,YAAYlH,EAAKrD,IAExBD,KAAK4J,SAAS,CACVV,YAAa5F,EACb0F,OAAQhK,EAAQyL,eAGxB,MAEJ,KAAKzL,EAAQyL,aACT,IAAKT,GAAgBF,aAAkBpJ,GAAQV,KAAK6F,MAAMqD,uBAAuBvH,EAAM,CACnF,IAAM2B,EAAOtD,KAAK6F,MAAMqD,YAClBnG,EAAQ6C,EAAK8E,eAAepH,EAAKzB,sBACjC8I,EAAU5H,EAAMxB,KAAK,SAAAqJ,GAAK,OAC5BA,EAAM/I,uBAAyByB,EAAKzB,sBACpC+I,EAAM9I,qBAAuBgI,EAAO7J,IACpC2K,EAAM/I,uBAAyBiI,EAAO7J,IACtC2K,EAAM9I,qBAAuBwB,EAAKzB,uBAEtCgJ,QAAQC,IAAI/H,EAAO4H,EAASrH,IAGvBqH,GAAWb,EAAOU,YAAYlH,EAAKrD,MACpCqD,EAAK+B,aAAayE,EAAO5J,EAAG4J,EAAO3J,GACnCmD,EAAKiH,YAAYT,EAAO7J,GAAI,OAC5BD,KAAK4J,SAAS,CACVZ,OAAQhK,EAAQwH,QAChB0C,iBAAa/F,KAIzB,MAEJ,KAAMnE,EAAQuE,OACV,IAAIyG,EACA,GAAGF,aAAkBpJ,EACJkF,EAAK8E,eAAeZ,EAAO7J,IACnCkF,QAAQ,SAAA7B,GACPA,EAAKzB,uBAAyBiI,EAAO7J,GAAI2F,EAAKf,QAAQvB,EAAKxB,oBAAoBiJ,WAAWzH,EAAKrD,IAC7F2F,EAAKf,QAAQvB,EAAKzB,sBAAsBkJ,WAAWzH,EAAKrD,IAC7D2F,EAAKoF,WAAW1H,EAAKrD,MAEzB2F,EAAKqF,WAAWnB,EAAO7J,SACjB6J,aAAkBnI,IACvBiE,EAAKsF,eAAepB,EAAO7J,IAAIkF,QAAQ,SAAA/B,GACnCA,EAAK2H,WAAWjB,EAAO7J,MAE3B2F,EAAKoF,WAAWlB,EAAO7J,KASnC+J,GAAchK,KAAK4J,SAAS,CAAEX,YAAa,IAE/CjJ,KAAKwJ,WAAW5D,uCAERwB,GAAuC,IAAA+D,EACTnL,KAAK6F,MAAnCmD,EADuCmC,EACvCnC,OAAQpD,EAD+BuF,EAC/BvF,KAAMsD,EADyBiC,EACzBjC,YAEtB,OAAQF,GACJ,KAAKhK,EAAQyL,aAET,GAAIvB,GAAeA,aAAuBvH,EAAM,CAE5C,IAAM2B,EAAO4F,EAF+BkC,EAGjBhE,EAAEgD,IAArBC,EAHoCe,EAGpCf,OAAQC,EAH4Bc,EAG5Bd,OAChBhH,EAAK+B,aAAagF,EAAQC,QAEvBtK,KAAK4J,SAAS,CAAEZ,OAAQhK,EAAQwH,UAEvCxG,KAAKwJ,WAAW5D,mCAQrBwB,EAAsC0C,GAAgB,IAAAuB,EAEhCrL,KAAK6F,MAAtBD,EAFiDyF,EAEjDzF,KAAMoD,EAF2CqC,EAE3CrC,OACVc,aAAkBpJ,IACdsI,IAAWhK,EAAQgJ,UAAYgB,IAAWhK,EAAQsH,MAClDV,EAAK0F,WAAWxB,EAAO7J,GAAImH,EAAEgD,IAAIC,OAAQjD,EAAEgD,IAAIE,SAGvDtK,KAAKwJ,WAAW5D,uCAERwB,GACR,OAAQA,EAAEhG,KACN,IAAK,SACDpB,KAAKuL,4DASHjE,GACVtH,KAAKuL,qBACLvL,KAAK4J,SAAS,CACVZ,OAAQ1B,iDAGK,IAAAkE,EAEqBxL,KAAK6F,MAAnCmD,EAFSwC,EAETxC,OAAQE,EAFCsC,EAEDtC,YAAatD,EAFZ4F,EAEY5F,KACzBoD,IAAWhK,EAAQyL,cAAgBvB,aAAuBvH,IAC7CiE,EAAKf,QAAQqE,EAAYrH,sBACjCkJ,WAAW7B,EAAYjJ,IAC5B2F,EAAKoF,WAAW9B,EAAYjJ,IAC5BD,KAAK4J,SAAS,CACVV,iBAAa/F,IAEjBnD,KAAKwJ,WAAW5D,qCAGf,IAAAZ,EAAAhF,KAAAyL,EACyDzL,KAAK6F,MAA3D8C,EADH8C,EACG9C,YAAaG,EADhB2C,EACgB3C,WAAYlD,EAD5B6F,EAC4B7F,KAAMoD,EADlCyC,EACkCzC,OAAQC,EAD1CwC,EAC0CxC,WAE/C,OACIpC,EAAA,yBACIA,EAAA,cAAC6E,EAAD,CACI9E,SAAUoC,EACVrC,SAAU3G,KAAK2L,cAAcxC,KAAKnJ,QACtC6G,EAAA,cAACW,EAAA,MAAD,CACIoE,OAAQjD,EACRkD,MAAO/C,EACPgD,UAAU,QACVhF,MAAO,CACH8E,OAAQjD,EAAc,KACtBkD,MAAO/C,EAAa,MAExBvB,QAASvH,KAAKuH,QACd+B,YAAatJ,KAAKsJ,YAClByC,IAAK/L,KAAK0I,OAEV7B,EAAA,cAACmF,EAAA,EAAD,CACIC,aAAc,QACdC,SAAU,SACVzC,YAAazJ,KAAKyJ,cAEtB5C,EAAA,cAACW,EAAA,MAAD,CAAOsE,UAAU,SACZlG,EAAKuG,WAAWrH,IAAI,SAAAxB,GAAI,OACrBuD,EAAA,cAACuF,EAAD,CACIhL,IAAKkC,EAAKrD,GACVqD,KAAMA,EACNgE,KAAM0B,EACN1C,KAAMtB,EAAKqE,OACX9B,QAASvC,EAAKuC,QACdX,SAAUqC,IAAe3F,EAAKrD,OAIrC2F,EAAKyG,WAAWvH,IAAI,SAAA1B,GAAI,OACrByD,EAAA,cAACyF,EAAD,CACIlL,IAAKgC,EAAKnD,GACVmD,KAAMA,EACNkE,KAAM0B,EACN1C,KAAMtB,EAAKqE,OACX9B,QAASvC,EAAKuC,QACdX,SAAUqC,IAAe7F,EAAKnD,iBA3N1ByJ,aC3BvBG,EAAS,SAACtE,GAAD,MAAqC,CACvDQ,KLDuB,cKEvBR,cCMWgH,cALU,SAAC1G,GAAD,MAAsB,CAC3CN,UAAUM,EAAMD,KAAKL,YAEE,SAACiH,GAAD,OAAwBC,YAAmB3M,OAAAmG,EAAA,EAAAnG,CAAA,GAAI4M,GAAcF,IAEzED,CAA4C9D,GCX9CkE,EACE,IADFA,EAEE,gBCQMC,sLAEb,IAAMnH,EAAQzF,KAAKH,MAAM4F,QAAUD,EAAiBC,MAAQ,UAAYD,EAAiBC,MACzFzF,KAAKH,MAAMgN,SAASpH,EAAQ,qCAG5B,OAAOoB,EAAA,qBAAKiF,UAAU,OAClBjF,EAAA,wBAAQiF,UAAU,cACdjF,EAAA,qBAAKiG,IAAKC,EAAOC,aAAclB,UAAU,WAAWmB,IAAI,SACxDpG,EAAA,wBAAKkG,EAAOtH,OACZoB,EAAA,mBAAGC,MAAO,CACN+E,MAAM,QACNqB,SAAS,KACTH,EAAOI,aACXtG,EAAA,cAACuG,EAAA,EAAD,CACIC,GAAIV,EACJb,UAAU,YAFd,wDAdkBpC,aCRrBmD,EAAW,SAACpH,GAAD,MAAkC,CACtDM,KRDqB,YQErBN,UCOW8G,cALU,SAAA7F,GAAA,MAAuB,CAC5CjB,MADqBiB,EAAEV,KACZP,QAEY,SAAC+G,GAAD,OAAwBC,YAAmB3M,OAAAmG,EAAA,EAAAnG,CAAA,GAAIwN,GAAcd,IAEzED,CAA4CK,oBCwC5CW,2LArCb,OACC1G,EAAA,cAACA,EAAA,SAAD,KACCA,EAAA,cAAC2G,EAAAC,EAAD,CACCC,eAAgB,CAACC,KAAO,MACxBC,cAAc,aACdC,aAAcd,QACde,KAAM,CACL,CAACC,IAAM,gBAAiBC,KAAOjB,gBAC/B,CAACgB,IAAM,YAAaC,KAAOjB,cAE5BkB,KAAM,CACL,CAACC,QAAU,SACX,CAAC7N,KAAQ,WAAY8N,QAAW,uCAChC,CAAC9N,KAAQ,cAAe8N,QAAW,WACnC,CAAC9N,KAAQ,cAAe8N,QAAWpB,eACnC,CAACqB,SAAY,UAAWD,QAAW,WACnC,CAACC,SAAY,WAAYD,QAAWpB,SACpC,CAACqB,SAAY,WAAYD,QAAWpB,aACpC,CAACqB,SAAY,WAAYD,QAAWpB,aACpC,CAACqB,SAAY,gBAAiBD,QAAWpB,aACzC,CAACqB,SAAY,SAAUD,QAAWpB,UAIpClG,EAAA,0BACCA,EAAA,cAACwH,EAAA,EAAD,KACCxH,EAAA,cAACwH,EAAA,EAAD,CAAOC,KAAM3B,EAAmB4B,UAAW3B,EAAM4B,OAAK,IACtD3H,EAAA,cAACwH,EAAA,EAAD,CAAOC,KAAM3B,EAAmB4B,UAAW9F,cA7B/BiB,qBCalB+E,IAASC,OACLC,EAAAlB,EAAAmB,cAACC,EAAA,EAAD,CAAUC,MAAOA,GACbH,EAAAlB,EAAAmB,cAhBK,WACqB,OAC1BD,EAAAlB,EAAAmB,cAACxB,EAAA,EAAD,KACIuB,EAAAlB,EAAAmB,cAACG,EAAD,QAaJ,OAEJC,SAASC,eAAe,0CC7B5BC,EAAAC,EAAAC,GAAA,SAAAC,GAAAH,EAAAI,EAAAF,EAAA,wBAAAG,IAAAL,EAAAI,EAAAF,EAAA,0BAAA3J,IAAAyJ,EAAAI,EAAAF,EAAA,gCAAAjC,IAAA+B,EAAAI,EAAAF,EAAA,4BAAAI,IAAA,IAAAC,EAAAP,EAAA,IAAAQ,EAAAR,EAAAS,EAAAF,GAAAP,EAAAI,EAAAF,EAAA,4BAAAM,EAAAjC,IAAA,IAAAmC,EAAAV,EAAA,IAAAW,EAAAX,EAAAS,EAAAC,GAAAV,EAAAI,EAAAF,EAAA,iCAAAS,EAAApC,IAAA,IAAAqC,EAAAZ,EAAA,IAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAI,EAAAF,EAAA,iCAAAW,EAAAtC,IAAA,IAAAuC,EAAAd,EAAA,IAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAI,EAAAF,EAAA,8BAAAa,EAAAxC,IAAA,IAAAyC,EAAAhB,EAAA,IAQaK,EAAMY,mCACN1K,EAAQ,uGACR0H,EAAc,guBACdqC,EAXbN,EAAAS,EAAAO,GAWuB5B,EAAK8B,QAAQf,EAAU,mDCX9CgB,EAAAC,QAAiBpB,EAAAqB,EAAuB,wDCAxCF,EAAAC,QAAiBpB,EAAAqB,EAAuB,qDCAxCF,EAAAC,QAAiBpB,EAAAqB,EAAuB,uDCAxCF,EAAAC,QAAiBpB,EAAAqB,EAAuB","file":"static/js/main.949e5368.chunk.js","sourcesContent":["import * as React from 'react'\r\n\r\nexport enum UIModes {\r\n    none,\r\n    drag,\r\n    addNode,\r\n    dragNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    addBeamEnd,\r\n    dragBeam,\r\n    delete\r\n}\r\n\r\nconst mods = [\r\n    {\r\n        name: \"None\",\r\n        mod: UIModes.none\r\n    },\r\n    {\r\n        name: \"Drag\",\r\n        mod: UIModes.drag\r\n    },\r\n    {\r\n        name: \"Add Node\",\r\n        mod: UIModes.addNode\r\n    },\r\n    {\r\n        name: \"Add Beam\",\r\n        mod: UIModes.addBeam\r\n    },\r\n    {\r\n        name:\"Delete\",\r\n        mod:UIModes.delete\r\n    }\r\n]\r\n\r\nexport interface UIPanelProps {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIPanel: React.FC<UIPanelProps> = ({ onSelect, selected }) => {\r\n    return (\r\n            <ul style={{\r\n                position:'absolute'\r\n            }}>\r\n                {mods.map((item, i) => (\r\n                    <li key={i}>\r\n                        <label>\r\n                            <span>{item.name}</span>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"UiMode\"\r\n                                value={item.mod}\r\n                                checked={selected === item.mod}\r\n                                onChange={(e) => onSelect(item.mod)} />\r\n                        </label>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default UIPanel","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","class MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","export interface IEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\nexport class Entity implements IEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    constructor(props: IEntity) {\r\n        this.id = Date.now()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id + \"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { IEntity, Entity } from './ModelEntity';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: number[]\r\n    forcesID?: number[],\r\n}\r\n\r\nexport class Node extends Entity {\r\n    beamsID: number[];\r\n    forcesID: number[];\r\n    constructor(props:INode) {\r\n        super(props)\r\n        this.beamsID = props.beamsID || []\r\n        this.forcesID = props.forcesID  || []\r\n    }\r\n    connectBeam(beamID: number):boolean {\r\n        if (!this.beamsID.find(id => id === beamID)){\r\n            this.beamsID.push(beamID)\r\n            return true            \r\n        }\r\n        return false\r\n    }\r\n    removeBeam(beamID: number) {\r\n        \r\n        this.beamsID  = this.beamsID.filter(id => id !== beamID)\r\n    }\r\n    connectForce(forceID: number) {\r\n        if (!this.forcesID.find(id => id === forceID))\r\n            this.forcesID.push(forceID)\r\n    }\r\n    removeForce(forceID: number) {\r\n        this.beamsID   = this.forcesID.filter(id => id !== forceID)\r\n    }\r\n}","import { IEntity, Entity } from \"./ModelEntity\";\r\nimport { MyMath } from \"src/utils\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: number\r\n    endConnectedNodeID?: number\r\n    newAngle?:number\r\n}\r\n\r\nexport class Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n    newAngle:number\r\n    constructor(props: IBeam) {\r\n        super(props)\r\n        this.length = props.length || 0\r\n        this.startConnectedNodeID = props.startConnectedNodeID || 0\r\n        this.endConnectedNodeID = props.endConnectedNodeID || 0\r\n        this.newAngle = this.angle\r\n    }\r\n\r\n    connectNode(nodeID: number, place: 'start' | 'end'): void {\r\n        switch (place) {\r\n            case 'start':{\r\n                this.startConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            case 'end':{\r\n                this.endConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    removeNode(place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n        this.startConnectedNodeID = 0 :\r\n        this.endConnectedNodeID = 0\r\n    }\r\n    getEndX():number{\r\n        return this.x + (this.length * Math.cos(this.angle * Math.PI))\r\n    }\r\n    getEndY():number{\r\n        return this.y + (this.length * Math.sin(this.angle * Math.PI))\r\n    }\r\n    moveStartPoint(x:number,y:number):void{\r\n        const endX = this.getEndX()\r\n        const endY = this.getEndY()\r\n        this.x = x\r\n        this.y = y\r\n        this.angle = MyMath.angleBePoints(x,y, endX,endY)\r\n        this.length = MyMath.lengthBePoints(x,y, endX,endY)\r\n    }\r\n    \r\n    moveEndPoint(x:number,y:number):void{\r\n        this.angle = MyMath.angleBePoints(this.x,this.y,x,y)\r\n        this.length = MyMath.lengthBePoints(this.x,this.y,x,y)\r\n    }\r\n}","import { FixedNode } from \"./ModelFixedNode\";\r\nimport { Force } from \"./ModelForce\";\r\nimport { Node } from \"./ModelNode\";\r\nimport { Beam } from \"./ModelBeam\";\r\n\r\n\r\n\r\n\r\nexport interface IFarm {\r\n    fixedNodes?: Map<number, FixedNode>\r\n    forces?: Map<number, Force>\r\n    nodes?: Map<number, Node>\r\n    beams?: Map<number, Beam>\r\n}\r\n\r\n\r\n\r\nexport class Farm implements IFarm {\r\n    fixedNodes: Map<number, FixedNode>\r\n    forces: Map<number, Force>\r\n    nodes: Map<number, Node>\r\n    beams: Map<number, Beam>\r\n    time: number\r\n    constructor(_farm?: Farm) {\r\n        this.nodes = _farm ? _farm.nodes : new Map()\r\n        this.fixedNodes = _farm ? _farm.fixedNodes : new Map()\r\n        this.forces = _farm ? _farm.forces : new Map()\r\n        this.beams = _farm ? _farm.beams : new Map()\r\n        this.time = Date.now()\r\n\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\"): void {\r\n        const node = new Node({\r\n            x,\r\n            y,\r\n            angle,\r\n            name\r\n        })\r\n        this.nodes.set(node.id, node)\r\n    }\r\n    addBeam(x:number, y:number):Beam{\r\n        const beam = new Beam({\r\n            x,\r\n            y\r\n        })\r\n        this.beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n    deleteNode(nodeID: number): void {\r\n        this.nodes.delete(nodeID)\r\n    }\r\n    deleteBeam(beamID: number): void {\r\n        this.beams.delete(beamID)\r\n    }\r\n\r\n    getNode(nodeID: number): Node {\r\n        const node = this.nodes.get(nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number): Beam {\r\n        const beam = this.beams.get(beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number): Force {\r\n        const force = this.forces.get(forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n    \r\n    getNodes():Node[]{\r\n        const nodes:Node[] = [];\r\n        for(let node of this.nodes.values()){\r\n            nodes.push(node)\r\n        }\r\n        return nodes\r\n    }\r\n    getBeams():Beam[]{\r\n        const beams :Beam[] = [];\r\n        for(let beam of this.beams.values()){\r\n            beams.push(beam)\r\n        }\r\n        return beams\r\n    }\r\n\r\n    getForcesOnNode(nodeID: number): Force[] {\r\n        const forces: Force[] = this.getNode(nodeID).forcesID.map(forceID => this.getForce(forceID))\r\n        return forces\r\n    }\r\n    getBeamsOnNode(nodeID: number): Beam[] {\r\n        const beams: Beam[] = this.getNode(nodeID).beamsID.map(beamID => this.getBeam(beamID))\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): Node[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n\r\n    moveNodeTo(nodeID:number, x:number, y:number):void{\r\n        const node = this.getNode(nodeID)\r\n        node.x = x\r\n        node.y = y\r\n        node.beamsID.forEach(beamID => {\r\n            const beam = this.getBeam(beamID)\r\n            if(beam.startConnectedNodeID === nodeID){\r\n                beam.moveStartPoint(x,y)\r\n            }else if(beam.endConnectedNodeID === nodeID){\r\n                beam.moveEndPoint(x,y)\r\n            }\r\n        })\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport interface IFarmStore {\r\n    workSpace: Farm\r\n\r\n}\r\n\r\nexport const defaultFarmState: IFarmStore = {\r\n    workSpace: new Farm(),\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case FARM_UPDATE:{\r\n            const newState : IFarmStore = {workSpace:new Farm(action.workSpace)}\r\n            \r\n            return newState\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeStore, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeStore\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import { Action } from \"redux\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const FARM_UPDATE = 'FARM_UPDATE'\r\n\r\nexport interface IActionFarmUpdate extends Action {\r\n    type: typeof FARM_UPDATE,\r\n    workSpace:Farm\r\n}\r\n\r\nexport type FarmActions = IActionFarmUpdate;","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import * as React from 'react'\r\nimport { Circle, Text } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from './UIPanel';\r\n\r\nexport interface UINodeProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>,node: Node): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>,node:Node):void\r\n    node: Node,\r\n    mode:UIModes,\r\n    selected:boolean\r\n}\r\n\r\nconst UINode: React.FC<UINodeProps> = ({ node, drag, mode, onClick,selected }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            />\r\n               \r\n            <Circle\r\n\r\n                key={node.id}\r\n                radius={selected ? 8 : 6}\r\n                x={node.x}\r\n                y={node.y}\r\n                fill=\"#ddd\"\r\n                stroke=\"#888\"\r\n                strokeWidth={selected ? 2 : 0}\r\n                draggable={mode === UIModes.drag || mode === UIModes.dragNode}\r\n                _useStrictMode \r\n                shadowBlur={5}\r\n                onDragMove={(e) => drag(e,node)} \r\n                onClick={(e) => onClick(e,node)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { UIModes } from './UIPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\n\r\nexport interface UIBeamProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, beam: Beam): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    beam: Beam,\r\n    mode: UIModes,\r\n    selected: boolean\r\n    withStartNode?: boolean\r\n    withEndNode?: boolean\r\n}\r\n\r\nconst UIBeam: React.FC<UIBeamProps> = ({ beam, drag, mode, onClick, selected }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.getEndX(),\r\n                    beam.getEndY()\r\n                ]}\r\n                stroke='#bbb'\r\n                strokeWidth={4}\r\n                onClick={(e) => onClick(e,beam)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIBeam","import * as React from 'react'\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Stage, Layer } from \"react-konva\"\r\nimport Konva from \"konva\"\r\nimport './style.css'\r\nimport { Farm, Node } from 'src/models/Farm';\r\nimport UINode from './components/UINode';\r\nimport UIBeam from './components/UIBeam';\r\nimport UIPanel, { UIModes } from './components/UIPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport KeyHandler from 'react-key-handler'\r\n\r\n\r\nexport interface UIFarmProps extends IFarmStore {\r\n    update: (workSpace: Farm) => void\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm: Farm,\r\n    uiMode: UIModes,\r\n    selectedID: number,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\n\r\nexport default class UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage>\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: window.innerHeight * 0.75,\r\n            stageWidth: window.innerWidth * 0.75,\r\n            farm: props.workSpace,\r\n            uiMode: UIModes.none,\r\n            selectedID: -1,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.setFarm = this.setFarm.bind(this)\r\n        this.updateFarm = this.updateFarm.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n\r\n        this.stage = React.createRef();\r\n    }\r\n    componentWillReceiveProps(nextProps: UIFarmProps) {\r\n        if (nextProps.workSpace !== this.state.farm)\r\n            this.setState({ farm: nextProps.workSpace })\r\n    }\r\n    setFarm(farm: Farm): void {\r\n        this.props.update(farm)\r\n    }\r\n    updateFarm(farm: Farm): void {\r\n        this.setState({ farm })\r\n    }\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Node | Beam) {\r\n        const { uiMode, farm } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n\r\n        switch (uiMode) {\r\n            case UIModes.addNode: {\r\n                if (isEmptyPlace) {\r\n                    const { layerX, layerY } = e.evt\r\n                    farm.addNode(layerX, layerY, 0)\r\n                }\r\n                break;\r\n\r\n            }\r\n            case UIModes.addBeam: {\r\n                if (!isEmptyPlace && entity instanceof Node) {\r\n\r\n                    const beam = farm.addBeam(entity.x, entity.y)\r\n                    beam.connectNode(entity.id, 'start')\r\n                    entity.connectBeam(beam.id)\r\n\r\n                    this.setState({\r\n                        paintEntity: beam,\r\n                        uiMode: UIModes.addBeamStart\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.addBeamStart: {\r\n                if (!isEmptyPlace && entity instanceof Node && this.state.paintEntity instanceof Beam) {\r\n                    const beam = this.state.paintEntity\r\n                    const beams = farm.getBeamsOnNode(beam.startConnectedNodeID)\r\n                    const oldBeam = beams.find(_beam =>\r\n                        _beam.startConnectedNodeID === beam.startConnectedNodeID &&\r\n                        _beam.endConnectedNodeID === entity.id ||\r\n                        _beam.startConnectedNodeID === entity.id &&\r\n                        _beam.endConnectedNodeID === beam.startConnectedNodeID)\r\n\r\n                    console.log(beams, oldBeam, beam);\r\n\r\n\r\n                    if (!oldBeam && entity.connectBeam(beam.id) ) {\r\n                        beam.moveEndPoint(entity.x, entity.y)\r\n                        beam.connectNode(entity.id, \"end\")\r\n                        this.setState({\r\n                            uiMode: UIModes.addBeam,\r\n                            paintEntity: undefined\r\n                        })\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case  UIModes.delete:{\r\n                if(!isEmptyPlace){\r\n                    if(entity instanceof Node){\r\n                       const beams = farm.getBeamsOnNode(entity.id)\r\n                       beams.forEach(beam => {\r\n                           if(beam.startConnectedNodeID === entity.id) farm.getNode(beam.endConnectedNodeID).removeBeam(beam.id)\r\n                           else farm.getNode(beam.startConnectedNodeID).removeBeam(beam.id)\r\n                           farm.deleteBeam(beam.id)\r\n                       }) \r\n                       farm.deleteNode(entity.id)\r\n                    }else if(entity instanceof Beam){\r\n                        farm.getNodesOnBeam(entity.id).forEach(node => {\r\n                            node.removeBeam(entity.id)\r\n                        })                        \r\n                        farm.deleteBeam(entity.id)\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (isEmptyPlace) this.setState({ selectedID: -1 })\r\n\r\n        this.updateFarm(farm)\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, farm, paintEntity } = this.state\r\n\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n\r\n                if (paintEntity && paintEntity instanceof Beam) {\r\n\r\n                    const beam = paintEntity\r\n                    const { layerX, layerY } = e.evt\r\n                    beam.moveEndPoint(layerX, layerY)\r\n\r\n                } else this.setState({ uiMode: UIModes.addBeam })\r\n\r\n                this.updateFarm(farm)\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n\r\n        const { farm, uiMode } = this.state\r\n        if (entity instanceof Node) {\r\n            if (uiMode === UIModes.dragNode || uiMode === UIModes.drag) {\r\n                farm.moveNodeTo(entity.id, e.evt.layerX, e.evt.layerY)\r\n            }\r\n        }\r\n        this.updateFarm(farm)\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this._deletePaintEntity()\r\n                break;\r\n            }\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    setSelectMode(mode: UIModes) {\r\n        this._deletePaintEntity()\r\n        this.setState({\r\n            uiMode: mode,\r\n        })\r\n    }\r\n    _deletePaintEntity() {\r\n        \r\n        const { uiMode, paintEntity, farm } = this.state\r\n        if (uiMode === UIModes.addBeamStart && paintEntity instanceof Beam) {\r\n            const node = farm.getNode(paintEntity.startConnectedNodeID)\r\n            node.removeBeam(paintEntity.id)\r\n            farm.deleteBeam(paintEntity.id)\r\n            this.setState({\r\n                paintEntity: undefined,\r\n            })\r\n            this.updateFarm(farm)\r\n        } \r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, farm, uiMode, selectedID } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <UIPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectMode.bind(this)} />\r\n                <Stage\r\n                    height={stageHeight}\r\n                    width={stageWidth}\r\n                    className=\"stage\"\r\n                    style={{\r\n                        height: stageHeight + 'px',\r\n                        width: stageWidth + 'px',\r\n                    }}\r\n                    onClick={this.onClick}\r\n                    onMouseMove={this.onMouseMove}\r\n                    ref={this.stage}\r\n                >\r\n                    <KeyHandler\r\n                        keyEventName={\"keyup\"}\r\n                        keyValue={\"Escape\"}\r\n                        onKeyHandle={this.onKeyHandle}\r\n                    />\r\n                    <Layer className=\"layer\" >\r\n                        {farm.getBeams().map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                drag={this.onDrag}\r\n                                onClick={this.onClick}\r\n                                selected={selectedID === beam.id}\r\n                            />\r\n                        ))}\r\n\r\n                        {farm.getNodes().map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={this.onDrag}\r\n                                onClick={this.onClick}\r\n                                selected={selectedID === node.id}\r\n                            />\r\n                        ))}\r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        )\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const update = (workSpace : Farm) : FarmActions => ({\r\n    type:FARM_UPDATE,\r\n    workSpace\r\n})","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  (state: AppState) => ({\r\n    workSpace:state.farm.workSpace,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { IHomeStore, defaultHomeState } from './homeReducer';\r\nimport { navPath } from '../../navigation';\r\nimport { Link } from 'react-router-dom';\r\nimport { consts } from 'src/static';\r\n\r\nexport interface IHomeProps extends IHomeStore {\r\n    setTitle: (title: string) => void,\r\n}\r\n\r\nexport default class Home extends React.Component<IHomeProps> {\r\n    _setTitle() {\r\n        const title = this.props.title === defaultHomeState.title ? \"To Farm\" : defaultHomeState.title\r\n        this.props.setTitle(title + '')\r\n    }\r\n    render() {\r\n        return <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={consts.bridgeIcon_2} className=\"App-logo\" alt=\"logo\" />\r\n                <h3>{consts.title}</h3>\r\n                <p style={{\r\n                    width:\"800px\",\r\n                    fontSize:18\r\n                }}>{consts.description}</p>\r\n                <Link\r\n                    to={navPath.FARM_PAGE}\r\n                    className=\"App-link\">\r\n                    Поехали!\r\n                </Link>\r\n            </header>\r\n        </div>\r\n    }\r\n}","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport * as consts from './static/const';\nimport './App.css';\n\ninterface IAppProps {\n\n}\n\nclass App extends React.Component<IAppProps> {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={consts.title}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":consts.bridgeIcon_2},\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":consts.airBridge},\n\t\t\t\t\t]}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"width=device-width, initial-scale=1\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": consts.description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": consts.title},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": consts.url},\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<main>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</main>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","// import favicon from './favicon.ico'\r\nimport ogImage from './ogImage.png'\r\nimport bridgeIcon_1 from './icon.png'\r\nimport bridgeIcon_2 from './bridge.png'\r\nimport airBridge from './airBridge.png'\r\nimport path from 'path'\r\n\r\n// Strings\r\nexport const url = process.env.PUBLIC_URL\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"\r\nexport const favicon = path.resolve(__dirname,\"favicon.ico\")\r\n\r\n\r\n// Images\r\nexport {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";"],"sourceRoot":""}