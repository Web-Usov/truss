{"version":3,"sources":["utils/history.ts","models/Farm/ModelNode.ts","models/Farm/ModelEntity.ts","models/Farm/index.ts","pages/Farm/farmReducer.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Farm/farmTypes.ts","pages/Home/homeTypes.ts","components/UIFarm/UINode.tsx","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","navigation/index.ts","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","pages/Home/logo.svg"],"names":["createBrowserHistory","ClassNode","_ClassFarmEntity","props","nodeProps","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","beamsID","forcesID","inherits","createClass","key","value","beamID","find","id","push","filter","forceID","ClassFarmEntity","x","y","angle","name","newX","newY","Date","now","ClassFarm","_farm","fixedNodes","forces","nodes","beams","time","arguments","length","undefined","node","nodeID","Error","concat","beam","force","getNode","getBeam","startConnectedNodeID","endConnectedNodeID","defaultFarmState","workSpace","defaultHomeState","title","mainReducer","combineReducers","farm","state","action","type","home","objectSpread","createStore","UINode","_ref","dragNode","react","ReactKonva","text","_useStrictMode","radius","fill","stroke","strokeWidth","draggable","onDragMove","e","UIFarm","stageHeight","window","innerHeight","stageWidth","innerWidth","addNode","bind","assertThisInitialized","target","getStage","_e$evt","evt","layerX","layerY","update","farmNode","nextProps","console","log","setState","_this2","_this$state","height","width","className","style","onClick","map","UIFarm_UINode","React","connect","dispatch","bindActionCreators","farmActions","navPath","Home","setTitle","src","logo","alt","react_router_dom","to","_setTitle","homeActions","App","document","react_router","path","component","exact","ReactDOM","render","react_default","a","createElement","es","store","src_App_0","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.08bfeff8.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { IFarmEntity, ClassFarmEntity } from './ModelEntity';\r\n\r\nexport interface INode extends IFarmEntity {\r\n    beamsID: number[]\r\n    forcesID: number[],\r\n}\r\n\r\nexport interface IFixedNode extends INode {\r\n    // connectedBeam:IBeam[]\r\n    // angle: 0 | 90 | 180 | 260\r\n}\r\n\r\nexport class ClassNode extends ClassFarmEntity implements INode {\r\n    beamsID: number[];\r\n    forcesID: number[];\r\n    constructor(props: IFarmEntity, nodeProps?: INode) {\r\n        super(props)\r\n        this.beamsID = nodeProps ? nodeProps.beamsID : []\r\n        this.forcesID = nodeProps ? nodeProps.forcesID : []\r\n    }\r\n\r\n    connectBeam(beamID: number) {\r\n        if (!this.beamsID.find(id => id === beamID))\r\n            this.beamsID.push(beamID)\r\n    }\r\n    deleteBeam(beamID: number) {\r\n        this.beamsID.filter(id => id !== beamID)\r\n    }\r\n    addForce(forceID: number) {\r\n        if (!this.forcesID.find(id => id === forceID))\r\n            this.forcesID.push(forceID)\r\n    }\r\n    deleteForce(forceID: number) {\r\n        this.forcesID.filter(id => id !== forceID)\r\n    }\r\n}","\r\nexport interface IFarmEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\n\r\nexport class ClassFarmEntity implements IFarmEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    // x:number = 0,y:number = 0,angle:number = 0, name:string = \"\"\r\n    constructor(props: IFarmEntity) {\r\n        this.id = Date.now()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id+\"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { INode, ClassNode, IFixedNode } from \"./ModelNode\";\r\nimport { IFarmEntity } from \"./ModelEntity\";\r\n\r\n\r\n\r\n\r\nexport interface IBeam extends IFarmEntity {\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n}\r\n\r\nexport interface IForce extends IFarmEntity {\r\n    value: number,\r\n    angle: 0 | 90,\r\n    nodeID: number\r\n}\r\n\r\nexport interface IFarm {\r\n    fixedNodes: IFixedNode[]\r\n    forces: IForce[]\r\n    nodes: INode[]\r\n    beams: IBeam[]\r\n\r\n    addNode(x: number, y: number, angle: number, name?: string): void\r\n\r\n    getNode(nodeID: number): INode\r\n    getBeam(beamID: number): IBeam\r\n    getForce(forceID: number): IForce\r\n\r\n    getForcesOnNode(nodeID: number): IForce[]\r\n    getBeamsOnNode(nodeID: number): IBeam[]\r\n    getNodesOnBeam(beamID: number): INode[]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class ClassFarm implements IFarm {\r\n    fixedNodes: IFixedNode[];\r\n    forces: IForce[];\r\n    nodes: ClassNode[];\r\n    beams: IBeam[];\r\n    time:number\r\n    constructor(_farm? : ClassFarm) {\r\n        this.nodes = _farm ? _farm.nodes : []\r\n        this.fixedNodes =  _farm ? _farm.fixedNodes : []\r\n        this.forces =  _farm ? _farm.forces : []\r\n        this.beams =  _farm ? _farm.beams : []\r\n        this.time = Date.now()\r\n\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\") {\r\n        const node = new ClassNode({\r\n            x,\r\n            y,\r\n            angle,\r\n            name\r\n        })\r\n        this.nodes.push(node)\r\n    }\r\n    deleteNode(nodeID:number){\r\n        this.nodes.filter(node => node.id !== nodeID)\r\n    }\r\n\r\n    getNode(nodeID: number) {\r\n        const node = this.nodes.find(node => node.id === nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number) {\r\n        const beam = this.beams.find(beam => beam.id === beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number) {\r\n        const force = this.forces.find(force => force.id === forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n\r\n\r\n    getForcesOnNode(nodeID: number): IForce[] {\r\n        const forces: IForce[] = this.forces.filter(force => force.nodeID === nodeID)\r\n        return forces\r\n    }\r\n    getBeamsOnNode(nodeID: number): IBeam[] {\r\n        const node = this.getNode(nodeID)\r\n\r\n        const beams: IBeam[] = this.beams.filter(beam => node.beamsID.find(beamID => beamID === beam.id) !== undefined)\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): INode[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n}\r\n\r\nexport {\r\n    ClassNode\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { ClassFarm } from \"src/models/Farm\";\r\n\r\nexport interface IFarmStore {\r\n    workSpace: ClassFarm\r\n\r\n}\r\n\r\nexport const defaultFarmState: IFarmStore = {\r\n    workSpace: new ClassFarm(),\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case FARM_UPDATE:{\r\n            const newState : IFarmStore = {workSpace:new ClassFarm(action.workSpace)}\r\n            \r\n            return newState\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeStore, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeStore\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import { Action } from \"redux\";\r\nimport { ClassFarm } from \"src/models/Farm\";\r\n\r\nexport const FARM_UPDATE = 'FARM_UPDATE'\r\n\r\nexport interface IActionFarmUpdate extends Action {\r\n    type: typeof FARM_UPDATE,\r\n    workSpace:ClassFarm\r\n}\r\n\r\nexport type FarmActions = IActionFarmUpdate;","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import * as React from 'react'\r\nimport { Circle, Text } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { ClassNode } from 'src/models/Farm';\r\n\r\nexport interface IUINode {\r\n    dragNode(node: ClassNode, e: Konva.KonvaEventObject<DragEvent>): void\r\n    node: ClassNode\r\n}\r\n\r\nconst UINode: React.FC<IUINode> = ({ node, dragNode }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            />\r\n               \r\n            <Circle\r\n\r\n                key={node.id}\r\n                radius={10}\r\n                x={node.x}\r\n                y={node.y}\r\n                fill=\"#ddd\"\r\n                stroke=\"#888\"\r\n                strokeWidth={3}\r\n                draggable\r\n                _useStrictMode \r\n                onDragMove={(e) => dragNode(node, e)} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Stage, Layer} from \"react-konva\"\r\nimport Konva from \"konva\"\r\nimport './style.css'\r\nimport { ClassFarm, ClassNode } from 'src/models/Farm';\r\nimport { UINode } from 'src/components/UIFarm';\r\n\r\nexport interface IFarmProps extends IFarmStore {\r\n    update:(workSpace:ClassFarm) => void\r\n}\r\nexport interface IFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm:ClassFarm\r\n}\r\nexport default class UIFarm extends React.Component<IFarmProps, IFarmState>{\r\n    // private refStar: React.RefObject<Konva.Star>;\r\n    constructor(props: IFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: window.innerHeight * 0.75,\r\n            stageWidth: window.innerWidth * 0.75,\r\n            farm: props.workSpace\r\n        }\r\n        // this.refStar = React.createRef();\r\n        this.addNode = this.addNode.bind(this)\r\n    }\r\n    addNode(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        if (e.target.getStage() === e.target) {\r\n\r\n            const { layerX, layerY } = e.evt\r\n            const {update} = this.props\r\n            this.state.farm.addNode(layerX, layerY, 0)\r\n            update(this.state.farm)\r\n        }\r\n\r\n    }\r\n    dragNode(node: ClassNode, e: Konva.KonvaEventObject<DragEvent>) {\r\n        const {update} = this.props\r\n        const farmNode = this.state.farm.getNode(node.id)\r\n        farmNode.x = e.evt.layerX\r\n        farmNode.y = e.evt.layerY\r\n        update(this.state.farm)\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps : any){\r\n        console.log(nextProps);\r\n        \r\n        this.setState({farm:nextProps.workSpace})\r\n    }\r\n    \r\n    render() {\r\n        const { stageHeight, stageWidth, farm } = this.state\r\n        \r\n        return (\r\n            <div>\r\n                <Stage\r\n                    height={stageHeight}\r\n                    width={stageWidth}\r\n                    className=\"stage\"\r\n                    style={{\r\n                        height: stageHeight + 'px',\r\n                        width: stageWidth + 'px',\r\n                    }}\r\n                    onClick={this.addNode}\r\n                >\r\n                    <Layer className=\"layer\">\r\n                        {farm.nodes.map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                dragNode={this.dragNode.bind(this)} />\r\n                            // <Circle\r\n                            //     key={node.id}\r\n                            //     radius={10}\r\n                            //     x={node.x}\r\n                            //     y={node.y}\r\n                            //     fill=\"red\"\r\n                            //     draggable\r\n                            //     onDragMove={this.dragNode}\r\n                            // />\r\n                        ))}\r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        )\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { ClassFarm } from \"src/models/Farm\";\r\n\r\nexport const update = (workSpace : ClassFarm) : FarmActions => ({\r\n    type:FARM_UPDATE,\r\n    workSpace\r\n})","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  (state: AppState) => ({\r\n    workSpace:state.farm.workSpace,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport logo from './logo.svg'\r\nimport { IHomeStore, defaultHomeState } from './homeReducer';\r\nimport { navPath } from '../../navigation';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface IHomeProps extends IHomeStore {\r\n    setTitle: (title: string) => void,\r\n}\r\n\r\nexport default class Home extends React.Component<IHomeProps> {\r\n    _setTitle() {\r\n        const title = this.props.title === defaultHomeState.title ? \"To Farm\" : defaultHomeState.title\r\n        this.props.setTitle(title + '')\r\n    }\r\n    render() {\r\n        return <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>TypeScript - pain first, then nice</p>\r\n                <Link\r\n                    to={navPath.FARM_PAGE}\r\n                    className=\"App-link\">\r\n                    {this.props.title || \"To Farm )\"}\r\n                </Link>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={this._setTitle.bind(this)}\r\n                >Change title</button>\r\n            </header>\r\n        </div>\r\n    }\r\n}","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n\ninterface IAppProps {\n\n}\n\nclass App extends React.Component<IAppProps> {\n\tconstructor(props : IAppProps){\n\t\tsuper(props)\n\t\tdocument.title = \"Truss - ферма для каждого\"\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}