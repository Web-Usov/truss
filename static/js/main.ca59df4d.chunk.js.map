{"version":3,"sources":["static/images/ogImage.png","static/images/icon.png","static/images/bridge.png","static/images/airBridge.png","static/images/fixation.svg","static/const.ts","utils/UI.ts","utils/history.ts","models/Truss/TTypes.ts","static/colors.ts","utils/math.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/index.ts","models/Truss/TEntity.ts","models/Truss/TBeam.ts","models/Truss/TCalc.ts","models/Truss/TNode.ts","models/Truss/Truss.ts","models/Truss/TFactory.ts","pages/Truss/components/UICalcData.tsx","components/appBar.tsx","components/Btns/btn.tsx","components/Btns/menuBtn.tsx","components/Btns/toggleBtn.tsx","components/dialogFull.tsx","components/sidebar.tsx","pages/Truss/components/UIEntityInfo.tsx","pages/Truss/actions/actionsList.ts","pages/Truss/actions/index.tsx","pages/Truss/components/UIFarm.tsx","pages/Truss/components/UIHeader.tsx","pages/Truss/components/UIToolPanel.tsx","pages/Truss/components/UITreePanel.tsx","pages/Truss/components/UITrussEntities/UIBeam.tsx","pages/Truss/components/UITrussEntities/UIGrid.tsx","pages/Truss/components/UITrussEntities/UINode.tsx","pages/Truss/components/UITrussEntities/UIStage.tsx","pages/Truss/TrussContainer.tsx","pages/Truss/index.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","__dirname","d","str","UI","canvas","img","path__WEBPACK_IMPORTED_MODULE_0__","path__WEBPACK_IMPORTED_MODULE_0___default","n","_images_ogImage_png__WEBPACK_IMPORTED_MODULE_1__","_images_ogImage_png__WEBPACK_IMPORTED_MODULE_1___default","_images_icon_png__WEBPACK_IMPORTED_MODULE_2__","_images_icon_png__WEBPACK_IMPORTED_MODULE_2___default","_images_bridge_png__WEBPACK_IMPORTED_MODULE_3__","_images_bridge_png__WEBPACK_IMPORTED_MODULE_3___default","_images_airBridge_png__WEBPACK_IMPORTED_MODULE_4__","_images_airBridge_png__WEBPACK_IMPORTED_MODULE_4___default","_images_fixation_svg__WEBPACK_IMPORTED_MODULE_5__","_images_fixation_svg__WEBPACK_IMPORTED_MODULE_5___default","url","process","title","description","favicon","path","resolve","cellSize","MMinCell","koefOfNewPos","nodeSize","beamSize","koefOnGrid","sidebarWidth","width","height","ogImage","bridgeIcon_1","bridgeIcon_2","airBridge","FixationIcon","UIModes","createBrowserHistory","NodeFixation","theme","createMuiTheme","palette","primary","dark","main","light","secondary","background","default","overrides","MuiTooltip","tooltip","fontSize","getNodeColor","node","isStatic","fixation","colors","fixedNode","staticNode","getNodeStorkeColor","mode","move","addBeam","addBeamStart","getNodeStorkeWidth","getBeamColor","beam","nodeMouseEnter","e","stage","target","getStage","delete","container","style","cursor","none","nodeMouseLeave","beamMouseEnter","beamMouseLeave","mainBackGround","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","y","a","b","rowsA","length","rowsB","colsA","colsB","result","Error","i","row","j","push","k","sum","MathJs","error","console","array","navPath","withStyles","createStyles","root","display","flexDirection","alignItems","justifyContent","logo","padding","descripton","btn","_ref","classes","react","className","src","alt","Typography","variant","align","Button","component","Link","to","size","color","Home","this","props","homeHeader","React","minHeight","spacing","TEntity","arguments","undefined","coord","id","name","dCoord","Object","classCallCheck","_id","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","uuid","_name","_coord","_dCoord","v","observable","computed","action","TBeam","_this","possibleConstructorReturn","getPrototypeOf","call","_entity","TBeam_descriptor","assertThisInitialized","TBeam_descriptor2","TBeam_descriptor3","_descriptor4","_descriptor5","startConnectedNode","endConnectedNode","endCoord","startForce","endForce","objectSpread","_startConnectedNode","_endConnectedNode","_endCoord","_startForce","_endForce","n1","n2","concat","l","lengthBePoints","TrussCalc","createClass","key","value","_init","asyncToGenerator","regenerator_default","mark","_callee","NodeCoord","NodeV","Forces","LinkNodes","LinkLength","area","ModUpr","Kmest","Lambda0","Lambda","Kobs","IndexV","K","Va","Vi","Vij","V","P","N_Link","N_Nodes","N_DOF","_args","wrap","_context","prev","next","modUpr","forEach","Kmest_i","l_i","Lambda_i","Kobs_i","IndexV_i","max","apply","toConsumableArray","map","getDetMatrix","SquareRoot","V_i","P_i","farmCalcDebug","log","abrupt","stop","_x","_x2","_x3","_x4","_x5","length_i","mnoz","nodeCoordOfX","nodeCoordOfY","LTxL","_LTxL","augmnet1","augment2","Array","prototype","_ref2","nodeV1","nodeV2","n_dof","indexV","k_obs","t","A","B","_a","_b","s","signum","abs","SDSsum","item","nodeV","vi","q","linkNodes","vij","n_start","n_ends","multMatrxiV2","TNode","TNode_descriptor","_forceX","_forceY","_isStatic","_fixation","beamsID","forceX","forceY","_beamsID","None","find","res","filter","flag","models_Truss_Truss","Truss","Truss_descriptor","Truss_descriptor2","Truss_descriptor3","sortByName","numsA","split","numA","Number","numsB","_nodes","Map","_beams","connectBeamToStartNode","bind","from","values","_calcData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","set","get","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","moveTo","nodes","nodesArray","sort","toString","moveEndTo","nodeID","beamID","connectStartNode","conncetBeam","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_findOldBeamByNode","connectEndNode","beams","checkingBeam","updateBeforeCalc","beamsArray","_nodeVindex","X","Y","YX","XY","nums","init","data","updateAfterCalc","sortNodesByCoord","_iterator4","_iteratorNormalCompletion4","_step4","toFixed","_iterator5","_iteratorNormalCompletion5","_step5","entity","has","includes","_node","removeBeam","clear","TrussFactory","_parse","nodesJSON","beamsJSON","nodesMap","beamsMap","JSON","parse","sent","truss","stringify","replace","_fixedNodes","_staticNodes","_n","useStyles","makeStyles","overflowX","paddingTop","table","minWidth","tableBox","marginBottom","paddingLeft","UICalcData","observer","viewTable","head","rows","Paper","Table","viewHead","TableBody","viewBodyRow","Box","viewP","viewVi","cells","TableHead","TableRow","cell","TableCell","appBar","zIndex","drawer","marginRight","marginLeft","& img","children","position","_ref$withLogo","withLogo","AppBar","clsx","Toolbar","react_router_dom","viewLogo","Btn","_props$title","_props$icon","icon","_props$disabled","disabled","onClickToAction","todo","_props$fab","fab","_props$onlyIcon","onlyIcon","Tooltip","Fab","onClick","MenuBtn","_React$useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","handleClose","items","open","Boolean","aria-describedby","aria-haspopup","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","onMouseLeave","MenuList","MenuItem","handleItemClick","ListItemIcon","styles","borderRadius","border","fade","active","transition","transitions","create","duration","short","contrastText","backgroundColor","&$selected","&:hover","@media (hover: none)","&$disabled","selected","MyToggleButton","other","objectWithoutProperties","ToggleButton","assign","defineProperty","ToggleBtn","box","grey","flex","Transition","forwardRef","ref","react_default","createElement","Slide","direction","FullScreenDialog","Dialog","fullScreen","TransitionComponent","IconButton","edge","aria-label","Close_default","Sidebar","state","viewTooltip","switchDrawer","localState","localStorage","getItem","setState","setItem","_this2","_this$props","btnIcon","anchor","_this$state","Drawer","paper","drawerPaper","toolbar","Divider","onOpen","changeViewtooltip","left","right","toogleIcon","esm_Close","top","mixins","TextRow","text","TextRows","UIEntityInfo","UIEntityInfo_TextRow","_this$props$onDelete","onDelete","UIEntityInfo_TextRows","viewFixationInfo","btnGroup","Delete","_this$props2","_this$props2$onDelete","NodeInfo","BeamInfo","sidebar","Info","viewInfo","marginTop","HEADER","CANVAS","CLEAR","SAVE","CALC","DO","RESULT","TOOLS","TRUSS","headerMenu","SaveAlt","DeleteForever","Straighten","ViewList","toolsButtons","modsButtons","mod","ZoomOutMap","addNode","MyLocation","Power","actions","UITruss","stageHeight","stageWidth","uiMode","selectedEntityID","paintEntity","openModal","UIonClick","UIonDrag","UIonMouseMove","onKeyHandle","selectEntity","deleteEntity","clearFarm","saveFarm","calculate","handleBtnClick","modalStateChange","current","attrs","parentElement","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","calculation","isEmptyPlace","evt","preventDefault","button","_e$evt","layerX","layerY","cellX","cellY","connectedBeam","connectBeamToNode","_this$state2","_e$evt2","moveEndBeam","defaultPrevented","_e$evt3","moveNode","deletePaintEntity","window","confirm","clearTruss","cacheTruss","farm","calcData","components_UICalcData","_this$state3","calculated","selectedEntity","react_stats","isActive","esm","keyEventName","keyValue","components_UIHeader","stageBox","components_UITreePanel","onSelect","UITrussEntities_UIStage","onDrag","onMouseMove","viewNewPos","components_UIEntityInfo","components_UIToolPanel","setSelectedMode","viewDialogs","overflow","flexGrow","grow","_ref$onClick","_ref$disabled","m","Icon","bottom","transform","modsBtnGroup","verticalAlign","vHr","opacity","ToggleButtonGroup","exclusive","onChange","UITreePanel","tabs","openTab","viewListItem","tab","entityArray","_this$props$selectedE","_this$props$onSelect","ListItem","Badge","badgeContent","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","nested","Brightness1","_this$props2$nodes","_this$props2$beams","esm_List","GpsNotFixed","Timeline","UIBeam","_ref$mode","_ref$selected","_ref$viewNewPos","points","dEndCoord","ReactKonva","stroke","strokeWidth","shadowBlur","hitStrokeWidth","onMouseEnter","heightBox","heightCell","widthBox","widthCell","countOfX","countOfY","columns","index","viewColumns","viewRows","UINode","viewForce","angle","pointerLength","pointerWidth","rotation","viewFixation","radius","fill","_this$props$viewNewPo","_this$props$onClick","_this$props$selected","_this$props$mode","_this$props$drag","drag","_useStrictMode","fontFamily","onDragEnd","draggable","onDragMove","UIStage","lib_default","autoHide","UITrussEntities_UIGrid","UITrussEntities_UIBeam","UITrussEntities_UINode","boxShadow","shadows","TrussContainer","TrussContainer_class","_React$Component","nodesCacheName","beamsCacheName","options","message","alert","_y","_beam","moveEndBeamWhileDraving","place","connectBeamToEndNode","t0","setDefaultTruss","loadFromCache","loadTrussFromCache","_truss","genTruss","setNodes","firstPlacement","_TrussFactory$toStrin","_callee2","_ref3","_context2","setBeams","_callee3","_context3","removeItem","inherits","UIFarm","createNodes","App","Helmet_default","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","exact","TrussPage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ca59df4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";","module.exports = __webpack_public_path__ + \"static/media/fixation.dd261ca6.svg\";","// import favicon from './images/favicon.ico'\r\nimport path from 'path'\r\nimport ogImage from './images/ogImage.png'\r\nimport bridgeIcon_1 from './images/icon.png'\r\nimport bridgeIcon_2 from './images/bridge.png'\r\nimport airBridge from './images/airBridge.png'\r\nimport FixationIcon from './images/fixation.svg'\r\n\r\n// Strings\r\nexport const str = {\r\n    url: process.env.PUBLIC_URL,\r\n    title: \"Truss - ферма для каждого\",\r\n    description: \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\",\r\n    favicon: path.resolve(__dirname, \"favicon.ico\")\r\n}\r\n\r\n// UI\r\nexport const UI = {\r\n    cellSize: 45,\r\n    MMinCell: 200,\r\n    koefOfNewPos:100,\r\n    nodeSize: 0,\r\n    beamSize: 0,\r\n    koefOnGrid: 0,\r\n    sidebarWidth: 240,\r\n\r\n}\r\nUI.nodeSize = UI.cellSize / 3\r\nUI.beamSize = UI.cellSize / 7\r\nUI.koefOnGrid = UI.MMinCell / UI.cellSize\r\n\r\nexport const canvas = {\r\n    width: 2500,\r\n    height: 1500\r\n}\r\n\r\n\r\n// Images\r\nexport const img = {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge,\r\n    FixationIcon\r\n}","import { createMuiTheme } from \"@material-ui/core\";\r\nimport Konva from \"konva\";\r\nimport { Stage } from \"konva/types/Stage\";\r\nimport { TBeam, TNode } from \"src/models/Truss\";\r\nimport { colors } from \"src/static\";\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark: \"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light: '#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\",\r\n            // light:\"#f0965d\"\r\n        },\r\n        background: {\r\n            default: 'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }\r\n\r\n    },\r\n    overrides: {\r\n        MuiTooltip: {\r\n            tooltip: {\r\n                fontSize: 14\r\n            }\r\n        },\r\n    }\r\n});\r\nexport const getNodeColor = (node: TNode): string => {\r\n\r\n    if (node.isStatic) {\r\n        if (node.fixation) return colors.fixedNode\r\n        return colors.staticNode\r\n    }\r\n    return colors.node\r\n}\r\nexport const getNodeStorkeColor = (node: TNode, mode: UIModes): string => {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return theme.palette.secondary.dark\r\n            return theme.palette.primary.light\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return theme.palette.primary.light\r\n        }\r\n        default:\r\n            return theme.palette.secondary.main\r\n    }\r\n}\r\nexport const getNodeStorkeWidth = (node: TNode, mode: UIModes): number => {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return 0\r\n            return 2\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return 2\r\n        }\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\nexport const getBeamColor = (beam: TBeam): string => {\r\n    return colors.beam\r\n}\r\n\r\n\r\nexport const nodeMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, node: TNode, mode: UIModes): void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break;\r\n        }\r\n\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            stage.container().style.cursor = 'crosshair'\r\n            break\r\n        }\r\n        case UIModes.move: {\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'move'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n}\r\nexport const nodeMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>): void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}\r\n\r\nexport const beamMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, beam: TBeam, mode: UIModes): void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break\r\n        }\r\n    }\r\n\r\n}\r\nexport const beamMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>): void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import TBeam from \"./TBeam\";\r\nimport TNode from \"./TNode\";\r\n\r\n\r\nexport interface ITEntity {\r\n    id?: string\r\n    coord?: ICoord\r\n    name?: string\r\n    dCoord?: ICoord\r\n    withNewPosition?: boolean\r\n}\r\n\r\nexport interface ITNode extends ITEntity {\r\n    beamsID?: string[]\r\n    forceX?: number\r\n    forceY?: number,\r\n    isStatic?: boolean,\r\n    fixation?: NodeFixation\r\n}\r\n\r\nexport interface ITBeam extends ITEntity {\r\n    startConnectedNode?: TNode\r\n    endConnectedNode?: TNode\r\n    endCoord?: ICoord\r\n    startForce?: number,\r\n    endForce?: number\r\n}\r\n\r\n\r\nexport interface ITruss {\r\n    nodes: Map<string, TNode>\r\n    beams: Map<string, TBeam>\r\n}\r\nexport interface ITrussArray {\r\n    nodes: TNode[]\r\n    beams: TBeam[]\r\n}\r\n\r\nexport interface ICoord {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport enum NodeFixation {\r\n    None = 0,\r\n    X = 1,\r\n    Y = 2,\r\n    XY = 3,\r\n    YX = XY\r\n}\r\n\r\nexport interface TrussCalcProps {\r\n    area?: number,\r\n    modUpr?: number,\r\n    zKoef?: number\r\n}\r\nexport type TrussCalcData = {\r\n    P: number[][][],\r\n    Vi: ICoord[],\r\n    LinkNodes: ICoord[],\r\n}\r\n\r\nexport interface IFixedNodeCreate extends ICoord {\r\n    fixation: NodeFixation\r\n}\r\nexport interface IStaticNodeCreate extends ICoord {\r\n    forceX?: number\r\n    forceY?: number\r\n}\r\nexport interface ISimpleNodeCreate extends ICoord {\r\n\r\n}","import { theme } from \"src/utils/UI\";\r\n\r\nexport const mainBackGround = \"#09B4D3\"\r\n\r\nexport const node = theme.palette.secondary.main\r\nexport const staticNode = theme.palette.secondary.dark\r\nexport const fixedNode = theme.palette.secondary.dark\r\n\r\nexport const beam = theme.palette.secondary.light","import { consts } from \"src/static\";\r\nimport * as MathJs from 'mathjs'\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1: number, y1: number, x2: number, y2: number): number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n\r\n    static lengthBePoints(x1: number, y1: number, x2: number, y2: number): number {\r\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x: number): number {\r\n        return Math.round(x / consts.UI.cellSize) * consts.UI.cellSize\r\n    }\r\n    static cellY(y: number): number {\r\n        return Math.round(y / consts.UI.cellSize) * consts.UI.cellSize\r\n    }\r\n    static signum(x: number) {\r\n        if (x > 0) return 1\r\n        else if (x < 0) return -1\r\n        else return 0\r\n    }\r\n    static multMatrxi(a: number[][], b: number[][]) {\r\n        const rowsA = a.length\r\n        const rowsB = b.length\r\n        const colsA = a[0].length\r\n        const colsB = b[0].length\r\n        const result: number[][] = []\r\n        if (colsA !== rowsB) throw new Error(\"Размерность матриц не позволяет переумножить их\")\r\n\r\n        for (let i = 0; i < rowsA; i++) {\r\n            const row: number[] = []\r\n            for (let j = 0; j < colsB; j++) {\r\n                row.push(0)\r\n            }\r\n            result.push(row)\r\n        }\r\n        for (let k = 0; k < colsB; k++) {\r\n            for (let i = 0; i < rowsA; i++) {\r\n                let sum = 0\r\n                for (let j = 0; j < rowsB; j++)\r\n                    sum += a[i][j] + b[j][k]\r\n                result[i][k] = sum\r\n            }\r\n        }\r\n        // console.log(result);\r\n        return result\r\n\r\n    }\r\n    static multMatrxiV2(a: number[][], b: number[][]) : number[][]{\r\n        let result: number[][] = []\r\n        try {\r\n            result = (MathJs.multiply(a,b) as number[][])\r\n            \r\n        } catch (error) {\r\n            console.error(\"multMatrxiV2:\", error);\r\n        }        \r\n        return result\r\n    }\r\n    static getDetMatrix(array:number[][]) : number{\r\n        const d = MathJs.det(array)        \r\n        return d\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    TRUSS_PAGE: '/app'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"20%\",\r\n\t\theight: '20%'\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({ classes }: WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={consts.img.bridgeIcon_2}\r\n\t\t\t\talt=\"logo\"\r\n\t\t\t\tclassName={classes.logo}\r\n\t\t\t/>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.str.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.str.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.TRUSS_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\twidth:'100%',\r\n\t\tminHeight:'100%',\r\n\t\tdisplay:'block',\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import Home from './home'\r\n\r\nexport default Home","import { action, computed, observable } from 'mobx';\r\nimport uuid from 'uuid';\r\nimport { ICoord, ITEntity } from './TTypes';\r\n\r\nabstract class TEntity {\r\n    private _id: string\r\n    public get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    @observable private _coord: ICoord\r\n    @computed public get coord(): ICoord {\r\n        return this._coord;\r\n    }\r\n\r\n    @observable private _name: string\r\n    @computed public get name(): string {\r\n        return this._name;\r\n    }\r\n    public set name(v: string) {\r\n        this._name = v;\r\n    }\r\n\r\n    @observable private _dCoord: ICoord\r\n    @computed public get dCoord(): ICoord {\r\n        return this._dCoord;\r\n    }\r\n    public set dCoord(v: ICoord) {\r\n        this._dCoord = v;\r\n    }\r\n\r\n    constructor({ coord, id, name, dCoord}: ITEntity = {}) {\r\n        this._id = id || uuid()\r\n        this._name = name || this._id\r\n        this._coord = coord || { x: 0, y: 0 }\r\n        this._dCoord = dCoord || { x: 0, y: 0 }\r\n    }\r\n\r\n    @action moveTo(x: number, y: number) {\r\n        this._coord.x = x\r\n        this._coord.y = y\r\n    }\r\n}\r\n\r\nexport default TEntity","import { action, computed, observable } from \"mobx\";\r\nimport { MyMath } from \"src/utils\";\r\nimport TEntity from \"./TEntity\";\r\nimport TNode from \"./TNode\";\r\nimport { ICoord, ITBeam } from \"./TTypes\";\r\n\r\nclass TBeam extends TEntity {\r\n    private _entity: TEntity\r\n\r\n    @observable private _startConnectedNode: TNode | null;\r\n    @computed public get startConnectedNode(): TNode | null {\r\n        return this._startConnectedNode;\r\n    }\r\n\r\n    @observable private _endConnectedNode: TNode | null;\r\n    @computed public get endConnectedNode(): TNode | null {\r\n        return this._endConnectedNode;\r\n    }\r\n    // Coord \r\n    @computed public get coord(): ICoord {\r\n        if (this._startConnectedNode) {\r\n            return this._startConnectedNode.coord\r\n        } else {\r\n            return this._entity.coord\r\n        }\r\n    }\r\n\r\n    @observable private _endCoord: ICoord;\r\n    @computed public get endCoord(): ICoord {\r\n        if (this._endConnectedNode) {\r\n            return this._endConnectedNode.coord\r\n        } else return this._endCoord\r\n    }\r\n\r\n    @computed public get dCoord(): ICoord {\r\n        if (this._startConnectedNode) {\r\n            return this._startConnectedNode.dCoord\r\n        } else return this._entity.dCoord\r\n    }\r\n\r\n    @computed public get dEndCoord(): ICoord {\r\n        if (this._endConnectedNode) {\r\n            return this._endConnectedNode.dCoord\r\n        } else return this._entity.dCoord\r\n    }\r\n    // # Coord \r\n\r\n\r\n    @observable private _startForce: number;\r\n    @computed public get startForce(): number {\r\n        return this._startForce;\r\n    }\r\n    public set startForce(v: number) {\r\n        this._startForce = v;\r\n    }\r\n\r\n\r\n    @observable private _endForce: number;\r\n    @computed public get endForce(): number {\r\n        return this._endForce;\r\n    }\r\n    public set endForce(v: number) {\r\n        this._endForce = v;\r\n    }\r\n\r\n    @computed public get name() {\r\n        if (this._startConnectedNode && this._endConnectedNode) {\r\n            const n1 = this._startConnectedNode.name\r\n            const n2 = this._endConnectedNode.name\r\n            if (n1 < n2) return `${n1} - ${n2}`\r\n            else return `${n2} - ${n1}`\r\n        } else return \"...\"\r\n    }\r\n\r\n    constructor(props: ITBeam = {}) {\r\n        super(props)\r\n        const { dCoord, startConnectedNode, endConnectedNode, coord, endCoord,  startForce, endForce } = props\r\n        this._entity = {\r\n            ...this,\r\n            coord: coord || { x: 0, y: 0 },\r\n            dCoord: dCoord || { x: 0, y: 0 }\r\n        }\r\n        this._startConnectedNode = startConnectedNode || null\r\n        this._endConnectedNode = endConnectedNode || null\r\n        this._endCoord = endCoord || this.coord\r\n        this._startForce = startForce || 0\r\n        this._endForce = endForce || 0\r\n\r\n    }\r\n\r\n    @action public connectStartNode(node: TNode) {\r\n        this._startConnectedNode = node\r\n    }\r\n    @action public connectEndNode(node: TNode) {\r\n        this._endConnectedNode = node\r\n    }\r\n    @action public removeStartNode() {\r\n        this._startConnectedNode = null\r\n    }\r\n    @action public removeEndNode() {\r\n        this._endConnectedNode = null\r\n    }\r\n    @action public moveTo(x: number, y: number) {\r\n        if (this._startConnectedNode) return\r\n        this.coord.x = x\r\n        this.coord.y = y\r\n    }\r\n    @action public moveEndTo(x: number, y: number) {\r\n        if (this._endConnectedNode) return\r\n        this._endCoord.x = x\r\n        this._endCoord.y = y\r\n    }\r\n    @computed public get length() {\r\n        const l = MyMath.lengthBePoints(this.coord.x, this.coord.y, this.endCoord.x, this.endCoord.y)\r\n        return Math.round(l)\r\n    }\r\n}\r\n\r\nexport default TBeam","import { MyMath } from \"src/utils\";\r\nimport { ICoord, TrussCalcData, TrussCalcProps } from \"./TTypes\";\r\n\r\nexport class TrussCalc {\r\n\r\n    private static farmCalcDebug = process.env.REACT_APP_FARM_CALC_DEBUG === \"true\" || true\r\n    static async init(NodeCoord: ICoord[], NodeV: ICoord[], Forces: number[], LinkNodes: ICoord[], LinkLength: number[], props: TrussCalcProps = {}): Promise<TrussCalcData> {\r\n\r\n        const area: number = props.area || 225 //Площадь стержней\r\n        const ModUpr: number = props.modUpr || 72000 // Модуль упругости \r\n\r\n        const Kmest: number[][][] = [] // Матрица жесткости\r\n        const Lambda0: ICoord[] = []\r\n        const Lambda: number[][][] = []\r\n        const Kobs: number[][][] = []\r\n        const IndexV: number[][] = []\r\n\r\n        let K: number[][] = []\r\n        let Va: number[] = []\r\n        let Vi: ICoord[] = []\r\n        let Vij: number[][][] = []\r\n        let V: number[][][] = []\r\n        let P: number[][][] = []\r\n\r\n        LinkNodes.forEach((beam, i) => {\r\n            Kmest.push(this.Kmest_i(area, ModUpr, LinkLength[i]))\r\n\r\n            const l_i = this.Lambda_i(NodeCoord[LinkNodes[i].x], NodeCoord[LinkNodes[i].y], LinkLength[i])\r\n            Lambda0.push(l_i)\r\n            Lambda.push([\r\n                [l_i.x, l_i.y, 0, 0],\r\n                [0, 0, l_i.x, l_i.y]\r\n            ])\r\n            Kobs.push(this.Kobs_i(area, ModUpr, LinkLength[i], Lambda0[i]))\r\n            IndexV.push(this.IndexV_i(NodeV[LinkNodes[i].x], NodeV[LinkNodes[i].y]))\r\n        })\r\n\r\n        const N_Link = LinkNodes.length\r\n        const N_Nodes = NodeV.length\r\n        const N_DOF = Math.max(...NodeV.map(({ x, y }) => Math.max(x, y)))\r\n\r\n        K = this.K(N_DOF, IndexV, Kobs)\r\n\r\n        if (MyMath.getDetMatrix(K) < 1000) throw Error(\"Данная конструкция (статически неопределимая) является механизмом\")\r\n\r\n        Va = this.SquareRoot(K, Forces)\r\n        Vi = this.Vi(NodeV, Va)\r\n        Vij = this.Vij(LinkNodes, Vi)\r\n\r\n        for (let i = 0; i < N_Link; i++) {\r\n            V.push(this.V_i(Lambda[i], Vij[i]))\r\n            P.push(this.P_i(Kmest[i], V[i]))\r\n        }\r\n\r\n        if (this.farmCalcDebug) {\r\n            console.log(\"NodeCoord, LinkNodes, NodeV\", NodeCoord, LinkNodes, NodeV);\r\n            console.log(\"Kobs, Kmest\", Kobs, Kmest);\r\n            console.log(\"Lambda0, Lambda,\", Lambda0, Lambda);\r\n            console.log(\"IndexV\", IndexV);\r\n            console.log(\"N_Link, N_Nodes, N_DOF\", N_Link, N_Nodes, N_DOF);\r\n            console.log(\"K, Force\", K, Forces);\r\n            console.log(\"Va\", Va);\r\n            console.log(\"Vi\", Vi);\r\n            console.log(\"Vij\", Vij);\r\n            console.log(\"V\", V);\r\n            console.log(\"P\", P);\r\n        }\r\n\r\n        return { P, LinkNodes, Vi }\r\n    }\r\n\r\n    private static Kmest_i(area: number, modUpr: number, length_i: number) {\r\n        const mnoz = (area * modUpr) / length_i\r\n        const result = []\r\n        result.push([mnoz, -mnoz])\r\n        result.push([-mnoz, mnoz])\r\n        return result\r\n    }\r\n    private static Lambda_i(nodeCoordOfX: ICoord, nodeCoordOfY: ICoord, length_i: number): ICoord {\r\n        const l_x = (nodeCoordOfY.x - nodeCoordOfX.x) / length_i\r\n        const l_y = (nodeCoordOfY.y - nodeCoordOfX.y) / -length_i\r\n        return { x: l_x, y: l_y }\r\n    }\r\n    private static Kobs_i(area: number, modUpr: number, length_i: number, l_i: ICoord) {\r\n        const mnoz = (area * modUpr) / length_i\r\n        const LTxL: ICoord[] = [{ x: l_i.x * l_i.x, y: l_i.x * l_i.y }, { x: l_i.x * l_i.y, y: l_i.y * l_i.y }]\r\n        const _LTxL: ICoord[] = [{ x: -l_i.x * l_i.x, y: -l_i.x * l_i.y }, { x: -l_i.x * l_i.y, y: -l_i.y * l_i.y }]\r\n        const augmnet1 = []\r\n        const augment2 = []\r\n        for (let i = 0; i < 2; i++) {\r\n            augmnet1.push({ x1: LTxL[i].x, y1: LTxL[i].y, x2: _LTxL[i].x, y2: _LTxL[i].y })\r\n            augment2.push({ x1: _LTxL[i].x, y1: _LTxL[i].y, x2: LTxL[i].x, y2: LTxL[i].y })\r\n        }\r\n        const stack: { x1: number, y1: number, x2: number, y2: number }[] = Array.prototype.concat(augmnet1, augment2)\r\n        const result = stack.map(({ x1, y1, x2, y2 }) => ([\r\n            x1 * mnoz,\r\n            y1 * mnoz,\r\n            x2 * mnoz,\r\n            y2 * mnoz\r\n        ]))\r\n        return result\r\n\r\n    }\r\n    private static IndexV_i(nodeV1: ICoord, nodeV2: ICoord): number[] {\r\n        return [\r\n            nodeV1.x,\r\n            nodeV1.y,\r\n            nodeV2.x,\r\n            nodeV2.y\r\n        ]\r\n    }\r\n    private static K(n_dof: number, indexV: number[][], k_obs: number[][][]) {\r\n        const K: number[][] = []\r\n\r\n        for (let t = 0; t < n_dof; t++) {\r\n            const row: number[] = []\r\n            for (let r = 0; r < n_dof; r++) {\r\n                row.push(0)\r\n            }\r\n            K.push(row)\r\n        }\r\n\r\n        for (let e = 0; e < indexV.length; e++) {\r\n            for (let i = 0; i < 4; i++) {\r\n                const A = indexV[e][i]\r\n                if (A !== 0)\r\n                    for (let j = 0; j < 4; j++) {\r\n                        const B = indexV[e][j]\r\n                        if (B !== 0)\r\n                            K[B - 1][A - 1] = K[B - 1][A - 1] + k_obs[e][i][j]\r\n                    }\r\n\r\n            }\r\n        }\r\n        return K\r\n    }\r\n    private static SquareRoot(_a: number[][], _b: number[]) {\r\n        if (_a.length !== _b.length) {\r\n            throw Error(\"SquareRoot - Массивы должны быть одинаковой длины\")\r\n        }\r\n\r\n        const n = _b.length\r\n        const a: number[][] = []\r\n        const b: number[] = []\r\n        const x: number[] = []\r\n        const d: number[] = []\r\n        const s: number[][] = []\r\n        const y: number[] = []\r\n\r\n        for (let i = 0; i < n + 1; i++) {\r\n            const row: number[] = []\r\n            for (let r = 0; r < n; r++) {\r\n                row.push(0)\r\n            }\r\n            s.push(row)\r\n            a.push(row)\r\n            b.push(0)\r\n            x.push(0)\r\n            d.push(0)\r\n            y.push(0)\r\n        }\r\n\r\n        for (let j = 1; j <= n; j++) {\r\n            for (let r = 0; r <= n; r++) {\r\n                a[j][r] = _a[j - 1][r - 1]\r\n            }\r\n            b[j] = _b[j - 1]\r\n        }\r\n\r\n        d[1] = MyMath.signum(a[1][1]);\r\n        s[1][1] = Math.sqrt(Math.abs(a[1][1]));\r\n        for (let j = 2; j <= n; j++) {\r\n            s[1][j] = a[1][j] / (s[1][1] * d[1]);\r\n        }\r\n\r\n        for (let i = 2; i <= n; i++) {\r\n            let sum = 0;\r\n            for (let k = 1; k <= i - 1; k++) {\r\n                sum += s[k][i] * s[k][i] * d[k];\r\n            }\r\n            d[i] = MyMath.signum(a[i][i] - sum);\r\n            s[i][i] = Math.sqrt(Math.abs(a[i][i] - sum));\r\n\r\n            const l = 1 / (s[i][i] * d[i]);\r\n            for (let j = i + 1; j <= n; j++) {\r\n                let SDSsum = 0;\r\n                for (let k = 1; k <= i - 1; k++) {\r\n                    SDSsum += s[k][i] * d[k] * s[k][j];\r\n                }\r\n                s[i][j] = l * (a[i][j] - SDSsum);\r\n            }\r\n        }\r\n\r\n        y[1] = b[1] / (s[1][1] * d[1]);\r\n\r\n        for (let i = 2; i <= n; i++) {\r\n            let sum = 0;\r\n\r\n            for (let j = 1; j <= i - 1; j++) {\r\n                sum += s[j][i] * d[j] * y[j];\r\n            }\r\n\r\n            y[i] = (b[i] - sum) / (s[i][i] * d[i]);\r\n        }\r\n\r\n        x[n] = y[n] / s[n][n];\r\n\r\n        for (let i = n - 1; i >= 1; i--) {\r\n            let sum = 0;\r\n\r\n            for (let k = i + 1; k <= n; k++) {\r\n                sum += s[i][k] * x[k];\r\n            }\r\n\r\n            x[i] = (y[i] - sum) / s[i][i];\r\n        }\r\n\r\n        const result: number[] = []\r\n        x.forEach((item, i) => {\r\n            if (i !== 0) result.push(item)\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    private static Vi(nodeV: ICoord[], Va: number[]) {\r\n        const vi: ICoord[] = []\r\n        for (let e = 0; e < nodeV.length; e++) {\r\n            const q: ICoord = { ...nodeV[e] }\r\n            q.x = q.x === 0 ? 0 : Va[q.x - 1]\r\n            q.y = q.y === 0 ? 0 : Va[q.y - 1]\r\n            vi.push(q)\r\n        }\r\n        return vi\r\n    }\r\n    private static Vij(linkNodes: ICoord[], vi: ICoord[]) {\r\n        const vij: number[][][] = []\r\n        for (let e = 0; e < linkNodes.length; e++) {\r\n            const n_start = linkNodes[e].x\r\n            const n_ends = linkNodes[e].y\r\n\r\n            vij.push([\r\n                [vi[n_start].x],\r\n                [vi[n_start].y],\r\n                [vi[n_ends].x],\r\n                [vi[n_ends].y],\r\n            ])\r\n        }\r\n        return vij\r\n    }\r\n    private static V_i(l: number[][], vij: number[][]) {\r\n        const v: number[][] = MyMath.multMatrxiV2(l, vij)\r\n        return v\r\n    }\r\n    private static P_i(k: number[][], v: number[][]) {\r\n        const p: number[][] = MyMath.multMatrxiV2(k, v)\r\n        return p\r\n    }\r\n}\r\nexport default TrussCalc","import TEntity from \"./TEntity\";\r\nimport { ITNode, NodeFixation } from \"./TTypes\";\r\nimport { observable, action, computed } from \"mobx\";\r\n\r\nclass TNode extends TEntity {\r\n    @observable private _beamsID: string[];\r\n    @computed public get beams(): string[] {\r\n        return this._beamsID;\r\n    }\r\n\r\n    private _forceX: number;\r\n    public get forceX(): number {\r\n        return this._forceX;\r\n    }\r\n    public set forceX(v: number) {\r\n        this._forceX = v\r\n    }\r\n\r\n    private _forceY: number;\r\n    public get forceY(): number {\r\n        return this._forceY;\r\n    }\r\n    public set forceY(v: number) {\r\n        this._forceY = v\r\n    }\r\n\r\n    private _isStatic: boolean;\r\n    public get isStatic(): boolean {\r\n        return this._isStatic;\r\n    }\r\n\r\n    private _fixation: NodeFixation;\r\n    public get fixation(): NodeFixation {\r\n        return this._fixation;\r\n    }\r\n\r\n\r\n    constructor(props: ITNode = {}) {\r\n        super(props)\r\n        const { beamsID, forceX, forceY, isStatic, fixation } = props\r\n        this._beamsID = beamsID || []\r\n        this._forceX = forceX || 0\r\n        this._forceY = forceY || 0\r\n        this._isStatic = isStatic || false\r\n        this._fixation = fixation || NodeFixation.None\r\n    }\r\n\r\n    @action public conncetBeam(id: string): boolean {\r\n        if (this._beamsID.find(b => b === id)) return false\r\n        this._beamsID.push(id)\r\n        return true\r\n    }\r\n\r\n    @action public removeBeam(id: string): boolean {\r\n        let res = false\r\n        this._beamsID = this._beamsID.filter(b => {\r\n            const flag = b !== id\r\n            if (!flag) res = true\r\n            return flag\r\n        })\r\n        return res\r\n    }\r\n}\r\n\r\nexport default TNode","import { action, computed, observable } from \"mobx\";\r\nimport { TEntity } from \".\";\r\nimport TBeam from \"./TBeam\";\r\nimport { TrussCalc } from './TCalc';\r\nimport TNode from \"./TNode\";\r\nimport { ICoord, ITBeam, ITNode, NodeFixation, TrussCalcData, TrussCalcProps } from \"./TTypes\";\r\n\r\nclass Truss {\r\n    @observable private _nodes: Map<typeof TNode.prototype.id, TNode>\r\n    @observable private _beams: Map<typeof TBeam.prototype.id, TBeam>\r\n    @observable private _calcData: TrussCalcData | undefined\r\n\r\n    @computed public get nodes() {\r\n        return this._nodes\r\n    }\r\n    @computed public get nodesArray() {\r\n        // return Array.from(this._nodes.values()).sort(this.sortByName)\r\n        return Array.from(this._nodes.values())\r\n    }\r\n    @computed public get beams() {\r\n        return this._beams\r\n    }\r\n    @computed public get beamsArray() {\r\n        // return Array.from(this._beams.values()).sort(this.sortByName)\r\n        return Array.from(this._beams.values())\r\n    }\r\n\r\n    @computed public get calcData() {\r\n        return this._calcData\r\n    }\r\n    constructor() {\r\n        this._nodes = new Map()\r\n        this._beams = new Map()\r\n\r\n        this.connectBeamToStartNode = this.connectBeamToStartNode.bind(this)\r\n    }\r\n    // Actions with Node\r\n    @action public addNode(props: ITNode = {}): TNode | void {\r\n        if (this._nodes.size > 12) throw new Error(\"Превышено число узлов\")\r\n        for (let n of this._nodes.values()) {\r\n            if (n.coord === props.coord) return // throw new Error(\"На данном месте уже стоит узел\")\r\n        }\r\n        const name = (this._nodes.size + 1) + \"\"\r\n        const node = new TNode({\r\n            ...props,\r\n            name\r\n        })\r\n        this._nodes.set(node.id, node)\r\n        return node\r\n    }\r\n    @action public moveNode(id: string, x: number, y: number): void {\r\n        const node = this._nodes.get(id)\r\n        if (!node) throw new Error(\"Не найден узел\")\r\n        if (node.isStatic || node.fixation !== NodeFixation.None) return //throw new Error(\"Данный узел нельзя перемещать\")\r\n        for (let n of this._nodes.values()) {\r\n            if (n.coord.x === x && n.coord.y === y) return\r\n        }\r\n        node.moveTo(x, y)\r\n    }\r\n    @action\r\n    public setNodes(nodes: typeof Truss.prototype.nodes) {\r\n        this._nodes = new Map(nodes)\r\n    }\r\n    @action\r\n    public sortNodesByCoord(_nodes: TNode[] = this.nodesArray) {\r\n        const nodes = _nodes.sort((a: TNode, b: TNode) => {\r\n            if (a.coord.y < b.coord.y) return -1\r\n            else if (a.coord.y === b.coord.y) if (a.coord.x < b.coord.x) return -1; else return 1\r\n            else return 1\r\n        })\r\n\r\n        nodes.forEach((n, i) => {\r\n            n.name = (i + 1).toString()\r\n        })\r\n    }\r\n\r\n    // Actions with Beam\r\n    @action\r\n    public addBeam(props: ITBeam = {}): TBeam {\r\n        if (this._beams.size > 36) throw new Error(\"Превышено число стержней\")\r\n        const beam = new TBeam(props)\r\n        this._beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n\r\n    @action\r\n    public moveEndBeamWhileDraving(id: string, x: number, y: number): void {\r\n        const beam = this._beams.get(id)\r\n        if (!beam) throw new Error(\"Не найден стержень\")\r\n        if (beam.endConnectedNode) throw new Error(\"Стержень нельзя переместить - он привязан к узлу\")\r\n        beam.moveEndTo(x, y)\r\n    }\r\n\r\n    @action\r\n    public connectBeamToStartNode(nodeID: string, beamID: string) {\r\n        const beam = this._beams.get(beamID)\r\n        const node = this._nodes.get(nodeID)\r\n        if (!beam || !node) throw new Error(\"Не найдены компоненты\")\r\n        beam.connectStartNode(node)\r\n        node.conncetBeam(beam.id)\r\n        return beam\r\n    }\r\n\r\n    @action\r\n    public connectBeamToEndNode(nodeID: string, beamID: string) {\r\n        const beam = this._beams.get(beamID)\r\n        const node = this._nodes.get(nodeID)\r\n        if (!beam || !node) throw new Error(\"Не найдены компоненты\")\r\n        for (let b of this._beams.values()) {\r\n            if (this._findOldBeamByNode(node, beam, b)) return // throw new Error(\"Нельзя присоединить\")\r\n        }\r\n        beam.connectEndNode(node)\r\n        node.conncetBeam(beam.id)\r\n        return beam\r\n    }\r\n\r\n    @action\r\n    public setBeams(beams: typeof Truss.prototype.beams) {\r\n        this._beams = new Map(beams)\r\n    }\r\n\r\n    private _findOldBeamByNode(node: TNode, beam: TBeam, checkingBeam: TBeam): boolean {\r\n        return (\r\n            (checkingBeam.startConnectedNode === beam.startConnectedNode && checkingBeam.endConnectedNode === node) ||\r\n            (checkingBeam.startConnectedNode === node && checkingBeam.endConnectedNode === beam.startConnectedNode) ||\r\n            (checkingBeam === beam && checkingBeam.startConnectedNode === node)\r\n        )\r\n    }\r\n\r\n\r\n    // Calculation\r\n    @action\r\n    public async calculate(props?: TrussCalcProps): Promise<true> {\r\n        const NodeCoord: ICoord[] = []\r\n        const NodeV: ICoord[] = []\r\n        const LinkNodes: ICoord[] = []\r\n        const Forces: number[] = []\r\n        const LinkLength: number[] = []\r\n\r\n        const { nodes, beams } = await this.updateBeforeCalc(\r\n            [...this.nodesArray],\r\n            [...this.beamsArray]\r\n        )\r\n\r\n        if (nodes.find(node => node.beams.length === 0 && node.isStatic)) throw new Error(\"Не все узлы соединены\")\r\n        let _nodeVindex = 0;\r\n        nodes.forEach((node, i) => {\r\n            NodeCoord.push({ ...node.coord })\r\n            switch (node.fixation) {\r\n                case NodeFixation.X: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: 0, y: _nodeVindex })\r\n                    Forces.push(-node.forceY)\r\n                    break;\r\n                }\r\n                case NodeFixation.Y: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: _nodeVindex, y: 0 })\r\n                    Forces.push(-node.forceX)\r\n                    break;\r\n                }\r\n                case NodeFixation.YX:\r\n                case NodeFixation.XY: {\r\n                    NodeV.push({ x: 0, y: 0 })\r\n                    break;\r\n                }\r\n                case NodeFixation.None: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: _nodeVindex, y: _nodeVindex + 1 })\r\n                    _nodeVindex++\r\n                    Forces.push(-node.forceX)\r\n                    Forces.push(-node.forceY)\r\n                    break;\r\n                }\r\n                default: break;\r\n            }\r\n        })\r\n        beams.forEach((beam, i) => {\r\n            const nums = beam.name.split(' - ')\r\n            LinkNodes.push({\r\n                x: Number(nums[0]) - 1,\r\n                y: Number(nums[1]) - 1\r\n            })\r\n            LinkLength.push(beam.length)\r\n        })\r\n\r\n        const data = await TrussCalc.init(NodeCoord, NodeV, Forces, LinkNodes, LinkLength, props)\r\n\r\n\r\n        await this.updateAfterCalc(nodes, beams, data)\r\n        return true\r\n    }\r\n\r\n    @action\r\n    public async updateBeforeCalc(nodes: TNode[] = this.nodesArray, beams: TBeam[] = this.beamsArray): Promise<{ nodes: TNode[], beams: TBeam[] }> {\r\n        this.sortNodesByCoord(nodes)\r\n        beams = beams.sort(this.sortByName)\r\n        return { nodes, beams }\r\n    }\r\n\r\n    @action\r\n    private async updateAfterCalc(nodes: TNode[], beams: TBeam[], data: TrussCalcData): Promise<{ nodes: TNode[], beams: TBeam[] }> {\r\n        this._calcData = data\r\n        const { P, Vi } = data\r\n\r\n        if (!Vi || !P) throw new Error(\"Нет расчетных данных\")\r\n\r\n        for (let n of this.nodes.values()) {\r\n            const coord: ICoord = { ...Vi[Number(n.name) - 1] }\r\n            n.dCoord = {\r\n                x: +coord.x.toFixed(4),\r\n                y: +coord.y.toFixed(4)\r\n            }\r\n        }\r\n        let i = 0\r\n        for (let b of this.beams.values()) {\r\n            b.startForce = Math.round(P[i][0][0])\r\n            b.endForce = Math.round(P[i][1][0])\r\n            i++\r\n        }\r\n        return { nodes, beams }\r\n\r\n    }\r\n    //Other Actions\r\n    @action\r\n    public delete(id: string) {\r\n        let entity: TBeam | TNode | undefined = undefined\r\n        if (this._beams.has(id)) entity = this._beams.get(id)\r\n        else if (this._nodes.has(id)) entity = this._nodes.get(id)\r\n\r\n        if (entity instanceof TNode) {\r\n            if (entity.isStatic) return // throw new Error(\"Нельзя удалить этот узел\")\r\n            const beamsOfNode = this.beamsArray.filter(item => (entity instanceof TNode && entity.beams.includes(item.id)))\r\n            beamsOfNode.forEach(beam => {\r\n                if (entity instanceof TNode) {\r\n                    let _node: TNode | undefined\r\n                    if (!beam.startConnectedNode || !beam.endConnectedNode) throw new Error()\r\n                    if (beam.startConnectedNode.id === entity.id)\r\n                        _node = this._nodes.get(beam.endConnectedNode.id)\r\n                    else _node = this._nodes.get(beam.startConnectedNode.id)\r\n                    if (_node) _node.removeBeam(beam.id)\r\n                    this._beams.delete(beam.id)\r\n                }\r\n            })\r\n            this._nodes.delete(entity.id)\r\n            // TODO: FARM_UPDATE\r\n            return true\r\n        } else if (entity instanceof TBeam) {\r\n            [entity.startConnectedNode, entity.endConnectedNode].forEach(node => {\r\n                node && entity && node.removeBeam(entity.id)\r\n            })\r\n            this._beams.delete(entity.id)\r\n        }\r\n    }\r\n    @action\r\n    public clear() {\r\n        this._beams.clear()\r\n        this._nodes.clear()\r\n    }\r\n    private sortByName = (a: TEntity, b: TEntity): number => {\r\n        if (a instanceof TBeam) {\r\n            const numsA = a.name.split(' - ')\r\n            const numA = Number(numsA[0] + numsA[1])\r\n            const numsB = b.name.split(' - ')\r\n            const numB = Number(numsB[0] + numsB[1])\r\n            return numA > numB ? 1 : -1\r\n        } else {\r\n            return a.name > b.name ? 1 : -1\r\n        }\r\n    }\r\n}\r\nexport default new Truss()","import { TNode, TBeam } from 'src/models/Truss';\r\nimport { IFixedNodeCreate, ISimpleNodeCreate, IStaticNodeCreate, ITruss, ITNode, ITBeam } from \"./TTypes\";\r\nimport { canvas, UI } from 'src/static/const';\r\n\r\n\r\nexport class TrussFactory {\r\n    static firstPlacement(_nodes: TNode[], _beams: TBeam[]) {\r\n        _nodes.forEach(node => {\r\n            const x = node.coord.x + Math.round((canvas.width / 3) / UI.cellSize) * UI.MMinCell\r\n            const y = node.coord.y + Math.round((canvas.height / 3) / UI.cellSize) * UI.MMinCell\r\n            node.moveTo(x, y)\r\n        })\r\n    }\r\n    static async parse(nodesJSON: string, beamsJSON: string): Promise<ITruss> {\r\n        const nodes: ITNode[] = await JSON.parse(nodesJSON)\r\n        const beams: ITBeam[] = await JSON.parse(beamsJSON)\r\n\r\n        const nodesMap: Map<string, TNode> = new Map()\r\n        const beamsMap: Map<string, TBeam> = new Map()\r\n\r\n        await nodes.forEach((n) => {\r\n            n.dCoord = { x: 0, y: 0 }\r\n            const node = new TNode(n)\r\n            nodesMap.set(node.id, node)\r\n        })\r\n        await beams.forEach(b => {\r\n            b.startForce = 0\r\n            b.endForce = 0\r\n            const beam: TBeam = new TBeam(b)\r\n            if (b.startConnectedNode && b.endConnectedNode) {\r\n                beam.connectStartNode(nodesMap.get(b.startConnectedNode.id) as TNode)\r\n                beam.connectEndNode(nodesMap.get(b.endConnectedNode.id) as TNode)\r\n            }\r\n            beamsMap.set(beam.id, beam)\r\n        })\r\n        return { nodes: nodesMap, beams: beamsMap }\r\n\r\n    }\r\n    static toString(truss: ITruss) {\r\n        const nodes = Array.from(truss.nodes.values())\r\n        const beams = Array.from(truss.beams.values())\r\n\r\n        const nodesJSON = JSON.stringify(nodes).replace(/_/g, '')\r\n        const beamsJSON = JSON.stringify(beams).replace(/_/g, '')\r\n\r\n        return { nodesJSON, beamsJSON }\r\n    }\r\n    static createNodes(\r\n        _fixedNodes: IFixedNodeCreate[] = [],\r\n        _staticNodes: IStaticNodeCreate[] = [],\r\n        _nodes: ISimpleNodeCreate[] = []\r\n    ): Map<string, TNode> {\r\n        const nodes: Map<string, TNode> = new Map()\r\n\r\n        _fixedNodes.forEach(n => {\r\n            const _n = new TNode({\r\n                coord: { x: n.x, y: n.y },\r\n                isStatic: true,\r\n                fixation: n.fixation\r\n            })\r\n            nodes.set(_n.id, _n)\r\n        })\r\n        _staticNodes.forEach(n => {\r\n            const _n = new TNode({\r\n                coord: { x: n.x, y: n.y },\r\n                isStatic: true,\r\n                forceX: n.forceX || 0,\r\n                forceY: n.forceY || 0,\r\n            })\r\n            nodes.set(_n.id, _n)\r\n        })\r\n        _nodes.forEach(n => {\r\n            const _n = new TNode({\r\n                coord: { x: n.x, y: n.y }\r\n            })\r\n            nodes.set(_n.id, _n)\r\n        })\r\n        return nodes\r\n    }\r\n}\r\n\r\nexport default TrussFactory","import { Box, createStyles, makeStyles, Paper, Table, TableBody, TableCell, TableHead, TableRow, Theme, Typography } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { TrussCalcData } from 'src/models/Truss/TTypes';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            overflowX: 'auto',\r\n            paddingTop: theme.spacing(2)\r\n        },\r\n        table: {\r\n            minWidth: 650,\r\n        },\r\n        tableBox: {\r\n            marginBottom: theme.spacing(2)\r\n        },\r\n        title: {\r\n            paddingTop: theme.spacing(2),\r\n            paddingLeft: theme.spacing(2)\r\n        },\r\n    }),\r\n);\r\n\r\ninterface Props extends TrussCalcData { }\r\n\r\n\r\nconst UICalcData: React.FC<Props> = observer((props) => {\r\n    const classes = useStyles();\r\n    const { Vi, P, LinkNodes } = props\r\n\r\n    const viewVi = (vi: typeof props.Vi) => {\r\n        const rows: string[][] = []\r\n        vi.forEach((n, i) => {\r\n            rows.push([\r\n                (i + 1).toString(),\r\n                n.x.toFixed(4),\r\n                n.y.toFixed(4)\r\n            ])\r\n        })\r\n        return viewTable(\"Перемещения узлов\", ['Узел', 'По оси X (мм)', 'По оси Y (мм)'], rows)\r\n    }\r\n    const viewP = (p: typeof props.P, beams: typeof props.LinkNodes) => {\r\n        const rows: string[][] = []\r\n        p.forEach((b, i) => {\r\n            rows.push([\r\n                `${beams[i].x + 1} - ${beams[i].y + 1}`,\r\n                b[0][0].toFixed(0),\r\n                b[1][0].toFixed(0)\r\n            ])\r\n        })\r\n        return viewTable(\"Усилия в стержнях\", ['Стержень', 'Сила в начале (H)', 'Сила в конце (H)'], rows)\r\n    }\r\n\r\n    const viewTable = (title: string, head: string[], rows: string[][]) => {\r\n        return <Paper className={classes.tableBox}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                {title}\r\n            </Typography>\r\n            <Table className={classes.table}>\r\n                {viewHead(head)}\r\n                <TableBody>\r\n                    {rows.map(row => viewBodyRow(row))}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            {viewP(P, LinkNodes)}\r\n            {viewVi(Vi)}\r\n        </Box>\r\n    );\r\n})\r\n\r\nconst viewHead = (cells: string[]) => {\r\n    return <TableHead>\r\n        <TableRow>\r\n            {cells.map(cell => (<TableCell key={cell}>{cell}</TableCell>))}\r\n        </TableRow>\r\n    </TableHead>\r\n}\r\nconst viewBodyRow = (cells: string[]) => {\r\n    return <TableRow >\r\n        {cells.map(cell => (<TableCell key={cell}>{cell}</TableCell>))}\r\n    </TableRow>\r\n}\r\n\r\nexport default UICalcData","import * as React from 'react'\r\nimport clsx from 'clsx'\r\nimport { Theme, createStyles, withStyles, AppBar, Toolbar } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { img } from 'src/static/const';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBarProps } from '@material-ui/core/AppBar';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n        marginRight: theme.spacing(4),\r\n        marginLeft: theme.spacing(2),\r\n        '& img': {\r\n            width: 50,\r\n            height: 'auto'\r\n        }\r\n    }\r\n})\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles>, React.HTMLAttributes<HTMLDivElement> {\r\n    color?: AppBarProps['color'],\r\n    position?: AppBarProps['position'],\r\n    withLogo?: boolean\r\n}\r\n\r\nconst UIAppBar: React.FC<UIToolBarProps> = ({ classes, children, className, color, position, withLogo = true }) => {\r\n    const viewLogo = () => {\r\n        if (withLogo) return ((\r\n            <Link\r\n                to={'/'}\r\n                className={classes.logo}\r\n            >\r\n                <img\r\n                    alt=\"Logo Icon\"\r\n                    src={img.bridgeIcon_2}\r\n                />\r\n            </Link>\r\n        ))\r\n    }\r\n    return (\r\n        <AppBar\r\n            position={position || 'fixed'}\r\n            className={clsx(classes.appBar, className)}\r\n            color={color || 'primary'}>\r\n            <Toolbar >\r\n                {viewLogo()}\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIAppBar)","import { Button, Fab, Tooltip } from '@material-ui/core';\r\nimport { ButtonProps } from '@material-ui/core/Button';\r\nimport * as React from 'react';\r\n\r\nexport interface BtnProps {\r\n    title?: string,\r\n    todo: string,\r\n    icon?: JSX.Element,\r\n    disabled?: boolean,\r\n    fab?: boolean,\r\n    onlyIcon?: boolean\r\n}\r\nexport const Btn: React.FC<BtnProps & ButtonProps & {\r\n    onClickToAction: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, todo: string) => void\r\n}> = (props) => {\r\n    const {\r\n        title = \"\",\r\n        icon = (<React.Fragment />),\r\n        disabled = false,\r\n        onClickToAction,\r\n        todo,\r\n        className,\r\n        fab = false,\r\n        size,\r\n        onlyIcon = false\r\n    } = props\r\n    if (fab) return (\r\n        <Tooltip title={title} >\r\n            <Fab\r\n\r\n\r\n                size={size}\r\n                color=\"secondary\"\r\n                onClick={(e) => onClickToAction(e, todo)}\r\n                disabled={disabled}\r\n                className={className}\r\n                style={{\r\n                    marginLeft: 5,\r\n                    marginRight: 5\r\n                }}>\r\n\r\n                {icon}\r\n            </Fab>\r\n\r\n        </Tooltip>\r\n    )\r\n    return (\r\n        <Tooltip title={title}>\r\n            <Button\r\n                size={size}\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={(e) => onClickToAction(e, todo)}\r\n                disabled={disabled}\r\n                className={className}\r\n                style={{\r\n                    marginLeft: 5,\r\n                    marginRight: 5\r\n                }}>\r\n                {icon}\r\n                {!onlyIcon && title}\r\n            </Button>\r\n\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default Btn","import { Button, ListItemIcon, MenuItem, MenuList, Paper, Popover } from '@material-ui/core';\r\nimport { ButtonProps } from '@material-ui/core/Button';\r\nimport * as React from 'react';\r\nimport { BtnProps } from './btn';\r\n\r\nexport interface MenuBtnProps {\r\n    title: string,\r\n    icon?: JSX.Element,\r\n    items: BtnProps[],\r\n}\r\n\r\nexport function MenuBtn(props: MenuBtnProps & ButtonProps & {\r\n    onClickToAction: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, todo: string) => void\r\n}) {\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    function handleClick(event: React.MouseEvent<HTMLElement>) {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    }\r\n\r\n\r\n    function handleItemClick(e: React.MouseEvent, a: string) {\r\n        props.onClickToAction(e as React.MouseEvent<HTMLButtonElement>, a)\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    function handleClose(e: React.MouseEvent) {\r\n\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const { items, title } = props\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? title : undefined;\r\n    return (\r\n        <div>\r\n            <Button\r\n                aria-describedby={id}\r\n                size={props.size}\r\n                aria-haspopup=\"menu\"\r\n                onClick={handleClick}\r\n                color=\"secondary\"\r\n                variant={props.variant || \"contained\"}\r\n                style={{\r\n                    marginLeft: 5,\r\n                    marginRight: 5,\r\n                }}\r\n            >{props.icon}  {props.title}</Button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n\r\n            >\r\n                <Paper onMouseLeave={handleClose}>\r\n                    <MenuList>\r\n                        {items.map(i => (\r\n                            <MenuItem onClick={(e) => handleItemClick(e, i.todo)} disabled={i.disabled}>\r\n                                {i.icon !== undefined && (<ListItemIcon>\r\n                                    {i.icon}\r\n                                </ListItemIcon>)}\r\n                                {i.title}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </MenuList>\r\n                </Paper>\r\n\r\n\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\nexport default MenuBtn","import { createStyles, Theme, Tooltip, withStyles } from '@material-ui/core';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButton } from '@material-ui/lab';\r\nimport { ToggleButtonProps } from '@material-ui/lab/ToggleButton';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport * as React from 'react';\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    btn: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        borderRadius: '50% !important',\r\n        border: `1px solid ${fade(theme.palette.action.active, 0.2)} !important`,\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.light,\r\n\r\n        '&$selected': {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            '@media (hover: none)': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            '&$disabled': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n        },\r\n    },\r\n    selected: {},\r\n})\r\n\r\nexport interface ToggleBtnProps extends WithStyles<typeof styles> {\r\n    selected: boolean,\r\n    value?: any,\r\n    name?: string,\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nconst MyToggleButton: React.FC<ToggleBtnProps & ToggleButtonProps> = ({ selected, classes, value, name, icon, ...other }) => {\r\n    return (\r\n        <ToggleButton\r\n            key={name}\r\n            value={value}\r\n            className={clsx(\r\n                classes.btn,\r\n                {\r\n                    [classes.selected]: selected,\r\n                }\r\n            )}\r\n            {...other}\r\n\r\n        >\r\n            <Tooltip title={name}>\r\n                {icon}\r\n            </Tooltip>\r\n        </ToggleButton>\r\n    )\r\n}\r\nexport const ToggleBtn = withStyles(styles)(MyToggleButton)\r\nexport default withStyles(styles)(MyToggleButton)","\r\nimport { AppBar, Box, Dialog, IconButton, Slide, Toolbar, Typography } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n\r\n        box: {\r\n            backgroundColor: theme.palette.grey[300],\r\n            width: \"100%\",\r\n            height: '100%',\r\n            padding: theme.spacing(4),\r\n            overflowX: 'auto'\r\n        },\r\n        appBar: {\r\n            position: 'relative',\r\n        },\r\n        title: {\r\n            marginLeft: theme.spacing(2),\r\n            flex: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nconst Transition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\ninterface Props {\r\n    title: string,\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    children?: React.ReactNode\r\n}\r\nexport default function FullScreenDialog({ children, open, handleClose, title }: Props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box className={classes.box}>\r\n                {children}\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip, Typography, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport { UI } from 'src/static/const';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: UI.sidebarWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(10),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    title:{\r\n        padding:theme.spacing(1)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface SidebarProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    title? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface SidebarState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\nconst localStr = \"Sidebar_state:\"\r\nclass Sidebar extends React.PureComponent<SidebarProps, SidebarState>{\r\n    constructor(props: SidebarProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: true,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    componentWillMount(){\r\n        if(this.props.title){\r\n            const localState = localStorage.getItem(localStr+this.props.title)\r\n            if(localState)\r\n            this.setState({open: localState === \"true\"})\r\n        }\r\n    }\r\n    switchDrawer() {\r\n        localStorage.setItem(localStr+this.props.title,(!this.state.open ? \"true\" : \"false\"))\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, title, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <Typography \r\n                        variant='body2'\r\n                        align=\"center\"\r\n                        className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider/>\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={title}\r\n                    open={title !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 15 : UI.sidebarWidth + 15 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 15 : UI.sidebarWidth + 15 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import { Box, createStyles, Divider, IconButton, Theme, Typography, withStyles } from '@material-ui/core';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { Sidebar } from 'src/components';\r\nimport { TBeam, TEntity, TNode } from 'src/models/Truss';\r\nimport { NodeFixation } from 'src/models/Truss/TTypes';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    btnGroup: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n})\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: TEntity,\r\n    onDelete?(entity: TEntity): void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\nconst TextRow = ({ text, className }: { text: string, className?: string }) => (\r\n    <React.Fragment>\r\n        <Typography variant=\"subtitle2\">\r\n            {text}\r\n        </Typography>\r\n        <Divider />\r\n    </React.Fragment>\r\n)\r\nconst TextRows = ({ text, className }: { text: string[], className?: string }) => {\r\n    if (text.length === 0) return (<React.Fragment />)\r\n    return (\r\n        <React.Fragment>\r\n            {text.map((str, i) => (\r\n                <Typography variant=\"subtitle2\" key={i}>\r\n                    {str}\r\n                </Typography>\r\n            ))}\r\n            <Divider />\r\n        </React.Fragment>\r\n    )\r\n}\r\n@observer\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    viewFixationInfo(node: TNode) {\r\n        switch (node.fixation) {\r\n            case NodeFixation.X: return (\r\n                <TextRow text={\"Фиксация по оси X\"} />\r\n            )\r\n            case NodeFixation.Y: return (\r\n                <TextRow text={\"Фиксация по оси Y\"} />\r\n            )\r\n            case NodeFixation.XY: return (\r\n                <TextRow text={\"Фиксация по осям Х и Y\"} />\r\n            )\r\n            default: return undefined\r\n        }\r\n    }\r\n    NodeInfo(node: TNode) {\r\n        const { classes, onDelete = () => { } } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Узел {node.name}\r\n                </Typography>\r\n                <TextRows text={[`X: ${node.coord.x} мм`, `Y: ${node.coord.y} мм`]} />\r\n                <TextRows text={[`ΔX: ${node.dCoord.x} мм`, `ΔY': ${node.dCoord.y} мм`]} />\r\n                {node.forceX !== 0 && (<TextRow text={`Сила по оси Х: ${node.forceX} H`} />)}\r\n                {node.forceY !== 0 && (<TextRow text={`Сила по оси Y: ${node.forceY} H`} />)}\r\n                {this.viewFixationInfo(node)}\r\n                <div className={classes.btnGroup}>\r\n                    <IconButton\r\n                        aria-label=\"Delete\"\r\n                        onClick={() => onDelete(node)}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </Box>\r\n        )\r\n    }\r\n    BeamInfo(beam: TBeam) {\r\n        const { classes, onDelete = () => { } } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Стержень {beam.name}\r\n                </Typography>\r\n                <TextRow text={`Длина: ${beam.length} мм`} />\r\n                <TextRows text={[`Усилия в стержне`, `В начале: ${beam.startForce} H`, `В конце: ${beam.endForce} H`]} />\r\n                <div className={classes.btnGroup}>\r\n                    <IconButton\r\n                        aria-label=\"Delete\"\r\n                        onClick={() => onDelete(beam)}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </Box>\r\n        )\r\n    }\r\n    viewInfo(entity: TEntity | undefined) {\r\n        if (entity instanceof TNode) return this.NodeInfo(entity)\r\n        else if (entity instanceof TBeam) return this.BeamInfo(entity)\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"right\"\r\n                title=\"Информация о выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon />)}\r\n            >\r\n                {this.viewInfo(entity)}\r\n                <Divider />\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","export const HEADER = {\r\n    CANVAS: {\r\n        CLEAR: \"header-canvas-clear\",\r\n        SAVE: \"header-canvas-save\"\r\n    },\r\n    CALC: {\r\n        DO: \"header-calc-do\",\r\n        RESULT: \"header-calc-result\"\r\n    }\r\n}\r\nexport const TOOLS = {\r\n    TRUSS: {\r\n        CALC: \"tools-truss-calc\"\r\n    }\r\n}","\r\nimport { Delete as DeleteIcon, DeleteForever as ClearIcon, MyLocation as AddNodeIcon, Power as ConnectIcon, SaveAlt as SaveIcon, Straighten as CalcIcon, ViewList as DataIcon, ZoomOutMap as MoveIcon } from '@material-ui/icons';\r\nimport * as React from 'react';\r\nimport { BtnProps } from 'src/components/Btns/btn';\r\nimport { MenuBtnProps } from 'src/components/Btns/menuBtn';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { IMode } from '../components/UIToolPanel';\r\nimport { HEADER, TOOLS } from './actionsList';\r\nconst canvasButtons: BtnProps[] = [\r\n    {\r\n        title: \"Сохранить в кэш\",\r\n        todo: HEADER.CANVAS.SAVE,\r\n        icon: (<SaveIcon />)\r\n    },\r\n    {\r\n        title: \"Очистить\",\r\n        todo: HEADER.CANVAS.CLEAR,\r\n        icon: (<ClearIcon />)\r\n    }\r\n]\r\nconst calcButtons: BtnProps[] = [\r\n    {\r\n        title: \"Рассчитать\",\r\n        todo: HEADER.CALC.DO,\r\n        icon: (<CalcIcon />)\r\n    },\r\n    {\r\n        title: \"Показать результат\",\r\n        todo: HEADER.CALC.RESULT,\r\n        icon: (<DataIcon />)\r\n    }\r\n]\r\nexport const headerMenu: MenuBtnProps[] = [\r\n    {\r\n        title: \"Холст\",\r\n        items: canvasButtons\r\n    },\r\n    {\r\n        title: \"Расчет\",\r\n        items: calcButtons\r\n    }\r\n]\r\n\r\nexport const toolsButtons: BtnProps[] = [\r\n\r\n    {\r\n        title: \"Расчет фермы\",\r\n        todo: TOOLS.TRUSS.CALC,\r\n        icon: (<CalcIcon />),\r\n        fab: true\r\n    }\r\n]\r\n\r\nexport const modsButtons: IMode[] = [\r\n    {\r\n        title: \"Перемещение\",\r\n        mod: UIModes.move,\r\n        icon: (<MoveIcon />)\r\n    },\r\n    {\r\n        title: \"Добавить узел\",\r\n        mod: UIModes.addNode,\r\n        icon: (<AddNodeIcon />)\r\n    },\r\n    {\r\n        title: \"Соединить узлы\",\r\n        mod: UIModes.addBeam,\r\n        icon: (<ConnectIcon />)\r\n    },\r\n    {\r\n        title: \"Удалить\",\r\n        mod: UIModes.delete,\r\n        icon: (<DeleteIcon />)\r\n    }\r\n]\r\n\r\n\r\nexport const actions = { HEADER, TOOLS };\r\n","import { Box, createStyles, Theme, WithStyles, withStyles } from '@material-ui/core';\r\nimport Konva from \"konva\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as React from 'react';\r\nimport KeyHandler from 'react-key-handler';\r\nimport { Stage } from \"react-konva\";\r\nimport Stats from 'react-stats';\r\nimport { DialogFull } from 'src/components';\r\nimport { TBeam, TEntity, TNode, Truss } from 'src/models/Truss';\r\nimport { UIEntityInfo, UITreePanel } from 'src/pages/Truss/components';\r\nimport { canvas } from 'src/static/const';\r\nimport { MyMath } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { UIHeader, UIStage, UIToolPanel } from '.';\r\nimport { actions } from '../actions';\r\nimport { TrussContainer } from '../TrussContainer';\r\nimport UICalcData from './UICalcData';\r\n\r\n\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\nexport interface UITrussProps extends WithStyles<typeof styles> {\r\n    farm: typeof Truss,\r\n    addNode: typeof TrussContainer.prototype.addNode,\r\n    addBeam: typeof TrussContainer.prototype.addBeam,\r\n    moveNode: typeof TrussContainer.prototype.moveNode,\r\n    moveEndBeam: typeof TrussContainer.prototype.moveEndBeam,\r\n    connectBeamToNode: typeof TrussContainer.prototype.connectBeamToNode,\r\n    deleteEntity: typeof TrussContainer.prototype.deleteEntity\r\n    clearTruss: typeof TrussContainer.prototype.clearTruss\r\n    cacheTruss: typeof TrussContainer.prototype.cacheTruss,\r\n    calculate: typeof TrussContainer.prototype.calculate\r\n    calculation: boolean,\r\n    calculated: boolean,\r\n}\r\n\r\nexport interface UITrussState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    uiMode: UIModes,\r\n    selectedEntityID: string,\r\n    paintEntity: TBeam | null,\r\n    openModal: string | null\r\n}\r\n@observer\r\nclass UITruss extends React.Component<UITrussProps, UITrussState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UITrussProps) {\r\n        super(props)\r\n        this.state = {\r\n            stageHeight: canvas.height,\r\n            stageWidth: canvas.width,\r\n            uiMode: UIModes.none,\r\n            selectedEntityID: \"\",\r\n            paintEntity: null,\r\n            openModal: null\r\n        }\r\n        this.UIonClick = this.UIonClick.bind(this)\r\n        this.UIonDrag = this.UIonDrag.bind(this)\r\n        this.UIonMouseMove = this.UIonMouseMove.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this.selectEntity = this.selectEntity.bind(this)\r\n        this.deleteEntity = this.deleteEntity.bind(this)\r\n        this.clearFarm = this.clearFarm.bind(this)\r\n        this.saveFarm = this.saveFarm.bind(this)\r\n        this.calculate = this.calculate.bind(this)\r\n        this.handleBtnClick = this.handleBtnClick.bind(this)\r\n        this.modalStateChange = this.modalStateChange.bind(this)\r\n        this.stage = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container: HTMLDivElement = stage.attrs.container.parentElement.parentElement\r\n            if (container) {\r\n                container.scrollTop = (container.scrollHeight - container.offsetHeight) / 2\r\n                container.scrollLeft = (container.scrollWidth - container.offsetWidth) / 2\r\n            }\r\n        }\r\n    }\r\n\r\n    UIonClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: TEntity) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const { calculation } = this.props\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n        if (e.evt.button === 0 && !calculation) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace && entity) this.selectEntity(entity.id)\r\n                    else this.selectEntity('')\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        this.props.addNode(cellX, cellY)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && entity instanceof TNode) {\r\n                        const beam = this.props.addBeam({\r\n                            coord: { ...entity.coord }\r\n                        })\r\n                        if (beam instanceof TBeam) {\r\n                            const connectedBeam = this.props.connectBeamToNode(entity, beam, 'start')\r\n                            if (connectedBeam instanceof TBeam) {\r\n                                this.setState({\r\n                                    paintEntity: connectedBeam,\r\n                                    uiMode: UIModes.addBeamStart\r\n                                })\r\n                            }\r\n                            else this.props.deleteEntity(beam.id)\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && entity instanceof TNode && paintEntity) {\r\n                        if (this.props.connectBeamToNode(entity, paintEntity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: null\r\n                            })\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this.deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            if (isEmptyPlace) this.setState({ selectedEntityID: \"\" })\r\n        }\r\n\r\n\r\n\r\n    }\r\n    UIonMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        const { uiMode, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if (e.target.getStage()) {\r\n                    if (paintEntity) {\r\n                        this.props.moveEndBeam(paintEntity, layerX, layerY)\r\n                    } else this.setState({ uiMode: UIModes.addBeam })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.delete: {\r\n                const stage: Stage & Konva.Stage = e.target.getStage()\r\n                if (stage === e.target) {\r\n                    stage.container().style.cursor = 'default'\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    UIonDrag(e: Konva.KonvaEventObject<DragEvent>, entity: TEntity) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        const { uiMode } = this.state\r\n        switch (uiMode) {\r\n            case UIModes.move: {\r\n                if (entity instanceof TNode) {\r\n                    if (e.evt.defaultPrevented) {\r\n                        const { layerX, layerY } = e.evt\r\n                        this.props.moveNode(entity, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this.deletePaintEntity()\r\n                this.setState({\r\n                    uiMode: 0\r\n                })\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    deletePaintEntity() {\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            paintEntity: null\r\n        })\r\n    }\r\n    deleteEntity(entity: TEntity) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (this.state.selectedEntityID && this.state.selectedEntityID === entity.id)\r\n            this.setState({\r\n                selectedEntityID: \"\"\r\n            })\r\n        this.props.deleteEntity(entity.id)\r\n    }\r\n    selectEntity(id: string) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (id) this.setState({ selectedEntityID: id })\r\n    }\r\n    clearFarm(): void {\r\n        if (window.confirm('Вы уверены, что хотите очистить холст?'))\r\n            this.props.clearTruss()\r\n    }\r\n    saveFarm(e?: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        if (window.confirm('Вы уверены, что хотите сохранить холст в кэш?'))\r\n            this.props.cacheTruss()\r\n    }\r\n    calculate(e?: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        this.props.calculate()\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n            paintEntity: null\r\n        })\r\n    }\r\n    handleBtnClick(e: React.MouseEvent<HTMLElement, MouseEvent>, a: string) {\r\n        switch (a) {\r\n            case actions.HEADER.CANVAS.CLEAR: {\r\n                this.clearFarm()\r\n                break;\r\n            }\r\n            case actions.HEADER.CANVAS.SAVE: {\r\n                this.saveFarm(e)\r\n                break;\r\n            }\r\n            case actions.TOOLS.TRUSS.CALC:\r\n            case actions.HEADER.CALC.DO: {\r\n                this.calculate(e)\r\n                break;\r\n            }\r\n            case actions.HEADER.CALC.RESULT: {\r\n                if (this.props.farm.calcData)\r\n                    this.modalStateChange(actions.HEADER.CALC.RESULT)\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    modalStateChange(s: string | null) {\r\n        this.setState({ openModal: s })\r\n    }\r\n    viewDialogs() {\r\n        if (this.props.farm.calcData) return (\r\n            <DialogFull\r\n                title=\"Результаты рассчетов\"\r\n                open={this.state.openModal === actions.HEADER.CALC.RESULT}\r\n                handleClose={() => this.modalStateChange(null)}>\r\n                <UICalcData {...this.props.farm.calcData} />\r\n            </DialogFull>\r\n        )\r\n\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, uiMode, selectedEntityID } = this.state\r\n        const { classes, farm, calculation, calculated } = this.props\r\n        const selectedEntity: TEntity | null = selectedEntityID ? farm.beams.get(selectedEntityID) || farm.nodes.get(selectedEntityID) || null : null\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Stats isActive={true} />\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIHeader\r\n                    disabled={{ [actions.HEADER.CALC.RESULT]: !Boolean(this.props.farm.calcData) }}\r\n                    onClick={this.handleBtnClick} />\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n                    <UITreePanel\r\n                        nodes={farm.nodesArray}\r\n                        beams={farm.beamsArray}\r\n                        selectedEntityID={selectedEntityID}\r\n                        onSelect={this.selectEntity}\r\n                    />\r\n                    <UIStage\r\n                        onClick={this.UIonClick}\r\n                        onDrag={this.UIonDrag}\r\n                        onMouseMove={this.UIonMouseMove}\r\n                        selectedEntity={selectedEntity}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        nodes={farm.nodesArray}\r\n                        beams={farm.beamsArray}\r\n                        stage={this.stage}\r\n                        uiMode={uiMode}\r\n                        viewNewPos={calculated}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={farm.nodes.get(selectedEntityID) || farm.beams.get(selectedEntityID)}\r\n                        onDelete={this.deleteEntity} />\r\n                </Box>\r\n                <UIToolPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)}\r\n                    onClick={this.handleBtnClick} />\r\n                {this.viewDialogs()}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UITruss)","import { createStyles, Fab, Icon, Theme, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport * as React from 'react';\r\nimport { AppBar } from 'src/components';\r\nimport { DisabledBtn, MenuBtn } from 'src/components/Btns';\r\nimport { headerMenu } from '../actions';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n\r\n    },\r\n    btnIcon: {\r\n        fontSize: 18,\r\n        marginTop: 3,\r\n        marginBottom: 3,\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    }\r\n})\r\n\r\nexport interface UIHeaderProps extends WithStyles<typeof styles> {\r\n    onClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, a: string) => void,\r\n    disabled?: DisabledBtn\r\n}\r\n\r\nconst UIHeader: React.FC<UIHeaderProps> = (\r\n    {\r\n        classes,\r\n        onClick = () => { },\r\n        disabled = {} as DisabledBtn\r\n    }) => {\r\n\r\n    return (\r\n        <AppBar className={classes.root} >\r\n            {headerMenu.map(m => {\r\n                m.items.forEach(b => {\r\n                    b.disabled = disabled[b.todo] === true\r\n                })\r\n                return (\r\n                    <MenuBtn {...m} onClickToAction={onClick} size={\"small\"} />\r\n                )\r\n            })}\r\n            <div className={classes.grow} />\r\n            <Fab\r\n                color=\"secondary\"\r\n                size=\"small\">\r\n                <Icon>priority_high</Icon>\r\n            </Fab>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIHeader)","import { createStyles, Paper, Theme, withStyles } from '@material-ui/core';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButtonGroup } from '@material-ui/lab';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport * as React from 'react';\r\nimport { ToggleBtn } from 'src/components/Btns';\r\nimport Btn from 'src/components/Btns/btn';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { modsButtons, toolsButtons } from '../actions';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        padding: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        left: \"50%\",\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: fade(theme.palette.primary.light, 0.4),\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light,\r\n        }\r\n    },\r\n    modsBtnGroup: {\r\n        borderRadius: 0,\r\n        backgroundColor: 'transparent',\r\n        verticalAlign: \"middle\"\r\n    },\r\n    vHr: {\r\n        display: \"inline-block\",\r\n        width: 2,\r\n        height: '100%',\r\n        minHeight: 48,\r\n        verticalAlign: \"middle\",\r\n        backgroundColor: theme.palette.secondary.light,\r\n        opacity: 0.5,\r\n        marginRight: 10\r\n    }\r\n})\r\n\r\n\r\nexport interface IMode {\r\n    title: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolPanelProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void,\r\n    onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>, a: string) => void\r\n}\r\n\r\nconst UIToolPanel: React.FC<UIToolPanelProps> = ({ onSelect, selected, classes, onClick = () => { } }) => {\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <ToggleButtonGroup\r\n                value={selected}\r\n                exclusive\r\n                onChange={(e, value) => onSelect(value)}\r\n                size=\"medium\"\r\n                className={classes.modsBtnGroup}\r\n            >\r\n                {modsButtons.map(item => (\r\n                    <ToggleBtn\r\n                        key={item.mod}\r\n                        value={item.mod}\r\n                        selected={item.mod === selected}\r\n                        icon={item.icon}\r\n                        name={item.title}\r\n                    />\r\n                ))}\r\n            </ToggleButtonGroup>\r\n            <div className={classes.vHr} />\r\n            {toolsButtons.map(b => (\r\n                <Btn {...b}\r\n                    onClickToAction={onClick}\r\n                    fab={b.fab}\r\n                    key={b.title}\r\n                    size=\"medium\" />\r\n            ))}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolPanel)","import { Badge, Box, Collapse, createStyles, Divider, List, ListItem, ListItemIcon, ListItemText, Theme, withStyles } from '@material-ui/core';\r\nimport { Brightness1 as CircleIcon, ExpandLess, ExpandMore, GpsNotFixed as NodeIcon, List as TreePanelIcon, Timeline as BeamIcon } from '@material-ui/icons';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { Sidebar } from 'src/components';\r\nimport { TBeam, TEntity, TNode } from 'src/models/Truss';\r\nimport { UI } from 'src/utils';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n        paddingLeft: theme.spacing(6)\r\n    },\r\n})\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes?: TNode[],\r\n    beams?: TBeam[]\r\n    selectedEntityID?: string\r\n    onSelect?(id: string): void\r\n}\r\n\r\ninterface TreeState {\r\n    tabs: Map<string, boolean>,\r\n    open: boolean,\r\n\r\n}\r\n\r\n@observer\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            tabs: new Map()\r\n        }\r\n        this.openTab = this.openTab.bind(this)\r\n        this.viewListItem = this.viewListItem.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        const { tabs } = this.state\r\n        tabs.set('Узлы', true)\r\n        tabs.set('Стержни', true)\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    openTab(tab: string): void {\r\n        const { tabs } = this.state\r\n        tabs.set(tab, !tabs.get(tab))\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    viewListItem(entityArray: TEntity[], title: string, icon?: JSX.Element) {\r\n        const {\r\n            selectedEntityID = \"\",\r\n            classes,\r\n            onSelect = () => { }\r\n        } = this.props\r\n        const { tabs } = this.state\r\n        return (\r\n            <Box>\r\n                <ListItem button onClick={() => this.openTab(title)}>\r\n                    {icon && (\r\n                        <ListItemIcon>\r\n                            <Badge badgeContent={entityArray.length} color=\"secondary\">\r\n                                {icon}\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                    )}\r\n                    <ListItemText primary={title} />\r\n                    {tabs.get(title) ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={tabs.get(title)} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {entityArray.map(item => (\r\n                            <ListItem\r\n                                button\r\n                                className={classes.nested}\r\n                                key={item.id}\r\n                                selected={selectedEntityID === item.id}\r\n                                onClick={(e) => onSelect(item.id)}\r\n                            >\r\n                                {(item instanceof TNode) && (\r\n                                    <ListItemIcon>\r\n                                        <CircleIcon style={{ color: UI.getNodeColor(item) }} />\r\n                                    </ListItemIcon>\r\n                                )}\r\n                                <ListItemText primary={item.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </Box>\r\n        )\r\n    }\r\n    render() {\r\n        const { nodes = [], beams = [] } = this.props\r\n        beams.sort((a: TBeam, b: TBeam) => {\r\n            return a.name > b.name ? 1 : -1\r\n        })\r\n        nodes.sort((a: TNode, b: TNode) => {\r\n            return a.name > b.name ? 1 : -1\r\n        })\r\n        return (\r\n            <Sidebar\r\n                anchor=\"left\"\r\n                title=\"Структура проекта\"\r\n                btnIcon={(<TreePanelIcon />)}\r\n            >\r\n\r\n                {this.viewListItem(nodes, 'Узлы', (<NodeIcon />))}\r\n                {this.viewListItem(beams, 'Стержни', (<BeamIcon />))}\r\n\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import Konva from 'konva';\r\nimport { observer } from \"mobx-react\";\r\nimport * as React from 'react';\r\nimport { Line } from 'react-konva';\r\nimport { TBeam } from 'src/models/Truss';\r\nimport { consts } from 'src/static';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst size = consts.UI.beamSize\r\ninterface UIBeamProps {\r\n    onClick?(e: Konva.KonvaEventObject<MouseEvent>, beam: TBeam): void\r\n    mode?: UIModes,\r\n    selected?: boolean,\r\n    beam: TBeam,\r\n    viewNewPos?: boolean\r\n}\r\nconst UIBeam: React.FC<UIBeamProps> = observer(({\r\n    onClick = () => { },\r\n    mode = UI.UIModes.none,\r\n    selected = false,\r\n    beam,\r\n    viewNewPos = false\r\n}) => {\r\n    let points: number[] = [\r\n        beam.coord.x / consts.UI.koefOnGrid,\r\n        beam.coord.y / consts.UI.koefOnGrid,\r\n        beam.endCoord.x / consts.UI.koefOnGrid,\r\n        beam.endCoord.y / consts.UI.koefOnGrid\r\n    ]\r\n    if (viewNewPos) {\r\n        points = [\r\n            (beam.coord.x + beam.dCoord.x * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid,\r\n            (beam.coord.y - beam.dCoord.y * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid,\r\n            (beam.endCoord.x + beam.dEndCoord.x * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid,\r\n            (beam.endCoord.y - beam.dEndCoord.y * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid\r\n        ]\r\n    }\r\n    return (\r\n        <Line\r\n            opacity={viewNewPos ? 0.3 : 1}\r\n            points={points}\r\n            stroke={UI.getBeamColor(beam)}\r\n            strokeWidth={size}\r\n            shadowBlur={selected && !viewNewPos ? 8 : 2}\r\n\r\n            hitStrokeWidth={viewNewPos ? 0 : size * 4}\r\n            onClick={viewNewPos ? () => { } : (e: any) => onClick(e, beam)}\r\n            onMouseEnter={viewNewPos ? () => { } : (e: any) => UI.beamMouseEnter(e, beam, mode)}\r\n            onMouseLeave={viewNewPos ? () => { } : (e: any) => UI.beamMouseLeave(e)}\r\n        />\r\n    )\r\n})\r\nexport default UIBeam","import * as React from 'react';\r\nimport { Line } from 'react-konva';\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst viewColumns = (widthCell: number, heightBox: number, countOfX: number) => {\r\n    const columns = []\r\n    for (let index = 0; index < countOfX; index++) {\r\n\r\n        columns.push(<Line\r\n            points={[\r\n                index * widthCell,\r\n                0,\r\n                index * widthCell,\r\n                heightBox,\r\n\r\n            ]}\r\n            stroke=\"#ddd\"\r\n            strokeWidth={1}\r\n            key={index}\r\n        />)\r\n\r\n    }\r\n    return columns\r\n}\r\nconst viewRows = (heightCell: number, widthBox: number, countOfY: number) => {\r\n    const rows = []\r\n    for (let index = 0; index < countOfY; index++) {\r\n        rows.push(<Line\r\n            points={[\r\n                0,\r\n                index * heightCell,\r\n                widthBox,\r\n                index * heightCell,\r\n\r\n            ]}\r\n            stroke=\"#ddd\"\r\n            strokeWidth={1}\r\n            key={index}\r\n        />)\r\n    }\r\n    return rows\r\n}\r\nconst UIGrid: React.FC<UIGridProps> = ({ heightBox, heightCell, widthBox, widthCell }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    console.log(\"UIGrid\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns(widthCell, heightBox, countOfX)}\r\n            {viewRows(heightCell, widthBox, countOfY)}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default React.memo(UIGrid)","import Konva from 'konva';\r\nimport { KonvaEventObject } from 'konva/types/Node';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { Arrow, Circle, Group, Line, Text } from 'react-konva';\r\nimport { TNode } from 'src/models/Truss';\r\nimport { consts } from 'src/static';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { NodeFixation } from 'src/models/Truss/TTypes';\r\n\r\nconst size = consts.UI.nodeSize\r\ninterface UINodeProps {\r\n    node: TNode,\r\n    drag?(e: Konva.KonvaEventObject<DragEvent>, node: TNode): void\r\n    onClick?(e: Konva.KonvaEventObject<MouseEvent>, node: TNode): void\r\n    mode?: UIModes,\r\n    selected?: boolean,\r\n    viewNewPos?: boolean\r\n}\r\n/*\r\nconst UINode: React.FC<UINodeProps> = observer(({\r\n    node,\r\n    onClick = () => { },\r\n    selected = false,\r\n    mode = UIModes.none,\r\n    drag = () => { },\r\n    viewNewPos = false\r\n}) => {\r\n\r\n    const viewForce = (value: number, angle: 0 | 90) => {\r\n        if (!viewNewPos) return (\r\n            <React.Fragment>\r\n                <Arrow\r\n                    points={[\r\n                        0,\r\n                        0,\r\n                        consts.UI.cellSize,\r\n                        0,\r\n                    ]}\r\n                    stroke={UI.theme.palette.grey[300]}\r\n                    strokeWidth={size / 3}\r\n                    shadowBlur={2}\r\n                    pointerLength={consts.UI.cellSize / 10}\r\n                    pointerWidth={consts.UI.cellSize / 10}\r\n                    hitStrokeWidth={size * 2}\r\n                    rotation={value > 0 ? angle : 180 + angle}\r\n                />\r\n                <Text\r\n                    x={angle === 0 ? (value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize) : consts.UI.cellSize / 3}\r\n                    y={angle === 90 ? (value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize / 2) : -consts.UI.cellSize / 1.5}\r\n                    text={value + \" H\"}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    const viewFixation = (angle: 0 | 90) => {\r\n        return (<Group\r\n            x={0}\r\n            y={0}\r\n            rotation={angle}\r\n        >\r\n            <Line\r\n                points={[\r\n                    0, 0,\r\n                    0, consts.UI.cellSize,\r\n                    -consts.UI.cellSize / 2, consts.UI.cellSize,\r\n                    consts.UI.cellSize / 2, consts.UI.cellSize,\r\n                ]}\r\n                stroke={UI.theme.palette.grey[300]}\r\n                strokeWidth={size / 4}\r\n                shadowBlur={2}\r\n            />\r\n            <Circle\r\n                radius={size / 2}\r\n                fill={UI.theme.palette.grey[500]}\r\n                x={0}\r\n                y={consts.UI.cellSize - (size / 1.7)}\r\n            />\r\n        </Group>)\r\n    }\r\n\r\n    if (viewNewPos) {\r\n        if (node.dCoord.x === 0 && node.dCoord.y === 0)\r\n            return <React.Fragment />\r\n    }\r\n\r\n    const x = node.coord.x / consts.UI.koefOnGrid\r\n    const y = node.coord.y / consts.UI.koefOnGrid\r\n\r\n    return (\r\n        <Group\r\n            opacity={viewNewPos ? 0.3 : 1}\r\n            x={x}\r\n            y={y}\r\n            _useStrictMode\r\n            onClick={viewNewPos ? () => { } : (e: any) => onClick(e, node)}\r\n        >\r\n            {node.forceX !== 0 && viewForce(node.forceX, 0)}\r\n            {node.forceY !== 0 && viewForce(node.forceY, 90)}\r\n            {node.fixation === NodeFixation.X && viewFixation(90)}\r\n            {node.fixation === NodeFixation.Y && viewFixation(0)}\r\n            {node.fixation === NodeFixation.XY && viewFixation(90)}\r\n            {node.fixation === NodeFixation.YX && viewFixation(0)}\r\n            <Circle\r\n                radius={size}\r\n                x={0}\r\n                y={0}\r\n                fill={UI.getNodeColor(node)}\r\n                shadowBlur={selected && !viewNewPos ? 8 : 2}\r\n                stroke={UI.getNodeStorkeColor(node, mode)}\r\n                strokeWidth={UI.getNodeStorkeWidth(node, mode)}\r\n                hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n            />\r\n            <Text\r\n                x={-size}\r\n                y={-size / 2 - 1}\r\n                align=\"center\"\r\n                fontSize={18}\r\n                fill=\"#fff\"\r\n                shadowBlur={8}\r\n                fontFamily='Trebuchet MS'\r\n                width={size * 2}\r\n                verticalAlign=\"middle\"\r\n                text={node.name}\r\n            />\r\n            <Circle\r\n                radius={size}\r\n                x={0}\r\n                y={0}\r\n                onDragEnd={(e: KonvaEventObject<DragEvent>) => {\r\n                    e.target.to({\r\n                        x: 0,\r\n                        y: 0,\r\n                    })\r\n                }}\r\n                hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n                draggable={mode === UIModes.move && !node.isStatic && !viewNewPos}\r\n                onMouseEnter={viewNewPos ? () => { } : (e: any) => UI.nodeMouseEnter(e, node, mode)}\r\n                onMouseLeave={viewNewPos ? () => { } : (e: any) => UI.nodeMouseLeave(e)}\r\n                onDragMove={(e: KonvaEventObject<DragEvent>) => drag(e, node)}\r\n            />\r\n        </Group>\r\n    )\r\n})\r\n*/\r\n\r\n\r\n@observer\r\nclass UINode extends React.Component<UINodeProps> {\r\n    constructor(props: UINodeProps) {\r\n        super(props)\r\n        this.viewForce = this.viewForce.bind(this)\r\n    }\r\n    viewForce = (value: number, angle: 0 | 90) => {\r\n        if (!this.props.viewNewPos) return (\r\n            <React.Fragment>\r\n                <Arrow\r\n                    points={[\r\n                        0,\r\n                        0,\r\n                        consts.UI.cellSize,\r\n                        0,\r\n                    ]}\r\n                    stroke={UI.theme.palette.grey[300]}\r\n                    strokeWidth={size / 3}\r\n                    shadowBlur={2}\r\n                    pointerLength={consts.UI.cellSize / 10}\r\n                    pointerWidth={consts.UI.cellSize / 10}\r\n                    hitStrokeWidth={size * 2}\r\n                    rotation={value > 0 ? angle : 180 + angle}\r\n                />\r\n                <Text\r\n                    x={angle === 0 ? (value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize) : consts.UI.cellSize / 3}\r\n                    y={angle === 90 ? (value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize / 2) : -consts.UI.cellSize / 1.5}\r\n                    text={value + \" H\"}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    viewFixation = (angle: 0 | 90) => {\r\n        return (<Group\r\n            x={0}\r\n            y={0}\r\n            rotation={angle}\r\n        >\r\n            <Line\r\n                points={[\r\n                    0, 0,\r\n                    0, consts.UI.cellSize,\r\n                    -consts.UI.cellSize / 2, consts.UI.cellSize,\r\n                    consts.UI.cellSize / 2, consts.UI.cellSize,\r\n                ]}\r\n                stroke={UI.theme.palette.grey[300]}\r\n                strokeWidth={size / 4}\r\n                shadowBlur={2}\r\n            />\r\n            <Circle\r\n                radius={size / 2}\r\n                fill={UI.theme.palette.grey[500]}\r\n                x={0}\r\n                y={consts.UI.cellSize - (size / 1.7)}\r\n            />\r\n        </Group>)\r\n    }\r\n    render() {\r\n        const {\r\n            node,\r\n            viewNewPos = false,\r\n            onClick = () => { },\r\n            selected = false,\r\n            mode = UIModes.none,\r\n            drag = () => { }\r\n        } = this.props\r\n\r\n\r\n        let x = node.coord.x / consts.UI.koefOnGrid\r\n        let y = node.coord.y / consts.UI.koefOnGrid\r\n\r\n        if (viewNewPos) {\r\n            if (node.dCoord.x === 0 && node.dCoord.y === 0) return <React.Fragment />\r\n            x = (node.coord.x + node.dCoord.x * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid\r\n            y = (node.coord.y - node.dCoord.y * consts.UI.koefOfNewPos) / consts.UI.koefOnGrid\r\n\r\n        }\r\n\r\n\r\n        return (\r\n            <Group\r\n                opacity={viewNewPos ? 0.3 : 1}\r\n                x={x}\r\n                y={y}\r\n                _useStrictMode\r\n                onClick={viewNewPos ? () => { } : (e: any) => onClick(e, node)}\r\n            >\r\n                {node.forceX !== 0 && this.viewForce(node.forceX, 0)}\r\n                {node.forceY !== 0 && this.viewForce(node.forceY, 90)}\r\n                {node.fixation === NodeFixation.X && this.viewFixation(90)}\r\n                {node.fixation === NodeFixation.Y && this.viewFixation(0)}\r\n                {node.fixation === NodeFixation.XY && this.viewFixation(90)}\r\n                {node.fixation === NodeFixation.YX && this.viewFixation(0)}\r\n                <Circle\r\n                    radius={size}\r\n                    x={0}\r\n                    y={0}\r\n                    fill={UI.getNodeColor(node)}\r\n                    shadowBlur={selected && !viewNewPos ? 8 : 2}\r\n                    stroke={UI.getNodeStorkeColor(node, mode)}\r\n                    strokeWidth={viewNewPos ? 0 : UI.getNodeStorkeWidth(node, mode)}\r\n                    hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n                />\r\n                <Text\r\n                    x={-size}\r\n                    y={-size / 2 - 1}\r\n                    align=\"center\"\r\n                    fontSize={18}\r\n                    fill=\"#fff\"\r\n                    shadowBlur={8}\r\n                    fontFamily='Trebuchet MS'\r\n                    width={size * 2}\r\n                    verticalAlign=\"middle\"\r\n                    text={node.name}\r\n                />\r\n                <Circle\r\n                    radius={size}\r\n                    x={0}\r\n                    y={0}\r\n                    onDragEnd={(e: KonvaEventObject<DragEvent>) => {\r\n                        e.target.to({\r\n                            x: 0,\r\n                            y: 0,\r\n                        })\r\n                    }}\r\n                    hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n                    draggable={mode === UIModes.move && !node.isStatic && !viewNewPos}\r\n                    onMouseEnter={viewNewPos ? () => { } : (e: any) => UI.nodeMouseEnter(e, node, mode)}\r\n                    onMouseLeave={viewNewPos ? () => { } : (e: any) => UI.nodeMouseLeave(e)}\r\n                    onDragMove={(e: KonvaEventObject<DragEvent>) => drag(e, node)}\r\n                />\r\n            </Group>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Box } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\nimport ScrollBar from 'react-custom-scrollbars';\r\nimport { UIBeam, UINode } from '..';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { ITrussArray } from 'src/models/Truss/TTypes';\r\nimport { TEntity } from 'src/models/Truss';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: \"#ddd\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: 8,\r\n    }\r\n})\r\n\r\nexport interface UIStageProps extends ITrussArray, WithStyles<typeof styles> {\r\n    uiMode: UIModes,\r\n    selectedEntity: TEntity | null,\r\n    stageHeight: number,\r\n    stageWidth: number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: TEntity): void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent | TouchEvent>): void,\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: TEntity): void,\r\n    stage: React.RefObject<Stage & Konva.Stage>,\r\n    viewNewPos: boolean,\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = (observer(({ classes, stage, stageHeight, stageWidth, onClick, onMouseMove, onDrag, beams, nodes, uiMode, selectedEntity, viewNewPos }) => {\r\n    return (\r\n        <ScrollBar\r\n            autoHide>\r\n            <Box style={{ width: stageWidth + consts.UI.sidebarWidth * 2 + 20, height: stageHeight + consts.UI.sidebarWidth }}\r\n                className={classes.root}>\r\n                <Stage\r\n                    height={stageHeight}\r\n                    width={stageWidth}\r\n                    style={{ height: stageHeight, width: stageWidth }}\r\n                    className={classes.stage}\r\n                    onClick={onClick}\r\n                    onMouseMove={onMouseMove}\r\n                    ref={stage}\r\n                >\r\n\r\n                    <Layer className=\"layer\" >\r\n\r\n                        <UIGrid\r\n                            heightCell={consts.UI.cellSize}\r\n                            widthCell={consts.UI.cellSize}\r\n                            heightBox={stageHeight}\r\n                            widthBox={stageWidth}\r\n                        />\r\n\r\n                        {beams.map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === beam}\r\n                            />\r\n                        ))}\r\n\r\n                        {nodes.map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={onDrag}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === node}\r\n                            />\r\n                        ))}\r\n\r\n                        {viewNewPos && beams.map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === beam}\r\n                                viewNewPos={true}\r\n                            />\r\n                        ))}\r\n                        {viewNewPos && nodes.map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={onDrag}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === node}\r\n                                viewNewPos={true}\r\n                            />\r\n                        ))}\r\n                    </Layer>\r\n                </Stage>\r\n            </Box>\r\n\r\n        </ScrollBar>\r\n\r\n\r\n\r\n    )\r\n}))\r\n\r\nexport default withStyles(styles)(UIStage)","import { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { TBeam, TNode, Truss as farm } from 'src/models/Truss';\r\nimport TrussFactory from 'src/models/Truss/TFactory';\r\nimport { ITBeam, ITNode, NodeFixation, TrussCalcProps } from 'src/models/Truss/TTypes';\r\nimport { consts } from 'src/static';\r\nimport { UIFarm } from './components';\r\n\r\ninterface State {\r\n    calculation: boolean,\r\n    calculated: boolean,\r\n    loadFromCache: boolean\r\n}\r\ninterface Props {\r\n\r\n}\r\n@observer\r\nexport class TrussContainer extends React.Component<Props, State>  {\r\n    private nodesCacheName = \"nodes:array\"\r\n    private beamsCacheName = \"beams:array\"\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            calculation: false,\r\n            calculated: false,\r\n            loadFromCache: false\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        if (localStorage.getItem(this.nodesCacheName) && localStorage.getItem(this.beamsCacheName))\r\n            this.setState({ loadFromCache: true })\r\n    }\r\n    componentDidMount() {\r\n        this.setDefaultTruss()\r\n    }\r\n\r\n    // Node\r\n    addNode = (x: number, y: number, options?: ITNode) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            return farm.addNode({\r\n                ...options,\r\n                coord: {\r\n                    x: x * consts.UI.koefOnGrid,\r\n                    y: y * consts.UI.koefOnGrid\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.error(\"addNode\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    moveNode = (_node: TNode, _x: number, _y: number) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            const x = _x * consts.UI.koefOnGrid\r\n            const y = _y * consts.UI.koefOnGrid\r\n            farm.moveNode(_node.id, x, y)\r\n        } catch (e) {\r\n            console.error(\"moveNode\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    // Beam\r\n    addBeam = (options?: ITBeam) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            return farm.addBeam(options)\r\n        } catch (e) {\r\n            console.error(\"addBeam\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    moveEndBeam = (_beam: TBeam, _x: number, _y: number) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            const x = _x * consts.UI.koefOnGrid\r\n            const y = _y * consts.UI.koefOnGrid\r\n            return farm.moveEndBeamWhileDraving(_beam.id, x, y)\r\n        } catch (e) {\r\n            console.error(\"moveEndBeam\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    connectBeamToNode = (_node: TNode, _beam: TBeam, place: 'start' | 'end') => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            switch (place) {\r\n                case 'start': {\r\n                    return farm.connectBeamToStartNode(_node.id, _beam.id)\r\n                }\r\n                case 'end': {\r\n                    return farm.connectBeamToEndNode(_node.id, _beam.id)\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            console.error(\"connectBeamToNode\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    // Generals actions\r\n    deleteEntity = (id: string) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            farm.delete(id)\r\n        } catch (e) {\r\n            console.error(\"deleteEntity\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    // Calculate\r\n    calculate = async (props?: TrussCalcProps) => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            this.setState({ calculation: true })\r\n            console.log(\"Calculate\");\r\n            await farm.calculate()\r\n            this.setState({ calculated: true, calculation: false })\r\n\r\n        } catch (e) {\r\n            console.error(\"calculate\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n\r\n            this.setState({ calculated: false, calculation: false })\r\n        }\r\n    }\r\n\r\n    setDefaultTruss = () => {\r\n        if (this.state.calculated) this.setState({ calculated: false })\r\n        try {\r\n            console.log(\"setDefaultTruss\");\r\n\r\n            if (this.state.loadFromCache) {\r\n                this.loadTrussFromCache()\r\n            } else {\r\n                const _truss = genTruss()\r\n                farm.setNodes(_truss)\r\n                farm.sortNodesByCoord()\r\n                TrussFactory.firstPlacement(farm.nodesArray, farm.beamsArray)\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(\"setDefaultTruss\", e);\r\n            if (e.message) alert(e.message)\r\n            else alert(e)\r\n        }\r\n    }\r\n    cacheTruss = () => {\r\n        const { beamsJSON, nodesJSON } = TrussFactory.toString(farm)\r\n        localStorage.setItem(this.nodesCacheName, nodesJSON)\r\n        localStorage.setItem(this.beamsCacheName, beamsJSON)\r\n    }\r\n\r\n    loadTrussFromCache = async () => {\r\n        const nodesJSON = localStorage.getItem(this.nodesCacheName)\r\n        const beamsJSON = localStorage.getItem(this.beamsCacheName)\r\n        if (nodesJSON && beamsJSON) {\r\n            const { nodes, beams } = await TrussFactory.parse(nodesJSON, beamsJSON)\r\n            farm.setNodes(nodes)\r\n            farm.setBeams(beams)\r\n        }\r\n    }\r\n    clearTruss = async () => {\r\n        await this.setState({ loadFromCache: false })\r\n        localStorage.removeItem(this.nodesCacheName)\r\n        localStorage.removeItem(this.beamsCacheName)\r\n        await farm.clear()\r\n        this.setDefaultTruss()\r\n    }\r\n    render() {\r\n        return (\r\n            <UIFarm\r\n                {...this.state}\r\n                {...this}\r\n                farm={farm}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst genTruss = () => {\r\n    return TrussFactory.createNodes(\r\n        [\r\n            {\r\n                x: 0,\r\n                y: 1000,\r\n                fixation: NodeFixation.XY,\r\n            },\r\n            {\r\n                x: 3000,\r\n                y: 1000,\r\n                fixation: NodeFixation.Y,\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                x: 1000,\r\n                y: 1000,\r\n                forceY: 9000\r\n            }\r\n        ],\r\n        [\r\n            // {\r\n            //     x: 1000,\r\n            //     y: 1000\r\n            // }, {\r\n            //     x: 700,\r\n            //     y: 700\r\n            // }, {\r\n            //     x: 1000,\r\n            //     y: 700\r\n            // }\r\n        ]\r\n    )\r\n}\r\n\r\nexport default TrussContainer","import TrussContainer from './TrussContainer'\r\n\r\nexport default TrussContainer","import * as React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Helment from 'react-helmet'\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { Home, TrussPage } from './pages'\r\nimport { navPath } from './navigation'\r\nimport { str, img } from './static/const';\r\nimport { theme } from './utils/UI';\r\ninterface IAppProps { }\r\n\r\nclass App extends React.Component<IAppProps> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helment\r\n\t\t\t\t\thtmlAttributes={{ \"leng\": \"en\" }}\r\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\r\n\t\t\t\t\tdefaultTitle={str.title}\r\n\t\t\t\t\tlink={[\r\n\t\t\t\t\t\t{ \"rel\": \"shortcut icon\", \"href\": img.bridgeIcon_2 },\r\n\t\t\t\t\t\t{ \"rel\": \"image_src\", \"href\": img.airBridge },\r\n\t\t\t\t\t\t{ \"rel\": \"stylesheet\", \"href\": 'https://fonts.googleapis.com/css?family=Roboto:300,400,500' },\r\n\t\t\t\t\t\t{ \"rel\": \"stylesheet\", \"href\": 'https://fonts.googleapis.com/icon?family=Material+Icons' }\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tmeta={[\r\n\t\t\t\t\t\t{ \"charSet\": \"utf-8\" },\r\n\t\t\t\t\t\t{ \"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\r\n\t\t\t\t\t\t{ \"name\": \"theme-color\", \"content\": \"#000000\" },\r\n\t\t\t\t\t\t{ \"name\": \"description\", \"content\": str.description },\r\n\t\t\t\t\t\t{ \"property\": \"og:type\", \"content\": \"website\" },\r\n\t\t\t\t\t\t{ \"property\": \"og:title\", \"content\": str.title },\r\n\t\t\t\t\t\t{ \"property\": \"og:image\", \"content\": img.airBridge },\r\n\t\t\t\t\t\t{ \"property\": \"vk:image\", \"content\": img.airBridge },\r\n\t\t\t\t\t\t{ \"property\": \"twitter:image\", \"content\": img.airBridge },\r\n\t\t\t\t\t\t{ \"property\": \"og:url\", \"content\": str.url },\r\n\t\t\t\t\t]}\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\r\n\t\t\t\t\t\t<Route path={navPath.TRUSS_PAGE} component={TrussPage} />\r\n\t\t\t\t\t</Switch>\r\n\r\n\t\t\t\t</ThemeProvider>\r\n\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { history } from './utils';\r\nimport { HashRouter, Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst isGitHubPages = process.env.REACT_APP_GHP === 'true' || false;\r\n\r\nconst Root = () => {    \r\n    if (isGitHubPages) return (\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    )\r\n    else return (\r\n        <Router history={history}>\r\n            <App />\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nReactDOM.render(    \r\n    <Root/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}