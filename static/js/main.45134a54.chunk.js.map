{"version":3,"sources":["pages/Farm/components/UIToolBar.tsx","utils/history.ts","utils/math.ts","models/Farm/ModelEntity.ts","models/Farm/ModelNode.ts","models/Farm/ModelBeam.ts","models/Farm/ModelFarm.ts","pages/Farm/farmReducer.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Farm/farmTypes.ts","pages/Home/homeTypes.ts","theme.ts","pages/Farm/components/UIFarmEntities/UINode.tsx","pages/Farm/components/UIFarmEntities/UIBeam.tsx","pages/Farm/components/UIFarmEntities/UIGrid.tsx","pages/Farm/components/UIFarmEntities/UIStage.tsx","pages/Farm/components/UITreePanel.tsx","pages/Farm/components/UIEntityInfo.tsx","pages/Farm/components/UIDrawer.tsx","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","static/const.ts","static/ogImage.png","static/icon.png","static/bridge.png","static/airBridge.png"],"names":["UIModes","createBrowserHistory","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","UI_cellSize","y","Entity","props","Object","classCallCheck","this","id","angle","name","newX","newY","Date","now","Node","_Entity","_this","possibleConstructorReturn","getPrototypeOf","call","beamsID","forcesID","inherits","createClass","key","value","beamID","find","push","filter","forceID","Beam","length","startConnectedNodeID","endConnectedNodeID","newAngle","nodeID","place","cos","sin","endX","getEndX","endY","getEndY","angleBePoints","lengthBePoints","Farm","_farm","fixedNodes","forces","nodes","beams","time","Map","arguments","undefined","getNodes","item","node","set","beam","delete","get","Error","concat","force","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getNode","map","getForce","_this2","getBeam","_beam","_node","connectNode","connectBeam","getBeamsOnNode","moveEndPoint","entity","_this3","forEach","removeBeam","deleteBeam","deleteNode","_entity","deleteEntity","_this4","moveStartPoint","defaultFarmState","workSpace","defaultHomeState","title","mainReducer","combineReducers","farm","state","action","type","home","objectSpread","createStore","withStyles","theme","createStyles","appBar","zIndex","drawer","modsBtnGroup","marginLeft","spacing","marginRight","_ref","onSelect","selected","classes","mods","mod","move","icon","react","ZoomOutMap","addNode","MyLocation","addBeam","Power","Delete","AppBar","position","className","color","Toolbar","ToggleButtonGroup","exclusive","onChange","e","size","ToggleButton","Tooltip","createMuiTheme","palette","primary","dark","main","light","secondary","background","default","UINode","drag","mode","onClick","UI_nodeSize","ReactKonva","radius","fill","shadowBlur","stroke","addBeamStart","getStorkeColor","strokeWidth","getStorkeWidth","draggable","_useStrictMode","onDragMove","_onClick","_x","apply","toString","onMouseEnter","stage","target","getStage","none","container","style","cursor","hundleMouseEnter","onMouseLeave","hundleMouseLeave","UIBeam","UI_beamSize","points","UIGrid","widthCell","heightCell","heightBox","widthBox","countOfX","countOfY","columns","index","viewColumns","rows","viewRows","backgroundColor","flexGrow","stageHeight","stageWidth","onMouseMove","onDrag","uiMode","selectedEntity","height","width","ref","UIFarmEntities_UIGrid","getBeams","UIFarmEntities_UIBeam","UIFarmEntities_UINode","UITreePanel","open","openedNodes","openedBeams","switchTab","bind","assertThisInitialized","tab","setState","_this$props","_this$state","openTab","components_UIDrawer","anchor","btnTitle","btnIcon","esm_List","List","ListItem","button","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","disablePadding","nested","Divider","React","UIEntityInfo","onDelete","Card","CardContent","Typography","gutterBottom","getTypeStr","variant","CardActions","disableSpacing","IconButton","aria-label","Info","viewCard","fontSize","pos","marginBottom","UIDrawer","viewTooltip","switchDrawer","flag","children","btnTitile","Drawer","paper","drawerPaper","toolbar","onOpen","changeViewtooltip","onClose","Fab","left","drawerWidth","right","toogleIcon","Close","top","mixins","UIFarm","paintEntity","setFarm","updateFarm","onKeyHandle","_setStageSize","_deleteEntity","_selectEntity","window","addEventListener","removeEventListener","nextProps","update","isEmptyPlace","evt","preventDefault","_e$evt","layerX","layerY","cellX","cellY","connectBeamToNode","_this$state2","_e$evt2","_this$state3","_e$evt3","moveNodeTo","_deletePaintEntity","_this$state4","current","attrs","clientWidth","clientHeight","_this$state5","Box","root","esm","keyEventName","keyValue","components_UIToolBar","setSelectedMode","stageBox","components_UITreePanel","UIFarmEntities_UIStage","components_UIEntityInfo","overflow","display","flexDirection","connect","dispatch","bindActionCreators","farmActions","navPath","alignItems","justifyContent","logo","padding","descripton","btn","src","bridgeIcon_2","alt","align","description","Button","Link","to","Home","homeHeader","minWidth","innerWidth","minHeight","innerHeight","setTitle","homeActions","App","Helmet_default","a","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","path","exact","ReactDOM","render","react_default","createElement","es","store","react_router_dom","src_App","document","getElementById","__webpack_require__","r","__webpack_exports__","__dirname","d","url","favicon","_ogImage_png__WEBPACK_IMPORTED_MODULE_0__","_ogImage_png__WEBPACK_IMPORTED_MODULE_0___default","n","_icon_png__WEBPACK_IMPORTED_MODULE_1__","_icon_png__WEBPACK_IMPORTED_MODULE_1___default","_bridge_png__WEBPACK_IMPORTED_MODULE_2__","_bridge_png__WEBPACK_IMPORTED_MODULE_2___default","_airBridge_png__WEBPACK_IMPORTED_MODULE_3__","_airBridge_png__WEBPACK_IMPORTED_MODULE_3___default","path__WEBPACK_IMPORTED_MODULE_4__","process","resolve","module","exports","p"],"mappings":"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","file":"static/js/main.45134a54.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Tooltip, Paper, AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { ZoomOutMap as MoveIcon, MyLocation as AddNodeIcon, Delete as DeleteIcon, Power as ConnectIcon } from '@material-ui/icons';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    modsBtnGroup:{\r\n        marginLeft:theme.spacing(2),\r\n        marginRight:theme.spacing(2),\r\n    }\r\n})\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport interface IMode {\r\n    name: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIToolBar: React.FC<UIToolBarProps> = ({ onSelect, selected, classes }) => {\r\n    const mods: IMode[] = [\r\n        {\r\n            name: \"Move\",\r\n            mod: UIModes.move,\r\n            icon: (<MoveIcon />)\r\n        },\r\n        {\r\n            name: \"Add Node\",\r\n            mod: UIModes.addNode,\r\n            icon: (<AddNodeIcon />)\r\n        },\r\n        {\r\n            name: \"Add Beam\",\r\n            mod: UIModes.addBeam,\r\n            icon: (<ConnectIcon />)\r\n        },\r\n        {\r\n            name: \"Delete\",\r\n            mod: UIModes.delete,\r\n            icon: (<DeleteIcon />)\r\n        }\r\n    ]\r\n    return (\r\n        <AppBar \r\n            position=\"fixed\" \r\n            className={classes.appBar}\r\n            color=\"primary\">\r\n            <Toolbar >\r\n                <ToggleButtonGroup \r\n                    color=\"primary\"\r\n                    value={selected}\r\n                    exclusive\r\n                    onChange={(e, value) => onSelect(value)}\r\n                    size=\"small\"\r\n                    className={classes.modsBtnGroup}\r\n                >\r\n                    {mods.map(item => (\r\n                        <ToggleButton \r\n                            value={item.mod} \r\n                            key={item.name}\r\n                            color=\"secondory\"\r\n                            \r\n                        >\r\n                            <Tooltip title={item.name}>\r\n                                {item.icon}\r\n                            </Tooltip>\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ToggleButtonGroup>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolBar)","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { consts } from \"src/static\";\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x:number):number{        \r\n        return  Math.round(x / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n    static cellY(y:number):number{        \r\n        return  Math.round(y / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","export interface IEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\nexport class Entity implements IEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    constructor(props: IEntity) {\r\n        this.id = Date.now()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id + \"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { IEntity, Entity } from './ModelEntity';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: number[]\r\n    forcesID?: number[],\r\n}\r\n\r\nexport class Node extends Entity {\r\n    beamsID: number[];\r\n    forcesID: number[];\r\n    constructor(props:INode) {\r\n        super(props)\r\n        this.beamsID = props.beamsID || []\r\n        this.forcesID = props.forcesID  || []\r\n    }\r\n    connectBeam(beamID: number):boolean {\r\n        if (!this.beamsID.find(id => id === beamID)){\r\n            this.beamsID.push(beamID)\r\n            return true            \r\n        }\r\n        return false\r\n    }\r\n    removeBeam(beamID: number) {\r\n        \r\n        this.beamsID  = this.beamsID.filter(id => id !== beamID)\r\n    }\r\n    connectForce(forceID: number) {\r\n        if (!this.forcesID.find(id => id === forceID))\r\n            this.forcesID.push(forceID)\r\n    }\r\n    removeForce(forceID: number) {\r\n        this.beamsID   = this.forcesID.filter(id => id !== forceID)\r\n    }\r\n}","import { IEntity, Entity } from \"./ModelEntity\";\r\nimport { MyMath } from \"src/utils\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: number\r\n    endConnectedNodeID?: number\r\n    newAngle?:number\r\n}\r\n\r\nexport class Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n    newAngle:number\r\n    constructor(props: IBeam) {\r\n        super(props)\r\n        this.length = props.length || 0\r\n        this.startConnectedNodeID = props.startConnectedNodeID || 0\r\n        this.endConnectedNodeID = props.endConnectedNodeID || 0\r\n        this.newAngle = this.angle\r\n    }\r\n\r\n    connectNode(nodeID: number, place: 'start' | 'end'): void {\r\n        switch (place) {\r\n            case 'start':{\r\n                this.startConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            case 'end':{\r\n                this.endConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    removeNode(place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n        this.startConnectedNodeID = 0 :\r\n        this.endConnectedNodeID = 0\r\n    }\r\n    getEndX():number{\r\n        return this.x + (this.length * Math.cos(this.angle * Math.PI))\r\n    }\r\n    getEndY():number{\r\n        return this.y + (this.length * Math.sin(this.angle * Math.PI))\r\n    }\r\n    moveStartPoint(x:number,y:number):void{\r\n        const endX = this.getEndX()\r\n        const endY = this.getEndY()\r\n        this.x = x\r\n        this.y = y\r\n        this.angle = MyMath.angleBePoints(x,y, endX,endY)\r\n        this.length = MyMath.lengthBePoints(x,y, endX,endY)\r\n    }\r\n    \r\n    moveEndPoint(x:number,y:number):void{\r\n        this.angle = MyMath.angleBePoints(this.x,this.y,x,y)\r\n        this.length = MyMath.lengthBePoints(this.x,this.y,x,y)\r\n    }\r\n}","import { FixedNode } from \"./ModelFixedNode\";\r\nimport { Force } from \"./ModelForce\";\r\nimport { Node } from \"./ModelNode\";\r\nimport { Beam } from \"./ModelBeam\";\r\nimport { Entity } from \"./ModelEntity\";\r\n\r\n\r\n\r\n\r\nexport interface IFarm {\r\n    fixedNodes?: Map<number, FixedNode>\r\n    forces?: Map<number, Force>\r\n    nodes?: Map<number, Node>\r\n    beams?: Map<number, Beam>\r\n}\r\n\r\n\r\n\r\nexport class Farm implements IFarm {\r\n    fixedNodes: Map<number, FixedNode>\r\n    forces: Map<number, Force>\r\n    nodes: Map<number, Node>\r\n    beams: Map<number, Beam>\r\n    time: number\r\n    constructor(_farm?: Farm) {\r\n        this.nodes = _farm ? _farm.nodes : new Map()\r\n        this.fixedNodes = _farm ? _farm.fixedNodes : new Map()\r\n        this.forces = _farm ? _farm.forces : new Map()\r\n        this.beams = _farm ? _farm.beams : new Map()\r\n        this.time = Date.now()\r\n\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\"): boolean {\r\n        const oldNode = this.getNodes().find(item => item.x === x && item.y === y)\r\n        if(oldNode) return false\r\n        const node = new Node({\r\n            x,\r\n            y,\r\n            angle,\r\n            name\r\n        })\r\n        this.nodes.set(node.id, node)\r\n        return true\r\n    }\r\n    addBeam(x: number, y: number): Beam {\r\n        const beam = new Beam({\r\n            x,\r\n            y\r\n        })\r\n        this.beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n    private deleteNode(nodeID: number): void {\r\n        this.nodes.delete(nodeID)\r\n    }\r\n    private deleteBeam(beamID: number): void {\r\n        this.beams.delete(beamID)\r\n    }\r\n\r\n    getNode(nodeID: number): Node {\r\n        const node = this.nodes.get(nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number): Beam {\r\n        const beam = this.beams.get(beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number): Force {\r\n        const force = this.forces.get(forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n\r\n    getNodes(): Node[] {\r\n        const nodes: Node[] = [];\r\n        for (let node of this.nodes.values()) {\r\n            nodes.push(node)\r\n        }\r\n        return nodes\r\n    }\r\n    getBeams(): Beam[] {\r\n        const beams: Beam[] = [];\r\n        for (let beam of this.beams.values()) {\r\n            beams.push(beam)\r\n        }\r\n        return beams\r\n    }\r\n\r\n    getForcesOnNode(nodeID: number): Force[] {\r\n        const forces: Force[] = this.getNode(nodeID).forcesID.map(forceID => this.getForce(forceID))\r\n        return forces\r\n    }\r\n    getBeamsOnNode(nodeID: number): Beam[] {\r\n        const beams: Beam[] = this.getNode(nodeID).beamsID.map(beamID => this.getBeam(beamID))\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): Node[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n\r\n    connectBeamToNode(beam: Beam | number, node: Node | number, place: 'start' | 'end' = 'start'): boolean {\r\n        let _beam: Beam = beam instanceof Beam ? beam : this.getBeam(beam)\r\n        let _node: Node = node instanceof Node ? node : this.getNode(node)\r\n\r\n        switch (place) {\r\n            case 'start': {\r\n\r\n                _beam.connectNode(_node.id, 'start')\r\n                _node.connectBeam(_beam.id)\r\n                break;\r\n            }\r\n            case 'end': {\r\n                const beams = this.getBeamsOnNode(_beam.startConnectedNodeID)\r\n                const oldBeam = beams.find(item =>\r\n                    item.startConnectedNodeID === _beam.startConnectedNodeID && item.endConnectedNodeID === _node.id ||\r\n                    item.startConnectedNodeID === _node.id && item.endConnectedNodeID === _beam.startConnectedNodeID ||\r\n                    item.id === _beam.id && item.endConnectedNodeID === _beam.id\r\n                )\r\n\r\n\r\n\r\n                if (!oldBeam && _node.connectBeam(_beam.id)) {\r\n                    _beam.moveEndPoint(_node.x, _node.y)\r\n                    _beam.connectNode(_node.id, \"end\")\r\n                } else return false\r\n                break;\r\n            }\r\n            default: return false\r\n        }\r\n\r\n        return true\r\n    }\r\n    deleteEntity(entity: Entity | number) {\r\n        if (entity instanceof Node) {\r\n            // const beams = this.getBeamsOnNode(entity.id)\r\n            const beams = entity.beamsID.map(beamID => this.getBeam(beamID))\r\n            beams.forEach(beam => {\r\n                if (beam.startConnectedNodeID === entity.id) this.getNode(beam.endConnectedNodeID).removeBeam(beam.id)\r\n                else this.getNode(beam.startConnectedNodeID).removeBeam(beam.id)\r\n                this.deleteBeam(beam.id)\r\n            })\r\n            this.deleteNode(entity.id)\r\n        } else if (entity instanceof Beam) {\r\n            [entity.startConnectedNodeID,entity.endConnectedNodeID].forEach(nodeID => {\r\n                if(nodeID > 0){\r\n                    this.getNode(nodeID).removeBeam(entity.id)\r\n                }\r\n            })\r\n            this.deleteBeam(entity.id)\r\n        } else if(entity instanceof Entity){\r\n            const _entity = this.nodes.get(entity.id) || this.beams.get(entity.id)\r\n            if(_entity) this.deleteEntity(_entity)\r\n        }else{            \r\n            const _entity = this.nodes.get(entity) || this.beams.get(entity)\r\n            if(_entity) this.deleteEntity(_entity)\r\n        }\r\n    }\r\n    moveNodeTo(nodeID: number, x: number, y: number): void {\r\n        const node = this.getNode(nodeID)\r\n        node.x = x\r\n        node.y = y\r\n        node.beamsID.forEach(beamID => {\r\n            const beam = this.getBeam(beamID)\r\n            if (beam.startConnectedNodeID === nodeID) {\r\n                beam.moveStartPoint(x, y)\r\n            } else if (beam.endConnectedNodeID === nodeID) {\r\n                beam.moveEndPoint(x, y)\r\n            }\r\n        })\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport interface IFarmStore {\r\n    workSpace: Farm\r\n\r\n}\r\n\r\nexport const defaultFarmState: IFarmStore = {\r\n    workSpace: new Farm(),\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case FARM_UPDATE:{\r\n            const newState : IFarmStore = {workSpace:new Farm(action.workSpace)}\r\n            \r\n            return newState\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeStore, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeStore\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import { Action } from \"redux\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const FARM_UPDATE = 'FARM_UPDATE'\r\n\r\nexport interface IActionFarmUpdate extends Action {\r\n    type: typeof FARM_UPDATE,\r\n    workSpace:Farm\r\n}\r\n\r\nexport type FarmActions = IActionFarmUpdate;","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","\r\nimport {  createMuiTheme } from '@material-ui/core';\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark:\"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light:'#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\"\r\n        },\r\n        background:{\r\n            default:'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }  \r\n        \r\n    },\r\n});\r\n\r\nexport default theme","import * as React from 'react'\r\nimport { Circle, Stage } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from '../UIToolBar';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\n\r\nexport interface UINodeProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, node: Node): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, node: Node): void\r\n    node: Node,\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\n\r\nconst UINode: React.FC<UINodeProps> = ({ node, drag, mode, onClick, selected }) => {\r\n\r\n    const size = consts.UI_nodeSize\r\n\r\n    const hundleMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n\r\n        switch (mode) {\r\n            case UIModes.delete:\r\n            case UIModes.none: {\r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            }\r\n\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                stage.container().style.cursor = 'crosshair'\r\n                break\r\n            }\r\n            case UIModes.move: {\r\n                stage.container().style.cursor = 'move'\r\n                break\r\n            }\r\n\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n    const hundleMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n        stage.container().style.cursor = 'default'\r\n    }\r\n    const getStorkeColor = (mode: UIModes):string => {\r\n        switch (mode) {\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart:\r\n            case UIModes.move:{\r\n                return theme.palette.primary.light\r\n            }\r\n            default:\r\n                return theme.palette.secondary.main\r\n        }\r\n    }\r\n    const getStorkeWidth = (mode :UIModes):number => {\r\n        switch (mode) {\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart:\r\n            case UIModes.move:{\r\n                return 2\r\n            }\r\n            default:\r\n                return 0\r\n        }\r\n\r\n    }\r\n    return (\r\n        <React.Fragment\r\n            key={node.id}>\r\n            {/* <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            /> */}\r\n\r\n            <Circle\r\n                className=\"MyCircle\"\r\n                radius={size}\r\n                x={node.x}\r\n                y={node.y}\r\n                fill={theme.palette.secondary.main}\r\n                shadowBlur={selected ? 8 : 2}\r\n                stroke={getStorkeColor(mode)}\r\n                strokeWidth={getStorkeWidth(mode)}\r\n            />\r\n            <Circle\r\n\r\n                radius={size * 2}\r\n                x={node.x}\r\n                y={node.y}\r\n                draggable={mode === UIModes.move}\r\n                _useStrictMode\r\n                onDragMove={(e) => drag(e, node)}\r\n                onClick={(e) => onClick(e, node)}\r\n                onMouseEnter={(e) => hundleMouseEnter(e, mode)}\r\n                onMouseLeave={(e) => hundleMouseLeave(e, mode)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Line, Stage } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { UIModes } from '../UIToolBar';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\n\r\nexport interface UIBeamProps {\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    beam: Beam,\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\n\r\nconst UIBeam: React.FC<UIBeamProps> = ({ beam,  mode, onClick, selected }) => {\r\n    const size = consts.UI_beamSize\r\n    const hundleMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n    \r\n        switch (mode) {\r\n            case UIModes.delete:\r\n            case UIModes.none:{            \r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            }\r\n\r\n            default:{\r\n                break\r\n            }\r\n        }\r\n    \r\n    }\r\n    const hundleMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n        stage.container().style.cursor = 'default'\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.getEndX(),\r\n                    beam.getEndY()\r\n                ]}\r\n                stroke={theme.palette.secondary.light}\r\n                strokeWidth={size}\r\n                shadowBlur={selected ? 8 : 2}\r\n            />\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.getEndX(),\r\n                    beam.getEndY()\r\n                ]}\r\n                strokeWidth={size*4} \r\n                stroke=\"transparent\"\r\n                onClick={(e) => onClick(e,beam)}\r\n                onMouseEnter={(e) => hundleMouseEnter(e, mode)}\r\n                onMouseLeave={(e) => hundleMouseLeave(e)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIBeam","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst UIGrid: React.FC<UIGridProps> = ({ widthCell, heightCell, heightBox, widthBox }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    const viewRows = () => {\r\n        const rows = []\r\n        for (let index = 0; index < countOfY; index++) {\r\n            rows.push(<Line\r\n                points={[\r\n                    0,\r\n                    index * heightCell,\r\n                    widthBox,\r\n                    index * heightCell,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n            />)\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const viewColumns = () => {\r\n        const columns = []\r\n        for (let index = 0; index < countOfX; index++) {\r\n\r\n            columns.push(<Line\r\n                points={[\r\n                    index*widthCell,\r\n                    0,\r\n                    index*widthCell,\r\n                    heightBox,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n            />)\r\n\r\n        }\r\n        return columns\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns()}\r\n            {viewRows()}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIGrid","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport { UINode, UIBeam } from '..';\r\nimport { Farm, Entity } from 'src/models/Farm';\r\nimport { UIModes } from '../UIToolBar';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n        // width:\"100%\",\r\n        flexGrow: 1\r\n    }\r\n})\r\n\r\n\r\nexport interface UIStageProps extends WithStyles<typeof styles> {\r\n    farm:Farm,\r\n    uiMode:UIModes,\r\n    selectedEntity:Entity | undefined,\r\n    stageHeight:number,\r\n    stageWidth:number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity):void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>):void,\r\n    onDrag(e:Konva.KonvaEventObject<DragEvent>, entity:Entity):void,\r\n    stage:React.RefObject<Stage & Konva.Stage>\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = ({classes, stage, stageHeight,stageWidth, onClick, onMouseMove, onDrag, farm, uiMode,selectedEntity }) => {\r\n    return (\r\n        <Stage\r\n            height={stageHeight}\r\n            width={stageWidth}\r\n            className={classes.stage}\r\n            onClick={onClick}\r\n            onMouseMove={onMouseMove}\r\n            ref={stage}\r\n        >\r\n\r\n            <Layer className=\"layer\" >\r\n                <UIGrid \r\n                    heightCell={consts.UI_cellSize}\r\n                    widthCell={consts.UI_cellSize}\r\n                    heightBox={stageHeight}\r\n                    widthBox={stageWidth}\r\n                />\r\n                {farm.getBeams().map(beam => (\r\n                    <UIBeam\r\n                        key={beam.id}\r\n                        beam={beam}\r\n                        mode={uiMode}\r\n                        onClick={onClick}\r\n                        selected={selectedEntity === beam}\r\n                    />\r\n                ))}\r\n\r\n                {farm.getNodes().map(node => (\r\n                    <UINode\r\n                        key={node.id}\r\n                        node={node}\r\n                        mode={uiMode}\r\n                        drag={onDrag}\r\n                        onClick={onClick}\r\n                        selected={selectedEntity === node}\r\n                    />\r\n                ))}\r\n            </Layer>\r\n        </Stage>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIStage)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, List, ListItem, ListItemText, Collapse, Fab, Drawer, ListItemIcon, Divider, IconButton, Tooltip } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Node, Beam, Entity } from 'src/models/Farm';\r\nimport { Close as CloseIcon, List as TreePanelIcon, ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { UIDrawer } from '.';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes: Node[],\r\n    beams: Beam[]\r\n    selectedEntity: Entity | undefined\r\n    onSelect(entity: Entity): void\r\n}\r\n\r\ninterface TreeState {\r\n    openedNodes: boolean,\r\n    openedBeams: boolean,\r\n    open: boolean,\r\n\r\n}\r\n\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            openedNodes: true,\r\n            openedBeams: true,\r\n        }\r\n        this.switchTab = this.switchTab.bind(this)\r\n    }\r\n    switchTab(tab: string): void {\r\n        switch (tab) {\r\n            case 'nodes':\r\n                return this.setState((state) => ({\r\n                    openedNodes: !state.openedNodes\r\n                }))\r\n            case 'beams':\r\n                return this.setState((state) => ({\r\n                    openedBeams: !state.openedBeams\r\n                }))\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    render() {\r\n        const { classes, nodes, beams, selectedEntity, onSelect } = this.props\r\n        const { openedBeams, openedNodes, } = this.state\r\n        const { switchTab: openTab } = this\r\n        return (\r\n            <UIDrawer\r\n                anchor=\"left\"\r\n                btnTitle=\"Структура проекат\"\r\n                btnIcon={(<TreePanelIcon/>)}\r\n            >\r\n                <List>\r\n                    <ListItem button onClick={() => openTab('nodes')}>\r\n                        <ListItemText primary=\"Узлы\" />\r\n                        {openedNodes ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={openedNodes} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n                            {nodes.map(item => (\r\n                                <ListItem\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    key={item.id}\r\n                                    selected={selectedEntity === item}\r\n                                    onClick={(e) => onSelect(item)}\r\n                                >\r\n                                    <ListItemText primary={item.id} />\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </Collapse>\r\n                    <Divider />\r\n\r\n                    <ListItem button onClick={() => openTab('beams')}>\r\n                        <ListItemText primary=\"Лучи\" />\r\n                        {openedBeams ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={openedBeams} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n                            {beams.map(item => (\r\n                                <ListItem\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    key={item.id}\r\n                                    selected={selectedEntity === item}\r\n                                    onClick={(e) => onSelect(item)}\r\n                                >\r\n                                    <ListItemText primary={item.id} />\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </Collapse>\r\n                </List>\r\n\r\n            </UIDrawer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles,  Card, CardContent, Typography, CardActions,  IconButton } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Node, Beam, Entity } from 'src/models/Farm';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { UIDrawer } from '.';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: Entity | undefined,\r\n    onDelete(entity:Entity):void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\n\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    getTypeStr(entity: Entity):string{\r\n        if(entity instanceof Node) return \"Узел\"\r\n        else if(entity instanceof Beam) return \"Луч\"\r\n        else return \"Элемент\"\r\n    }\r\n    viewCard(entity: Entity | undefined) {\r\n        const { classes,onDelete } = this.props\r\n        if(entity) return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        {this.getTypeStr(entity)}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {entity.name}\r\n                    </Typography>                    \r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"Delete\" onClick={() => onDelete(entity)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n\r\n        return (\r\n            <UIDrawer\r\n                anchor=\"right\"\r\n                btnTitle=\"Информация об выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon/>)}\r\n            >                \r\n                {this.viewCard(entity)}\r\n            </UIDrawer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon, List as TreePanelIcon, ExpandLess, ExpandMore, SvgIconComponent } from '@material-ui/icons';\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(9),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    btnTitle? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface TreeState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\n\r\nclass UIDrawer extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    switchDrawer() {\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, btnTitle: btnTitile, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={btnTitile}\r\n                    open={btnTitile !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 10 : drawerWidth + 10 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 10 : drawerWidth + 10 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIDrawer)","import * as React from 'react'\r\nimport KeyHandler from 'react-key-handler'\r\nimport Konva from \"konva\"\r\nimport { Stage } from \"react-konva\"\r\nimport { createStyles, Theme, WithStyles, withStyles, Box } from '@material-ui/core';\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Farm, Node, Beam, Entity } from 'src/models/Farm';\r\nimport { UITreePanel, UIEntityInfo, UIStage } from './components';\r\nimport UIToolBar, { UIModes } from './components/UIToolBar';\r\nimport { MyMath } from 'src/utils';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        // maxHeight: window.innerHeight,\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        // padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        // borderRadius:18,\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        // width: \"100%\",\r\n        // height: \"100%\",\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\nexport interface UIFarmProps extends IFarmStore, WithStyles<typeof styles> {\r\n    update: (workSpace: Farm) => void\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm: Farm,\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\nclass UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: 100,\r\n            stageWidth: 100,\r\n            farm: props.workSpace,\r\n            uiMode: UIModes.none,\r\n            selectedEntity: undefined,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.setFarm = this.setFarm.bind(this)\r\n        this.updateFarm = this.updateFarm.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this._setStageSize = this._setStageSize.bind(this)\r\n        this._deleteEntity = this._deleteEntity.bind(this)\r\n        this._selectEntity = this._selectEntity.bind(this)\r\n\r\n        this.stage = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        this._setStageSize()\r\n        window.addEventListener('resize', this._setStageSize)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this._setStageSize)\r\n    }\r\n    componentWillReceiveProps(nextProps: UIFarmProps) {\r\n        if (nextProps.workSpace !== this.state.farm)\r\n            this.setState({ farm: nextProps.workSpace })\r\n    }\r\n    setFarm(farm: Farm): void {\r\n        this.props.update(farm)\r\n    }\r\n    updateFarm(farm: Farm): void {\r\n        this.setState({ farm })\r\n\r\n    }\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity) {\r\n        const { uiMode, farm } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n\r\n        if (e.evt.button === 0) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace) {\r\n                        this._selectEntity(entity);\r\n                    } else this.setState({ selectedEntity: undefined })\r\n\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        farm.addNode(cellX, cellY, 0)\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && entity instanceof Node) {\r\n\r\n                        const beam = farm.addBeam(entity.x, entity.y)\r\n                        farm.connectBeamToNode(beam, entity)\r\n                        this.setState({\r\n                            paintEntity: beam,\r\n                            uiMode: UIModes.addBeamStart\r\n                        })\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && entity instanceof Node && this.state.paintEntity instanceof Beam) {\r\n                        const beam = this.state.paintEntity\r\n                        if (farm.connectBeamToNode(beam, entity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: undefined\r\n                            })\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this._deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        // if (isEmptyPlace) this.setState({ selectedEntity: undefined })\r\n\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, farm, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if (paintEntity && paintEntity instanceof Beam) {\r\n                    const beam = paintEntity\r\n                    beam.moveEndPoint(MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                } else this.setState({ uiMode: UIModes.addBeam })\r\n                this.updateFarm(farm)\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n        const { farm, uiMode } = this.state\r\n        if (entity instanceof Node) {\r\n            if (uiMode === UIModes.move) {\r\n                const { layerX, layerY } = e.evt\r\n                farm.moveNodeTo(entity.id, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                this.updateFarm(farm)\r\n            }\r\n        }\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this._deletePaintEntity()\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        this._deletePaintEntity()\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n        })\r\n    }\r\n    _deletePaintEntity() {\r\n\r\n        const { uiMode, paintEntity, farm } = this.state\r\n        if (uiMode === UIModes.addBeamStart && paintEntity) {\r\n            farm.deleteEntity(paintEntity)\r\n            this.setState({\r\n                paintEntity: undefined,\r\n            })\r\n            this.updateFarm(farm)\r\n        }\r\n    }\r\n    _setStageSize(e?: UIEvent) {\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container: HTMLDivElement = stage.attrs.container\r\n            const { clientWidth, clientHeight } = container\r\n            this.setState({\r\n                stageHeight: clientHeight,\r\n                stageWidth: clientWidth\r\n            })\r\n        }\r\n    }\r\n    _selectEntity(entity:Entity | undefined){\r\n        if (entity) this.setState({ selectedEntity: entity })\r\n    }\r\n    _deleteEntity(entity: Entity) {\r\n\r\n        this.setState({ selectedEntity: undefined })\r\n        this.state.farm.deleteEntity(entity)\r\n        this.updateFarm(this.state.farm)\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, farm, uiMode, selectedEntity } = this.state\r\n        const { classes } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIToolBar\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)} />\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <UITreePanel\r\n                        nodes={farm.getNodes()}\r\n                        beams={farm.getBeams()}\r\n                        selectedEntity={selectedEntity}\r\n                        onSelect={this._selectEntity}\r\n                    />\r\n                    <UIStage\r\n                        onClick={this.onClick}\r\n                        onDrag={this.onDrag}\r\n                        onMouseMove={this.onMouseMove}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        farm={farm}\r\n                        stage={this.stage}\r\n                        selectedEntity={selectedEntity}\r\n                        uiMode={uiMode}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={selectedEntity}\r\n                        onDelete={this._deleteEntity} />\r\n                </Box>\r\n\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UIFarm)","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const update = (workSpace : Farm) : FarmActions => ({\r\n    type:FARM_UPDATE,\r\n    workSpace\r\n})","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  (state: AppState) => ({\r\n    workSpace:state.farm.workSpace,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"auto\",\r\n\t\theight: 400\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({classes} : WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img src={consts.bridgeIcon_2} alt=\"logo\" className={classes.logo} />\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.FARM_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { IHomeStore } from './homeReducer';\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\tminWidth: window.innerWidth,\r\n\t\tminHeight: window.innerHeight,\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends IHomeStore, WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport * as consts from './static/const';\nimport {CssBaseline} from '@material-ui/core';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/styles';\n\n\ninterface IAppProps {\n\n}\n\n\nclass App extends React.Component<IAppProps> {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={consts.title}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":consts.bridgeIcon_2},\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":consts.airBridge},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/css?family=Roboto:300,400,500'},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/icon?family=Material+Icons'}\n\t\t\t\t\t]}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": consts.description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": consts.title},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": consts.url},\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<CssBaseline/>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<main style={{height:\"100%\"}}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</main>\n\n\t\t\t\t</ThemeProvider>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","// import favicon from './favicon.ico'\r\nimport ogImage from './ogImage.png'\r\nimport bridgeIcon_1 from './icon.png'\r\nimport bridgeIcon_2 from './bridge.png'\r\nimport airBridge from './airBridge.png'\r\nimport path from 'path'\r\n\r\n// Strings\r\nexport const url = process.env.PUBLIC_URL\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"\r\nexport const favicon = path.resolve(__dirname,\"favicon.ico\")\r\n\r\n// UI\r\nexport const UI_cellSize = 40\r\nexport const UI_nodeSize = 10\r\nexport const UI_beamSize = 6\r\n\r\n\r\n// Images\r\nexport {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";"],"sourceRoot":""}