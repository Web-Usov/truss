{"version":3,"sources":["static/const.ts","static/images/ogImage.png","static/images/icon.png","static/images/bridge.png","static/images/airBridge.png","static/images/fixation.svg","utils/UI.ts","utils/history.ts","models/Farm/ModelNode.ts","static/colors.ts","utils/math.ts","store/farm/farmReducer.ts","store/farm/farmTypes.ts","models/Farm/ModelEntity.ts","models/Farm/ModelForce.ts","models/Farm/ModelBeam.ts","store/home/homeActions.ts","store/home/homeTypes.ts","store/home/homeReducer.ts","store/index.ts","pages/Farm/components/UIFarmEntities/UINode.tsx","pages/Farm/components/UIFarmEntities/UIBeam.tsx","pages/Farm/components/UIFarmEntities/UIGrid.tsx","pages/Farm/components/UIFarmEntities/UIStage.tsx","components/sidebar.tsx","components/appBar.tsx","components/myToggleButton.tsx","pages/Farm/components/UIHeader.tsx","pages/Farm/components/UITreePanel.tsx","models/Farm/FarmCalc.ts","models/Farm/Farm.ts","pages/Farm/components/UIEntityInfo.tsx","pages/Farm/components/UIToolPanel.tsx","pages/Farm/components/UIFarm.tsx","models/Farm/FarmFactory.ts","pages/Farm/index.ts","pages/Farm/FarmContainer.tsx","pages/Farm/_testFarm.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/index.ts","App.tsx","index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","__dirname","d","str","UI","canvas","img","path__WEBPACK_IMPORTED_MODULE_0__","path__WEBPACK_IMPORTED_MODULE_0___default","n","_images_ogImage_png__WEBPACK_IMPORTED_MODULE_1__","_images_ogImage_png__WEBPACK_IMPORTED_MODULE_1___default","_images_icon_png__WEBPACK_IMPORTED_MODULE_2__","_images_icon_png__WEBPACK_IMPORTED_MODULE_2___default","_images_bridge_png__WEBPACK_IMPORTED_MODULE_3__","_images_bridge_png__WEBPACK_IMPORTED_MODULE_3___default","_images_airBridge_png__WEBPACK_IMPORTED_MODULE_4__","_images_airBridge_png__WEBPACK_IMPORTED_MODULE_4___default","_images_fixation_svg__WEBPACK_IMPORTED_MODULE_5__","_images_fixation_svg__WEBPACK_IMPORTED_MODULE_5___default","url","process","title","description","favicon","path","resolve","cellSize","MMinCell","koefOfNewPos","nodeSize","beamSize","koefOnGrid","sidebarWidth","width","height","ogImage","bridgeIcon_1","bridgeIcon_2","airBridge","FixationIcon","module","exports","p","UIModes","createBrowserHistory","NodeFixation","theme","createMuiTheme","palette","primary","dark","main","light","secondary","background","default","getNodeColor","node","isStatic","fixation","colors","fixedNode","staticNode","getNodeStorkeColor","mode","move","addBeam","addBeamStart","getNodeStorkeWidth","getBeamColor","beam","nodeMouseEnter","e","stage","target","getStage","delete","container","style","cursor","none","nodeMouseLeave","beamMouseEnter","beamMouseLeave","mainBackGround","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","y","a","b","rowsA","length","rowsB","colsA","colsB","result","Error","i","row","j","push","k","sum","MathJs","error","console","array","defaultState","nodes","beams","forces","reducer","state","arguments","undefined","action","type","Object","objectSpread","concat","toConsumableArray","force","map","item","id","filter","createEntity","props","name","angle","newX","newY","withNewPosition","entity","uuid","createForce","nodeID","value","createBeam","startConnectedNodeID","endConnectedNodeID","endX","endY","newEndX","newEndY","startForce","endForce","instanceOfBeam","object","createNode","beamsID","forceX","forceY","isFixed","None","instanceOfNode","setTitle","defaultHomeState","mainReducer","combineReducers","farm","FarmReducer","home","HomeReducer","createStore","applyMiddleware","thunk","size","UINode","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewForce","bind","assertThisInitialized","nextProps","selected","viewNewPos","react","ReactKonva","points","stroke","grey","strokeWidth","shadowBlur","pointerLength","pointerWidth","hitStrokeWidth","rotation","text","radius","fill","_this2","_this$props","onClick","opacity","_useStrictMode","X","viewFixation","Y","XY","YX","align","fontSize","fontFamily","verticalAlign","onDragEnd","to","draggable","onMouseEnter","onMouseLeave","onDragMove","drag","React","UIBeam","_this$props2","UIGrid","_ref","widthCell","heightCell","heightBox","widthBox","countOfX","countOfY","columns","index","key","viewColumns","rows","viewRows","withStyles","createStyles","root","backgroundColor","display","alignItems","justifyContent","boxShadow","shadows","borderRadius","classes","stageHeight","stageWidth","onMouseMove","onDrag","uiMode","selectedEntity","lib_default","autoHide","Box","className","ref","UIFarmEntities_UIGrid","UIFarmEntities_UIBeam","UIFarmEntities_UINode","Sidebar","open","viewTooltip","switchDrawer","localState","localStorage","getItem","setState","setItem","flag","children","btnIcon","anchor","_this$state","Drawer","drawer","variant","paper","drawerPaper","toolbar","Typography","Divider","Tooltip","onOpen","changeViewtooltip","onClose","Fab","left","right","color","toogleIcon","Close","position","top","spacing","zIndex","padding","mixins","appBar","logo","marginRight","marginLeft","& img","_ref$withLogo","withLogo","AppBar","clsx","Toolbar","react_router_dom","alt","src","viewLogo","btn","border","fade","active","transition","transitions","create","duration","short","contrastText","&$selected","&:hover","@media (hover: none)","&$disabled","icon","other","objectWithoutProperties","ToggleButton","assign","defineProperty","grow","flexGrow","_ref$hundleSave","hundleSave","alert","_ref$hundleClear","hundleClear","_ref$hundleCalculate","hundleCalculate","_ref$disabled","disabled","Button","UITreePanel","tabs","Map","openTab","viewListItem","set","tab","get","entityArray","onSelect","ListItem","button","ListItemIcon","Badge","badgeContent","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","nested","Brightness1","sort","sidebar","esm_List","GpsNotFixed","Timeline","paddingLeft","FarmCalc","createClass","_init","asyncToGenerator","regenerator_default","mark","_callee","NodeCoord","NodeV","Forces","LinkNodes","LinkLength","area","ModUpr","Kmest","Lambda0","Lambda","Kobs","IndexV","K","Va","Vi","Vij","V","P","N_Link","N_Nodes","N_DOF","_args","wrap","_context","prev","next","modUpr","forEach","Kmest_i","l_i","Lambda_i","Kobs_i","IndexV_i","max","apply","getDetMatrix","SquareRoot","V_i","P_i","farmCalcDebug","log","abrupt","stop","_x","_x2","_x3","_x4","_x5","length_i","mnoz","nodeCoordOfX","nodeCoordOfY","LTxL","_LTxL","augmnet1","augment2","Array","prototype","_ref2","nodeV1","nodeV2","n_dof","indexV","k_obs","t","A","B","_a","_b","s","signum","abs","l","SDSsum","nodeV","vi","q","linkNodes","vij","n_start","n_ends","multMatrxiV2","v","Farm","find","getBeamLength","checkingBeam","lengthBePoints","_beams","nodesMap","startNode","endNode","numsA","split","numA","Number","numsB","_nodes","setNodesName","setBeamsName","sortNodes","_calculate","_NodeMap","_nodeVindex","data","nums","init","sent","bufNodeMap","TextRow","TextRows","UIEntityInfo","UIEntityInfo_TextRow","onDelete","UIEntityInfo_TextRows","viewFixationInfo","btnGroup","IconButton","aria-label","Delete","NodeInfo","BeamInfo","Info","viewInfo","marginBottom","marginTop","bottom","transform","modsBtnGroup","mods","mod","ZoomOutMap","addNode","MyLocation","Power","Paper","ToggleButtonGroup","exclusive","onChange","myToggleButton","UIFarm","selectedEntityID","paintEntity","UIonClick","UIonDrag","UIonMouseMove","onKeyHandle","selectEntity","clearFarm","deleteEntity","saveFarm","calculateFarm","current","attrs","parentElement","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","calculation","isEmptyPlace","evt","preventDefault","_e$evt","layerX","layerY","cellX","cellY","connectedBeam","connectBeamToNode","_this$state2","_e$evt2","moveBeam","defaultPrevented","_e$evt3","moveNode","deletePaintEntity","window","confirm","defautlFarm","_this$state3","calculated","react_stats","isActive","esm","keyEventName","keyValue","components_UIHeader","stageBox","components_UITreePanel","UIFarmEntities_UIStage","components_UIEntityInfo","components_UIToolPanel","setSelectedMode","overflow","flexDirection","FarmFactory","nodesJSON","beamsJSON","JSON","parse","_fixedNodes","_staticNodes","_node","FarmPage","_React$Component","FarmContainer","options","_beam","place","moveEntity","includes","findOldBeam","moveBeamEnd","addForceToNode","_y","_Farm$update","update","upNodes","upBeams","inherits","_FarmFactory$parse","nextState","_calculateFarm","_Farm$normalize","withNewPos","normalize","calculate","correctAfterCalc","t0","message","_farm","createNodes","removeItem","_farm2","firstPlacement","stringify","components_UIFarm","navPath","descripton","Link","Home","homeHeader","minHeight","connect","dispatch","bindActionCreators","homeActions","App","Helmet_default","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","exact","ReactDOM","render","react_default","createElement","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.699c037a.chunk.js","sourcesContent":["// import favicon from './images/favicon.ico'\r\nimport path from 'path'\r\nimport ogImage from './images/ogImage.png'\r\nimport bridgeIcon_1 from './images/icon.png'\r\nimport bridgeIcon_2 from './images/bridge.png'\r\nimport airBridge from './images/airBridge.png'\r\nimport FixationIcon from './images/fixation.svg'\r\n\r\n// Strings\r\nexport const str = {\r\n    url: process.env.PUBLIC_URL,\r\n    title: \"Truss - ферма для каждого\",\r\n    description: \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\",\r\n    favicon: path.resolve(__dirname, \"favicon.ico\")\r\n}\r\n\r\n// UI\r\nexport const UI = {\r\n    cellSize: 45,\r\n    MMinCell: 200,\r\n    koefOfNewPos:100,\r\n    nodeSize: 0,\r\n    beamSize: 0,\r\n    koefOnGrid: 0,\r\n    sidebarWidth: 240,\r\n\r\n}\r\nUI.nodeSize = UI.cellSize / 3\r\nUI.beamSize = UI.cellSize / 7\r\nUI.koefOnGrid = UI.MMinCell / UI.cellSize\r\n\r\nexport const canvas = {\r\n    width: 2500,\r\n    height: 1500\r\n}\r\n\r\n\r\n// Images\r\nexport const img = {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge,\r\n    FixationIcon\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";","module.exports = __webpack_public_path__ + \"static/media/fixation.dd261ca6.svg\";","import { FarmNode } from \"src/models/Farm/ModelNode\";\r\nimport { colors } from \"src/static\";\r\nimport { Beam } from \"src/models/Farm/ModelBeam\";\r\nimport Konva from \"konva\";\r\nimport { Stage } from \"konva/types/Stage\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark:\"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light:'#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\",\r\n            // light:\"#f0965d\"\r\n        },\r\n        background:{\r\n            default:'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }  \r\n        \r\n    },\r\n});\r\nexport const getNodeColor = (node: FarmNode):string => {\r\n    \r\n    if (node.isStatic) {\r\n        if (node.fixation) return colors.fixedNode\r\n        return colors.staticNode\r\n    }\r\n    return colors.node\r\n}\r\nexport const getNodeStorkeColor = (node: FarmNode, mode : UIModes):string => {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return theme.palette.secondary.dark\r\n            return theme.palette.primary.light\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return theme.palette.primary.light\r\n        }\r\n        default:\r\n            return theme.palette.secondary.main\r\n    }\r\n}\r\nexport const getNodeStorkeWidth = (node: FarmNode, mode : UIModes): number =>  {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return 0\r\n            return 2\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return 2\r\n        }\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\nexport const getBeamColor = (beam : Beam) : string => {\r\n    return colors.beam\r\n}\r\n\r\n\r\nexport const nodeMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, node:FarmNode, mode: UIModes):void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break;\r\n        }\r\n\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            stage.container().style.cursor = 'crosshair'\r\n            break\r\n        }\r\n        case UIModes.move: {\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'move'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n}\r\nexport const nodeMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>):void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}\r\n\r\nexport const beamMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, beam:Beam, mode: UIModes) :void =>  {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break\r\n        }\r\n    }\r\n\r\n}\r\nexport const beamMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) :void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { IEntity, Entity, createEntity } from './ModelEntity';\r\nimport { Force } from './ModelForce';\r\n\r\nexport enum NodeFixation {\r\n    None = 0,\r\n    X = 1,\r\n    Y = 2,\r\n    XY = 3,\r\n    YX = XY\r\n\r\n}\r\nexport interface INode extends IEntity {\r\n    beamsID?: string[]\r\n    forceX?: Force,\r\n    forceY?: Force,\r\n    isStatic?: boolean\r\n    fixation?: NodeFixation\r\n}\r\n\r\nexport interface FarmNode extends Entity {\r\n    beamsID: string[];\r\n    forceX: Force | undefined\r\n    forceY: Force | undefined\r\n    isStatic: boolean\r\n    fixation: NodeFixation\r\n}\r\n\r\nexport const createNode = (props: INode = {}): FarmNode => {\r\n    const { beamsID, forceX, forceY, isStatic, fixation: isFixed } = props\r\n    const entity = createEntity(props)\r\n    const node: FarmNode = {\r\n        ...entity,\r\n        type: \"node\",\r\n        beamsID: beamsID || [],\r\n        forceX: forceX,\r\n        forceY: forceY,\r\n        isStatic: isStatic || false,\r\n        fixation: isFixed || NodeFixation.None\r\n    }\r\n    return node\r\n}\r\nexport const instanceOfNode = (object: any): object is FarmNode => object && object.type === 'node'","import { theme } from \"src/utils/UI\";\r\n\r\nexport const mainBackGround = \"#09B4D3\"\r\n\r\nexport const node = theme.palette.secondary.main\r\nexport const staticNode = theme.palette.secondary.dark\r\nexport const fixedNode = theme.palette.secondary.dark\r\n\r\nexport const beam = theme.palette.secondary.light","import { consts } from \"src/static\";\r\nimport * as MathJs from 'mathjs'\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1: number, y1: number, x2: number, y2: number): number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n\r\n    static lengthBePoints(x1: number, y1: number, x2: number, y2: number): number {\r\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x: number): number {\r\n        return Math.round(x / consts.UI.cellSize) * consts.UI.cellSize\r\n    }\r\n    static cellY(y: number): number {\r\n        return Math.round(y / consts.UI.cellSize) * consts.UI.cellSize\r\n    }\r\n    static signum(x: number) {\r\n        if (x > 0) return 1\r\n        else if (x < 0) return -1\r\n        else return 0\r\n    }\r\n    static multMatrxi(a: number[][], b: number[][]) {\r\n        const rowsA = a.length\r\n        const rowsB = b.length\r\n        const colsA = a[0].length\r\n        const colsB = b[0].length\r\n        const result: number[][] = []\r\n        if (colsA !== rowsB) throw new Error(\"Размерность матриц не позволяет переумножить их\")\r\n\r\n        for (let i = 0; i < rowsA; i++) {\r\n            const row: number[] = []\r\n            for (let j = 0; j < colsB; j++) {\r\n                row.push(0)\r\n            }\r\n            result.push(row)\r\n        }\r\n        for (let k = 0; k < colsB; k++) {\r\n            for (let i = 0; i < rowsA; i++) {\r\n                let sum = 0\r\n                for (let j = 0; j < rowsB; j++)\r\n                    sum += a[i][j] + b[j][k]\r\n                result[i][k] = sum\r\n            }\r\n        }\r\n        // console.log(result);\r\n        return result\r\n\r\n    }\r\n    static multMatrxiV2(a: number[][], b: number[][]) : number[][]{\r\n        let result: number[][] = []\r\n        try {\r\n            result = (MathJs.multiply(a,b) as number[][])\r\n            \r\n        } catch (error) {\r\n            console.error(\"multMatrxiV2:\", error);\r\n        }        \r\n        return result\r\n    }\r\n    static getDetMatrix(array:number[][]) : number{\r\n        return MathJs.det(array)\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","\r\nimport * as FarmTypes from './farmTypes'\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\n\r\nexport interface IFarmStore {\r\n    nodes:FarmNode[],\r\n    beams:Beam[],\r\n    forces:Force[]\r\n}\r\n\r\nexport const defaultState: IFarmStore = {\r\n    nodes:[],\r\n    beams:[],\r\n    forces:[]\r\n}\r\n\r\nexport const reducer = (state: IFarmStore = defaultState, action: FarmTypes.FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        // Add\r\n        case FarmTypes.ADD_NODE : {\r\n            const {node} = action\r\n            return {\r\n                ...state,\r\n                nodes : [\r\n                    ...state.nodes,\r\n                    node\r\n                ]\r\n            }\r\n            \r\n        }\r\n        case FarmTypes.ADD_BEAM : {\r\n            const {beam} = action\r\n            return {\r\n                ...state,\r\n                beams : [\r\n                    ...state.beams,\r\n                    beam\r\n                ]\r\n            }            \r\n        }\r\n        case FarmTypes.ADD_FORCE : {\r\n            const {force} = action\r\n            return {\r\n                ...state,\r\n                forces : [\r\n                    ...state.forces,\r\n                    force\r\n                ]\r\n            }            \r\n        }\r\n        // Edit\r\n        case FarmTypes.EDIT_NODE : {\r\n            return {\r\n                ...state,\r\n                nodes : state.nodes.map(item => {\r\n                    if(item.id === action.node.id){      \r\n                        // const node : Node = {\r\n                        //     ...item,\r\n                        //     ...action.node\r\n                        // }\r\n                        return {\r\n                                ...item,\r\n                                ...action.node\r\n                            }\r\n                    }\r\n                    return item\r\n                })\r\n            }            \r\n        }\r\n        case FarmTypes.EDIT_BEAM : {\r\n            return {\r\n                ...state,\r\n                beams : state.beams.map(item => {\r\n                    if(item.id === action.beam.id){ \r\n                        return {\r\n                            ...item,\r\n                            ...action.beam\r\n                        }   \r\n                    }\r\n                    return item\r\n                })\r\n            }            \r\n        }\r\n        // Delete\r\n        case FarmTypes.DELETE_ENTITY : {\r\n            return {\r\n                beams : state.beams.filter(item => item.id !== action.id),\r\n                nodes : state.nodes.filter(item => item.id !== action.id),\r\n                forces : state.forces.filter(item => item.id !== action.id),\r\n            }            \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { Action } from \"redux\";\r\nimport {  Beam } from \"src/models/Farm/ModelBeam\";\r\nimport {  FarmNode } from \"src/models/Farm/ModelNode\";\r\nimport { Force } from \"src/models/Farm/ModelForce\";\r\n\r\nexport const DELETE_EN = \"DELETE_EN\"\r\nexport const ADD_NODE = \"ADD_NODE\"\r\nexport const ADD_BEAM = \"ADD_BEAM\"\r\nexport const ADD_FORCE = \"ADD_FORCE\"\r\nexport const DELETE_ENTITY = \"DELETE_ENTITY\"\r\nexport const EDIT_NODE = \"EDIT_NODE\"\r\nexport const EDIT_BEAM = \"EDIT_BEAM\"\r\n\r\n// Add\r\nexport interface ActionAddNode extends Action {    \r\n    type: typeof ADD_NODE,\r\n    node:FarmNode\r\n}\r\nexport interface ActionAddBeam extends Action {    \r\n    type: typeof ADD_BEAM,\r\n    beam:Beam\r\n}\r\nexport interface ActionAddForce extends Action {    \r\n    type: typeof ADD_FORCE,\r\n    force:Force\r\n}\r\n// Delete\r\nexport interface ActionDeleteEntity extends Action {    \r\n    type: typeof DELETE_ENTITY,\r\n    id:string\r\n}\r\n// Edit\r\nexport interface ActionEditNode extends Action {    \r\n    type: typeof EDIT_NODE,\r\n    node:FarmNode\r\n}\r\nexport interface ActionEditBeam extends Action {    \r\n    type: typeof EDIT_BEAM,\r\n    beam:Beam\r\n}\r\n\r\nexport type FarmActions = (\r\n    ActionAddNode | \r\n    ActionAddBeam |\r\n    ActionAddForce |\r\n    ActionDeleteEntity |\r\n    ActionEditNode | \r\n    ActionEditBeam\r\n);","import uuid from 'uuid'\r\n\r\nexport interface IEntity {\r\n    id?: string\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n    type?:'entity' | 'node' | 'beam' | 'force',\r\n    withNewPosition?: boolean\r\n}\r\nexport interface Entity {    \r\n    id: string\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    type:'entity' | 'node' | 'beam' | 'force',\r\n    withNewPosition:boolean\r\n}\r\n\r\nexport const createEntity = (props:IEntity = {}) :Entity => {\r\n    const { x, y, name, angle, id, newX, newY, type, withNewPosition } = props\r\n    const entity : Entity =  {\r\n        id: id || uuid(),\r\n        x: x || 0,\r\n        y: y || 0,\r\n        angle: angle || 0,\r\n        name: name || \"\",\r\n        newX: newX || x || 0,\r\n        newY: newY || y || 0,\r\n        type:type || 'entity',\r\n        withNewPosition: withNewPosition || false\r\n    }\r\n    entity.name = name || entity.id\r\n    return entity\r\n\r\n}\r\nexport const instanceOfEntity = (object: any): object is Entity => object && object.type === 'entity';","import { IEntity, Entity, createEntity } from \"./ModelEntity\";\r\n\r\nexport interface IForce extends IEntity {\r\n    value?: number,\r\n    angle?: 0 | 90,\r\n    nodeID?: string\r\n}\r\n\r\nexport interface Force extends Entity {\r\n    value: number\r\n    angle: 0 | 90\r\n    nodeID: string\r\n}\r\nexport const createForce = (props: IForce = {}): Force => {\r\n    const {  angle, nodeID, value } = props\r\n    const entity = createEntity(props)\r\n    const force : Force =  {\r\n        ...entity,\r\n        type:\"force\",\r\n        angle: angle || 0,\r\n        nodeID: nodeID || \"\",\r\n        value: value || 0\r\n    }\r\n    return force\r\n}\r\nexport const instanceOfForce = (object: any): object is Force => object && object.type === 'force';","import { IEntity, Entity, createEntity } from \"./ModelEntity\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: string\r\n    endConnectedNodeID?: string\r\n    endX?: number,\r\n    endY?: number,\r\n    newEndX?:number,\r\n    newEndY?:number,\r\n    startForce?:number,\r\n    endForce?:number\r\n}\r\n\r\nexport interface Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: string \r\n    endConnectedNodeID: string \r\n    endX: number\r\n    endY: number\r\n    newEndX:number,\r\n    newEndY:number,\r\n    startForce:number,\r\n    endForce:number\r\n}\r\nexport const createBeam = (props: IBeam = {}): Beam => {\r\n    const { length, startConnectedNodeID, endConnectedNodeID, endX, endY,newEndX,newEndY,startForce, endForce } = props\r\n    const entity = createEntity(props)\r\n    const bram: Beam = {\r\n        ...entity,\r\n        type: \"beam\",\r\n        length: length || 0,\r\n        startConnectedNodeID: startConnectedNodeID || \"\",\r\n        endConnectedNodeID: endConnectedNodeID || \"\",\r\n        endX: endX || entity.x || 0,\r\n        endY: endY || entity.y || 0,\r\n        newEndX: newEndX || endX || entity.x || 0,\r\n        newEndY: newEndY || endY || entity.y || 0,\r\n        startForce:startForce || 0,\r\n        endForce:endForce || 0,\r\n    }\r\n    return bram\r\n}\r\n\r\n\r\nexport const instanceOfBeam = (object: any): object is Beam => object && object.type === 'beam';\r\n","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const reducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { FarmReducer, FarmTypes } from './farm';\r\nimport { HomeReducer, HomeTypes } from './home';\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\r\n\r\n\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : FarmReducer.reducer,\r\n    home : HomeReducer.reducer\r\n})\r\n\r\nexport type AppState = ReturnType<typeof mainReducer> \r\nexport type AppActions = FarmTypes.FarmActions | HomeTypes.HomeActions\r\n\r\nexport default createStore(mainReducer, applyMiddleware(thunk as ThunkMiddleware<AppState,AppActions>));\r\n","import * as React from 'react'\r\nimport { Circle,  Text, Group, Arrow, Line } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { FarmNode, NodeFixation } from 'src/models/Farm/ModelNode';\r\nimport { consts } from 'src/static';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { KonvaEventObject } from 'konva/types/Node';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst size = consts.UI.nodeSize\r\ninterface UINodeProps {\r\n    node: FarmNode,\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, node: FarmNode): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, node: FarmNode): void\r\n    mode: UIModes,\r\n    selected: boolean,    \r\n    viewNewPos?:boolean\r\n}\r\nclass UINode extends React.Component<UINodeProps>{\r\n    constructor(props: UINodeProps) {\r\n        super(props)\r\n        this.viewForce = this.viewForce.bind(this)\r\n    }\r\n    shouldComponentUpdate(nextProps: UINodeProps) {\r\n        return (\r\n            nextProps.node !== this.props.node ||\r\n            nextProps.mode !== this.props.mode ||\r\n            nextProps.selected !== this.props.selected\r\n        )\r\n    }\r\n\r\n    viewForce(force: Force) {\r\n        const {viewNewPos } = this.props\r\n        if(!viewNewPos)  return (\r\n            <React.Fragment>\r\n                <Arrow\r\n                    points={[\r\n                        0,\r\n                        0,\r\n                        consts.UI.cellSize,\r\n                        0,\r\n                    ]}\r\n                    stroke={UI.theme.palette.grey[300]}\r\n                    strokeWidth={size / 3}\r\n                    shadowBlur={2}\r\n                    pointerLength={consts.UI.cellSize / 10}\r\n                    pointerWidth={consts.UI.cellSize / 10}\r\n                    hitStrokeWidth={size * 2}\r\n                    rotation={force.value > 0 ? force.angle : 180 + force.angle}\r\n                />\r\n                <Text\r\n                    x={force.angle === 0 ? (force.value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize) : consts.UI.cellSize / 3}\r\n                    y={force.angle === 90 ? (force.value > 0 ? consts.UI.cellSize / 3 : -consts.UI.cellSize / 2) : -consts.UI.cellSize / 1.5}\r\n                    text={force.value + \" H\"}\r\n                />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n    viewFixation(angle: 0 | 90) {\r\n        return (<Group\r\n            x={0}\r\n            y={0}\r\n            rotation={angle}\r\n        >\r\n            <Line\r\n                points={[\r\n                    0, 0,\r\n                    0, consts.UI.cellSize,\r\n                    -consts.UI.cellSize / 2, consts.UI.cellSize,\r\n                    consts.UI.cellSize / 2, consts.UI.cellSize,\r\n                ]}\r\n                stroke={UI.theme.palette.grey[300]}\r\n                strokeWidth={size / 4}\r\n                shadowBlur={2}\r\n            />\r\n            <Circle\r\n                radius={size / 2}\r\n                fill={UI.theme.palette.grey[500]}\r\n                x={0}\r\n                y={consts.UI.cellSize - (size / 1.7)}\r\n            />\r\n        </Group>)\r\n    }\r\n    render() {\r\n        const { onClick, mode, selected, node, viewNewPos } = this.props\r\n        const x = viewNewPos ? node.newX / consts.UI.koefOnGrid : node.x / consts.UI.koefOnGrid\r\n        const y = viewNewPos ? node.newY / consts.UI.koefOnGrid : node.y / consts.UI.koefOnGrid\r\n        return (\r\n            <Group\r\n            \r\n                opacity={viewNewPos ? 0.3 : 1}\r\n                x={x}\r\n                y={y}\r\n                _useStrictMode\r\n                onClick={viewNewPos ? () => {} : (e: any) => onClick(e, node)}\r\n            >\r\n                {node.forceX && this.viewForce(node.forceX)}\r\n                {node.forceY && this.viewForce(node.forceY)}\r\n                {node.fixation === NodeFixation.X && this.viewFixation(90)}\r\n                {node.fixation === NodeFixation.Y && this.viewFixation(0)}\r\n                {node.fixation === NodeFixation.XY && this.viewFixation(90)}\r\n                {node.fixation === NodeFixation.YX && this.viewFixation(0)}\r\n                <Circle\r\n                    radius={size}\r\n                    x={0}\r\n                    y={0}\r\n                    fill={UI.getNodeColor(node)}\r\n                    shadowBlur={selected && !viewNewPos ? 8 : 2}\r\n                    stroke={UI.getNodeStorkeColor(node,mode)}\r\n                    strokeWidth={UI.getNodeStorkeWidth(node, mode)}\r\n                    hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n                />\r\n                <Text\r\n                    x={-size}\r\n                    y={-size / 2 - 1}\r\n                    align=\"center\"\r\n                    fontSize={18}\r\n                    fill=\"#fff\"\r\n                    shadowBlur={8}\r\n                    fontFamily='Trebuchet MS'\r\n                    width={size * 2}\r\n                    verticalAlign=\"middle\"\r\n                    text={node.name}\r\n                />\r\n                <Circle\r\n                    radius={size}\r\n                    x={0}\r\n                    y={0}\r\n                    onDragEnd={(e: KonvaEventObject<DragEvent>) => {\r\n                        e.target.to({\r\n                            x: 0,\r\n                            y: 0,\r\n                        })\r\n                    }}\r\n                    hitStrokeWidth={viewNewPos ? 0 : size * 2}\r\n                    draggable={mode === UIModes.move && !node.isStatic && !viewNewPos}\r\n                    onMouseEnter={viewNewPos ? () => {} : (e: any) => UI.nodeMouseEnter(e, node, mode)}\r\n                    onMouseLeave={viewNewPos ? () => {} :(e: any) => UI.nodeMouseLeave(e)}\r\n                    onDragMove={(e: KonvaEventObject<DragEvent>) => this.props.drag(e, node)}\r\n                />\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default UINode","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { consts } from 'src/static';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\ninterface UIBeamProps {\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    mode: UIModes,\r\n    selected: boolean,\r\n    beam: Beam,\r\n    viewNewPos?: boolean\r\n}\r\n\r\nclass UIBeam extends React.Component<UIBeamProps>{\r\n\r\n    shouldComponentUpdate(nextProps: UIBeamProps) {\r\n        const { beam, mode, selected } = this.props\r\n        return (\r\n            nextProps.beam !== beam ||\r\n            nextProps.mode !== mode ||\r\n            nextProps.selected !== selected\r\n        )\r\n    }\r\n    render() {\r\n        const { onClick, mode, selected, beam, viewNewPos } = this.props\r\n        const size = consts.UI.beamSize\r\n\r\n        let points: number[] = [\r\n            beam.x / consts.UI.koefOnGrid,\r\n            beam.y / consts.UI.koefOnGrid,\r\n            beam.endX / consts.UI.koefOnGrid,\r\n            beam.endY / consts.UI.koefOnGrid\r\n        ]\r\n        if (viewNewPos)\r\n            points = [\r\n                beam.newX / consts.UI.koefOnGrid,\r\n                beam.newY / consts.UI.koefOnGrid,\r\n                beam.newEndX / consts.UI.koefOnGrid,\r\n                beam.newEndY / consts.UI.koefOnGrid\r\n            ]\r\n\r\n        return (\r\n            <Line\r\n                opacity={viewNewPos ? 0.3 : 1}\r\n                points={points}\r\n                stroke={UI.getBeamColor(beam)}\r\n                strokeWidth={size}\r\n                shadowBlur={selected && !viewNewPos ? 8 : 2}\r\n\r\n                hitStrokeWidth={viewNewPos ? 0 : size * 4}\r\n                onClick={viewNewPos ? () => { } : (e: any) => onClick(e, beam)}\r\n                onMouseEnter={viewNewPos ? () => { } : (e: any) => UI.beamMouseEnter(e, beam, mode)}\r\n                onMouseLeave={viewNewPos ? () => { } : (e: any) => UI.beamMouseLeave(e)}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\nexport default UIBeam","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst UIGrid: React.FC<UIGridProps> = ({ widthCell, heightCell, heightBox, widthBox }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    const viewRows = () => {\r\n        const rows = []\r\n        for (let index = 0; index < countOfY; index++) {\r\n            rows.push(<Line\r\n                points={[\r\n                    0,\r\n                    index * heightCell,\r\n                    widthBox,\r\n                    index * heightCell,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const viewColumns = () => {\r\n        const columns = []\r\n        for (let index = 0; index < countOfX; index++) {\r\n\r\n            columns.push(<Line\r\n                points={[\r\n                    index*widthCell,\r\n                    0,\r\n                    index*widthCell,\r\n                    heightBox,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n\r\n        }\r\n        return columns\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns()}\r\n            {viewRows()}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIGrid","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Box } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\nimport ScrollBar from 'react-custom-scrollbars';\r\nimport { UIBeam, UINode } from '..';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { IFarm } from 'src/models/Farm/FarmTypes';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: \"#ddd\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: 8,\r\n    }\r\n})\r\n\r\nexport interface UIStageProps extends IFarm, WithStyles<typeof styles> {\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    stageHeight: number,\r\n    stageWidth: number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity): void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent | TouchEvent>): void,\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity): void,\r\n    stage: React.RefObject<Stage & Konva.Stage>,\r\n    viewNewPos: boolean\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = ({ classes, stage, stageHeight, stageWidth, onClick, onMouseMove, onDrag, beams, nodes, uiMode, selectedEntity, viewNewPos }) => {\r\n    return (\r\n        <ScrollBar\r\n            autoHide>\r\n            <Box style={{ width: stageWidth + consts.UI.sidebarWidth * 2 + 20, height: stageHeight + consts.UI.sidebarWidth }}\r\n                className={classes.root}>\r\n                <Stage\r\n                    height={stageHeight}\r\n                    width={stageWidth}\r\n                    style={{ height: stageHeight, width: stageWidth }}\r\n                    className={classes.stage}\r\n                    onClick={onClick}\r\n                    onMouseMove={onMouseMove}\r\n                    ref={stage}\r\n                >\r\n\r\n                    <Layer className=\"layer\" >\r\n\r\n                        <UIGrid\r\n                            heightCell={consts.UI.cellSize}\r\n                            widthCell={consts.UI.cellSize}\r\n                            heightBox={stageHeight}\r\n                            widthBox={stageWidth}\r\n                        />\r\n\r\n                        {beams.map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === beam}\r\n                            />\r\n                        ))}\r\n\r\n                        {nodes.map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={onDrag}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === node}\r\n                            />\r\n                        ))}\r\n\r\n                        {viewNewPos && beams.map(beam => (\r\n                            <UIBeam\r\n                                key={beam.id}\r\n                                beam={beam}\r\n                                mode={uiMode}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === beam}\r\n                                viewNewPos={true}\r\n                            />\r\n                        ))}\r\n                        {viewNewPos && nodes.map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                mode={uiMode}\r\n                                drag={onDrag}\r\n                                onClick={onClick}\r\n                                selected={selectedEntity === node}\r\n                                viewNewPos={true}\r\n                            />\r\n                        ))}\r\n                    </Layer>\r\n                </Stage>\r\n            </Box>\r\n\r\n        </ScrollBar>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIStage)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip, Typography, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport { UI } from 'src/static/const';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: UI.sidebarWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(10),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    title:{\r\n        padding:theme.spacing(1)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface SidebarProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    title? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface SidebarState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\nconst localStr = \"Sidebar_state:\"\r\nclass Sidebar extends React.PureComponent<SidebarProps, SidebarState>{\r\n    constructor(props: SidebarProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: true,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    componentWillMount(){\r\n        if(this.props.title){\r\n            const localState = localStorage.getItem(localStr+this.props.title)\r\n            if(localState)\r\n            this.setState({open: localState === \"true\"})\r\n        }\r\n    }\r\n    switchDrawer() {\r\n        localStorage.setItem(localStr+this.props.title,(!this.state.open ? \"true\" : \"false\"))\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, title, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <Typography \r\n                        variant='body2'\r\n                        align=\"center\"\r\n                        className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider/>\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={title}\r\n                    open={title !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 15 : UI.sidebarWidth + 15 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 15 : UI.sidebarWidth + 15 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import * as React from 'react'\r\nimport clsx from 'clsx'\r\nimport { Theme, createStyles, withStyles, AppBar, Toolbar } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { img } from 'src/static/const';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBarProps } from '@material-ui/core/AppBar';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n        marginRight: theme.spacing(4),\r\n        marginLeft: theme.spacing(2),\r\n        '& img': {\r\n            width: 50,\r\n            height: 'auto'\r\n        }\r\n    }\r\n})\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles>, React.HTMLAttributes<HTMLDivElement> {\r\n    color?: AppBarProps['color'],\r\n    position?: AppBarProps['position'],\r\n    withLogo?: boolean\r\n}\r\n\r\nconst UIAppBar: React.FC<UIToolBarProps> = ({ classes, children, className, color, position, withLogo = true }) => {\r\n    const viewLogo = () => {\r\n        if (withLogo) return ((\r\n            <Link\r\n                to={'/'}\r\n                className={classes.logo}\r\n            >\r\n                <img\r\n                    alt=\"Logo Icon\"\r\n                    src={img.bridgeIcon_2}\r\n                />\r\n            </Link>\r\n        ))\r\n    }\r\n    return (\r\n        <AppBar\r\n            position={position || 'fixed'}\r\n            className={clsx(classes.appBar, className)}\r\n            color={color || 'primary'}>\r\n            <Toolbar >\r\n                {viewLogo()}\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIAppBar)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Tooltip } from '@material-ui/core';\r\nimport {  ToggleButton } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButtonProps } from '@material-ui/lab/ToggleButton';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    btn: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        borderRadius: '50% !important',\r\n        border: `1px solid ${fade(theme.palette.action.active, 0.2)} !important`,\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.light,\r\n\r\n        '&$selected': {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            '@media (hover: none)': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            '&$disabled': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n        },\r\n    },\r\n    selected: {},\r\n})\r\n\r\n\r\n\r\nexport interface MyToggleButtonProps extends WithStyles<typeof styles> {\r\n    selected: boolean,\r\n    value?:any,\r\n    name?:string,\r\n    icon:JSX.Element\r\n}\r\n\r\nconst MyToggleButton: React.FC<MyToggleButtonProps & ToggleButtonProps> = ({  selected, classes , value, name, icon, ...other}) => {\r\n    return (\r\n        <ToggleButton\r\n            key={name}\r\n            value={value}\r\n            className={clsx(\r\n                classes.btn,\r\n                {\r\n                    [classes.selected]: selected,\r\n                }\r\n            )}\r\n            {...other}\r\n            \r\n        >\r\n            <Tooltip title={name}>\r\n                {icon}\r\n            </Tooltip>\r\n        </ToggleButton>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MyToggleButton)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Button } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { AppBar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n\r\n    },\r\n    btn:{\r\n        marginLeft:theme.spacing(2),\r\n        marginRight:theme.spacing(2)\r\n    },\r\n    grow:{\r\n        flexGrow:1\r\n    }\r\n})\r\n\r\nexport interface UIHeaderProps extends WithStyles<typeof styles> {\r\n    hundleSave?:(e: React.FormEvent<HTMLButtonElement>) => void,\r\n    hundleClear?:(e: React.FormEvent<HTMLButtonElement>) => void,\r\n    hundleCalculate?:(e: React.FormEvent<HTMLButtonElement>) => void,\r\n    disabled?:boolean\r\n}\r\n\r\nconst UIHeader: React.FC<UIHeaderProps> = (\r\n    { \r\n        classes, \r\n        hundleSave = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n        hundleClear = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n        hundleCalculate = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n        disabled = false\r\n    }) => {\r\n\r\n    return (\r\n        <AppBar \r\n            className={classes.root}\r\n        >\r\n            <div className={classes.grow}/>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleCalculate}\r\n                disabled={disabled}\r\n            >\r\n                Расчет\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleSave}\r\n                disabled={disabled}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleClear}\r\n                disabled={disabled}\r\n            >\r\n                Очистить\r\n            </Button>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIHeader)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, List, ListItem, ListItemText, Collapse, ListItemIcon, Divider, Badge, Box } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { GpsNotFixed as NodeIcon, Timeline as BeamIcon, List as TreePanelIcon, ExpandLess, ExpandMore, Brightness1 as CircleIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { FarmNode, instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { UI } from 'src/utils';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n        paddingLeft: theme.spacing(6)\r\n    },\r\n})\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes: FarmNode[],\r\n    beams: Beam[]\r\n    selectedEntity: Entity | undefined\r\n    onSelect(entity: Entity): void\r\n}\r\n\r\ninterface TreeState {\r\n    tabs: Map<string, boolean>,\r\n    open: boolean,\r\n\r\n}\r\n\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            tabs: new Map()\r\n        }\r\n        this.openTab = this.openTab.bind(this)\r\n        this.viewListItem = this.viewListItem.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        const { tabs } = this.state\r\n        tabs.set('Узлы', true)\r\n        tabs.set('Стержни', true)\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    openTab(tab: string): void {\r\n        const { tabs } = this.state\r\n        tabs.set(tab, !tabs.get(tab))\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    viewListItem(entityArray: Entity[], title: string, icon?: JSX.Element) {\r\n        const { selectedEntity, classes, onSelect } = this.props\r\n        const { tabs } = this.state\r\n        return (\r\n            <Box>\r\n                <ListItem button onClick={() => this.openTab(title)}>\r\n                    {icon && (\r\n                        <ListItemIcon>\r\n                            <Badge badgeContent={entityArray.length} color=\"secondary\">\r\n                                {icon}\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                    )}\r\n                    <ListItemText primary={title} />\r\n                    {tabs.get(title) ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={tabs.get(title)} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {entityArray.map(item => (\r\n                            <ListItem\r\n                                button\r\n                                className={classes.nested}\r\n                                key={item.id}\r\n                                selected={selectedEntity === item}\r\n                                onClick={(e) => onSelect(item)}\r\n                            >\r\n                                {instanceOfNode(item) && (\r\n                                    <ListItemIcon>\r\n                                        <CircleIcon style={{ color: UI.getNodeColor(item) }} />\r\n                                    </ListItemIcon>\r\n                                )}\r\n                                <ListItemText primary={item.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </Box>\r\n        )\r\n    }\r\n    render() {\r\n        const { nodes, beams } = this.props\r\n        beams.sort((a: Beam, b: Beam) => {\r\n            return a.name > b.name ? 1 : -1\r\n        })\r\n        return (\r\n            <Sidebar\r\n                anchor=\"left\"\r\n                title=\"Структура проекта\"\r\n                btnIcon={(<TreePanelIcon />)}\r\n            >\r\n\r\n                {this.viewListItem(nodes, 'Узлы', (<NodeIcon />))}\r\n                {this.viewListItem(beams, 'Стержни', (<BeamIcon />))}\r\n\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import { FarmCalcProps, FarmCalcData, ICoord } from \"./FarmTypes\";\r\nimport { MyMath } from \"src/utils\";\r\n\r\nexport class FarmCalc {\r\n\r\n    private static farmCalcDebug = process.env.REACT_APP_FARM_CALC_DEBUG === \"true\" || true\r\n    static async init(NodeCoord: ICoord[], NodeV: ICoord[], Forces: number[], LinkNodes: ICoord[], LinkLength: number[], props: FarmCalcProps = {}): Promise<FarmCalcData> {\r\n\r\n        const area: number = props.area || 225 //Площадь стержней\r\n        const ModUpr: number = props.modUpr || 72000 // Модуль упругости \r\n\r\n        const Kmest: number[][][] = [] // Матрица жесткости\r\n        const Lambda0: ICoord[] = []\r\n        const Lambda: number[][][] = []\r\n        const Kobs: number[][][] = []\r\n        const IndexV: number[][] = []\r\n\r\n        let K: number[][] = []\r\n        let Va: number[] = []\r\n        let Vi: ICoord[] = []\r\n        let Vij: number[][][] = []\r\n        let V: number[][][] = []\r\n        let P: number[][][] = []\r\n\r\n        LinkNodes.forEach((beam, i) => {\r\n            Kmest.push(this.Kmest_i(area, ModUpr, LinkLength[i]))\r\n\r\n            const l_i = this.Lambda_i(NodeCoord[LinkNodes[i].x], NodeCoord[LinkNodes[i].y], LinkLength[i])\r\n            Lambda0.push(l_i)\r\n            Lambda.push([\r\n                [l_i.x, l_i.y, 0, 0],\r\n                [0, 0, l_i.x, l_i.y]\r\n            ])\r\n            Kobs.push(this.Kobs_i(area, ModUpr, LinkLength[i], Lambda0[i]))\r\n            IndexV.push(this.IndexV_i(NodeV[LinkNodes[i].x], NodeV[LinkNodes[i].y]))\r\n        })\r\n\r\n        const N_Link = LinkNodes.length\r\n        const N_Nodes = NodeV.length\r\n        const N_DOF = Math.max(...NodeV.map(({ x, y }) => Math.max(x, y)))\r\n\r\n        K = this.K(N_DOF, IndexV, Kobs)\r\n        if(MyMath.getDetMatrix(K) === 0 ) throw Error(\"Данная конструкция (статически неопределимая) является механизмом\")\r\n\r\n        Va = this.SquareRoot(K, Forces)\r\n        Vi = this.Vi(NodeV, Va)\r\n        Vij = this.Vij(LinkNodes, Vi)\r\n\r\n        for (let i = 0; i < N_Link; i++) {\r\n            V.push(this.V_i(Lambda[i], Vij[i]))\r\n            P.push(this.P_i(Kmest[i], V[i]))\r\n        }\r\n\r\n        if (this.farmCalcDebug) {\r\n            console.log(\"NodeCoord, LinkNodes, NodeV\", NodeCoord, LinkNodes, NodeV);\r\n            console.log(\"Kobs, Kmest\", Kobs, Kmest);\r\n            console.log(\"Lambda0, Lambda,\", Lambda0, Lambda);\r\n            console.log(\"IndexV\", IndexV);\r\n            console.log(\"N_Link, N_Nodes, N_DOF\", N_Link, N_Nodes, N_DOF);\r\n            console.log(\"K, Force\", K, Forces);\r\n            console.log(\"Va\", Va);\r\n            console.log(\"Vi\", Vi);\r\n            console.log(\"Vij\", Vij);\r\n            console.log(\"V\", V);\r\n            console.log(\"P\", P);\r\n        }\r\n\r\n        return { P, LinkNodes, Vi }\r\n    }\r\n\r\n    private static Kmest_i(area: number, modUpr: number, length_i: number) {\r\n        const mnoz = (area * modUpr) / length_i\r\n        const result = []\r\n        result.push([mnoz, -mnoz])\r\n        result.push([-mnoz, mnoz])\r\n        return result\r\n    }\r\n    private static Lambda_i(nodeCoordOfX: ICoord, nodeCoordOfY: ICoord, length_i: number): ICoord {\r\n        const l_x = (nodeCoordOfY.x - nodeCoordOfX.x) / length_i\r\n        const l_y = (nodeCoordOfY.y - nodeCoordOfX.y) / -length_i\r\n        return { x: l_x, y: l_y }\r\n    }\r\n    private static Kobs_i(area: number, modUpr: number, length_i: number, l_i: ICoord) {\r\n        const mnoz = (area * modUpr) / length_i\r\n        const LTxL: ICoord[] = [{ x: l_i.x * l_i.x, y: l_i.x * l_i.y }, { x: l_i.x * l_i.y, y: l_i.y * l_i.y }]\r\n        const _LTxL: ICoord[] = [{ x: -l_i.x * l_i.x, y: -l_i.x * l_i.y }, { x: -l_i.x * l_i.y, y: -l_i.y * l_i.y }]\r\n        const augmnet1 = []\r\n        const augment2 = []\r\n        for (let i = 0; i < 2; i++) {\r\n            augmnet1.push({ x1: LTxL[i].x, y1: LTxL[i].y, x2: _LTxL[i].x, y2: _LTxL[i].y })\r\n            augment2.push({ x1: _LTxL[i].x, y1: _LTxL[i].y, x2: LTxL[i].x, y2: LTxL[i].y })\r\n        }\r\n        const stack: { x1: number, y1: number, x2: number, y2: number }[] = Array.prototype.concat(augmnet1, augment2)\r\n        const result = stack.map(({ x1, y1, x2, y2 }) => ([\r\n            x1 * mnoz,\r\n            y1 * mnoz,\r\n            x2 * mnoz,\r\n            y2 * mnoz\r\n        ]))\r\n        return result\r\n\r\n    }\r\n    private static IndexV_i(nodeV1: ICoord, nodeV2: ICoord): number[] {\r\n        return [\r\n            nodeV1.x,\r\n            nodeV1.y,\r\n            nodeV2.x,\r\n            nodeV2.y\r\n        ]\r\n    }\r\n    private static K(n_dof: number, indexV: number[][], k_obs: number[][][]) {\r\n        const K: number[][] = []\r\n\r\n        for (let t = 0; t < n_dof; t++) {\r\n            const row: number[] = []\r\n            for (let r = 0; r < n_dof; r++) {\r\n                row.push(0)\r\n            }\r\n            K.push(row)\r\n        }\r\n\r\n        for (let e = 0; e < indexV.length; e++) {\r\n            for (let i = 0; i < 4; i++) {\r\n                const A = indexV[e][i]\r\n                if (A !== 0)\r\n                    for (let j = 0; j < 4; j++) {\r\n                        const B = indexV[e][j]\r\n                        if (B !== 0)\r\n                            K[B - 1][A - 1] = K[B - 1][A - 1] + k_obs[e][i][j]\r\n                    }\r\n\r\n            }\r\n        }\r\n        return K\r\n    }\r\n    private static SquareRoot(_a: number[][], _b: number[]) {\r\n        if (_a.length !== _b.length) {\r\n            throw Error(\"SquareRoot - Массивы должны быть одинаковой длины\")\r\n        }\r\n\r\n        const n = _b.length\r\n        const a: number[][] = []\r\n        const b: number[] = []\r\n        const x: number[] = []\r\n        const d: number[] = []\r\n        const s: number[][] = []\r\n        const y: number[] = []\r\n\r\n        for (let i = 0; i < n + 1; i++) {\r\n            const row: number[] = []\r\n            for (let r = 0; r < n; r++) {\r\n                row.push(0)\r\n            }\r\n            s.push(row)\r\n            a.push(row)\r\n            b.push(0)\r\n            x.push(0)\r\n            d.push(0)\r\n            y.push(0)\r\n        }\r\n\r\n        for (let j = 1; j <= n; j++) {\r\n            for (let r = 0; r <= n; r++) {\r\n                a[j][r] = _a[j - 1][r - 1]\r\n            }\r\n            b[j] = _b[j - 1]\r\n        }\r\n\r\n        d[1] = MyMath.signum(a[1][1]);\r\n        s[1][1] = Math.sqrt(Math.abs(a[1][1]));\r\n        for (let j = 2; j <= n; j++) {\r\n            s[1][j] = a[1][j] / (s[1][1] * d[1]);\r\n        }\r\n\r\n        for (let i = 2; i <= n; i++) {\r\n            let sum = 0;\r\n            for (let k = 1; k <= i - 1; k++) {\r\n                sum += s[k][i] * s[k][i] * d[k];\r\n            }\r\n            d[i] = MyMath.signum(a[i][i] - sum);\r\n            s[i][i] = Math.sqrt(Math.abs(a[i][i] - sum));\r\n\r\n            const l = 1 / (s[i][i] * d[i]);\r\n            for (let j = i + 1; j <= n; j++) {\r\n                let SDSsum = 0;\r\n                for (let k = 1; k <= i - 1; k++) {\r\n                    SDSsum += s[k][i] * d[k] * s[k][j];\r\n                }\r\n                s[i][j] = l * (a[i][j] - SDSsum);\r\n            }\r\n        }\r\n\r\n        y[1] = b[1] / (s[1][1] * d[1]);\r\n\r\n        for (let i = 2; i <= n; i++) {\r\n            let sum = 0;\r\n\r\n            for (let j = 1; j <= i - 1; j++) {\r\n                sum += s[j][i] * d[j] * y[j];\r\n            }\r\n\r\n            y[i] = (b[i] - sum) / (s[i][i] * d[i]);\r\n        }\r\n\r\n        x[n] = y[n] / s[n][n];\r\n\r\n        for (let i = n - 1; i >= 1; i--) {\r\n            let sum = 0;\r\n\r\n            for (let k = i + 1; k <= n; k++) {\r\n                sum += s[i][k] * x[k];\r\n            }\r\n\r\n            x[i] = (y[i] - sum) / s[i][i];\r\n        }\r\n\r\n        const result: number[] = []\r\n        x.forEach((item, i) => {\r\n            if (i !== 0) result.push(item)\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    private static Vi(nodeV: ICoord[], Va: number[]) {\r\n        const vi: ICoord[] = []\r\n        for (let e = 0; e < nodeV.length; e++) {\r\n            const q: ICoord = { ...nodeV[e] }\r\n            q.x = q.x === 0 ? 0 : Va[q.x - 1]\r\n            q.y = q.y === 0 ? 0 : Va[q.y - 1]\r\n            vi.push(q)\r\n        }\r\n        return vi\r\n    }\r\n    private static Vij(linkNodes: ICoord[], vi: ICoord[]) {\r\n        const vij: number[][][] = []\r\n        for (let e = 0; e < linkNodes.length; e++) {\r\n            const n_start = linkNodes[e].x\r\n            const n_ends = linkNodes[e].y\r\n\r\n            vij.push([\r\n                [vi[n_start].x],\r\n                [vi[n_start].y],\r\n                [vi[n_ends].x],\r\n                [vi[n_ends].y],\r\n            ])\r\n        }\r\n        return vij\r\n    }\r\n    private static V_i(l: number[][], vij: number[][]) {\r\n        const v: number[][] = MyMath.multMatrxiV2(l, vij)\r\n        return v\r\n    }\r\n    private static P_i(k: number[][], v: number[][]) {\r\n        const p: number[][] = MyMath.multMatrxiV2(k, v)\r\n        return p\r\n    }\r\n}\r\nexport default FarmCalc","import FarmCalc from './FarmCalc';\r\nimport { FarmNode, createNode, INode, NodeFixation } from \"./ModelNode\";\r\nimport { Beam, IBeam, createBeam, instanceOfBeam } from \"./ModelBeam\";\r\nimport { Entity } from \"./ModelEntity\";\r\nimport uuid from 'uuid'\r\nimport { MyMath } from \"src/utils\";\r\nimport { IFarm, ICoord, FarmCalcData, FarmCalcProps } from './FarmTypes';\r\nimport { consts } from 'src/static';\r\n\r\nexport class Farm {\r\n    static addNode(nodes: FarmNode[], props: INode): FarmNode | null {\r\n        if (nodes.length > 12) return null\r\n        const { x, y } = props\r\n        const oldNode = nodes.find(item => item.x === x && item.y === y)\r\n        if (oldNode) return null\r\n        const id = uuid()\r\n        if (!id) return null\r\n        const name = (nodes.length + 1) + \"\"\r\n        const node = createNode({\r\n            ...props,\r\n            x,\r\n            y,\r\n            name: props.name || name,\r\n            id,\r\n        })\r\n        return node\r\n    }\r\n    static addBeam(beams: Beam[], props: IBeam): Beam | null {\r\n        if (beams.length > 36) return null\r\n        let x = props.x\r\n        let y = props.y\r\n        if (props.x && props.y) {\r\n            x = props.x\r\n            y = props.y\r\n        }\r\n        const id = uuid()\r\n        if (!id) return null\r\n        const beam = createBeam({\r\n            ...props,\r\n            x,\r\n            y,\r\n            id,\r\n        })\r\n        return beam\r\n    }\r\n    static moveEntity(entity: Entity, x: number, y: number) {\r\n\r\n        entity.x = x\r\n        entity.y = y\r\n        if (instanceOfBeam(entity)) {\r\n            entity.length = this.getBeamLength(entity)\r\n        }\r\n    }\r\n    static moveBeamEnd(beam: Beam, x: number, y: number) {\r\n        beam.endX = x\r\n        beam.endY = y\r\n        beam.length = this.getBeamLength(beam)\r\n    }\r\n\r\n    static findOldBeam(node: FarmNode, beam: Beam, checkingBeam: Beam) {\r\n        return (\r\n            (checkingBeam.startConnectedNodeID === beam.startConnectedNodeID && checkingBeam.endConnectedNodeID === node.id) ||\r\n            (checkingBeam.startConnectedNodeID === node.id && checkingBeam.endConnectedNodeID === beam.startConnectedNodeID) ||\r\n            (checkingBeam.id === beam.id && checkingBeam.startConnectedNodeID === node.id)\r\n        )\r\n    }\r\n    static getBeamLength(beam: Beam): number {\r\n        return Math.round(MyMath.lengthBePoints(beam.x, beam.y, beam.endX, beam.endY) - 0.5)\r\n    }\r\n    static setNodesName(nodes: FarmNode[]) {\r\n        return nodes.map((node, index) => ({ ...node, name: (index + 1) + \"\" }))\r\n    }\r\n    static setBeamsName(_beams: Beam[], nodes: FarmNode[]): Beam[] {\r\n\r\n        const nodesMap: Map<string, FarmNode> = new Map()\r\n        nodes.forEach(node => {\r\n            nodesMap.set(node.id, node)\r\n        })\r\n        let name: string = \"\"\r\n\r\n        let beams = _beams.map(beam => {\r\n            if (!beam.startConnectedNodeID || !beam.endConnectedNodeID) return beam\r\n            const startNode = nodesMap.get(beam.startConnectedNodeID)\r\n            const endNode = nodesMap.get(beam.endConnectedNodeID)\r\n            if (startNode && endNode) {\r\n                if (startNode.name < endNode.name) name = `${startNode.name} - ${endNode.name}`\r\n                else name = `${endNode.name} - ${startNode.name}`\r\n\r\n                return {\r\n                    ...beam,\r\n                    name: name\r\n                }\r\n            }\r\n            return beam\r\n        })\r\n            .sort((a: Beam, b: Beam) => {\r\n                const numsA = a.name.split(' - ')\r\n                const numA = Number(numsA[0] + numsA[1])\r\n                const numsB = b.name.split(' - ')\r\n                const numB = Number(numsB[0] + numsB[1])\r\n\r\n                return numA > numB ? 1 : -1\r\n            })\r\n        return beams\r\n    }\r\n    static sortNodes(_nodes: FarmNode[]) {\r\n        let nodes = [..._nodes]\r\n        nodes = nodes.sort((a: FarmNode, b: FarmNode) => {\r\n            if (a.y < b.y) return -1\r\n            else if (a.y === b.y) if (a.x < b.x) return -1; else return 1\r\n            else return 1\r\n        })\r\n        nodes = this.setNodesName(nodes)\r\n        return nodes\r\n    }\r\n    static update(_nodes: FarmNode[], _beams: Beam[]): IFarm {\r\n        let nodes = [..._nodes]\r\n        let beams = [..._beams]\r\n        nodes = Farm.setNodesName(nodes)\r\n        beams = Farm.setBeamsName(beams, nodes)\r\n        return { nodes, beams }\r\n    }\r\n    static normalize(_nodes: FarmNode[], _beams: Beam[]): IFarm {\r\n        let nodes = [..._nodes]\r\n        let beams = [..._beams]\r\n        nodes = _nodes.filter(node => (node.beamsID.length !== 0 || node.isStatic))\r\n        nodes = Farm.sortNodes(nodes)\r\n        beams = Farm.setBeamsName(_beams, nodes)\r\n        return {\r\n            nodes,\r\n            beams\r\n        }\r\n    }\r\n\r\n    static async calculate(nodes: FarmNode[], beams: Beam[], props?: FarmCalcProps): Promise<FarmCalcData> {\r\n        const NodeCoord: ICoord[] = []\r\n        const NodeV: ICoord[] = []\r\n        const LinkNodes: ICoord[] = []\r\n        const Forces: number[] = []\r\n        const LinkLength: number[] = []\r\n        const _NodeMap: Map<string, FarmNode> = new Map()\r\n\r\n        if (nodes.find(node => node.beamsID.length === 0 && node.isStatic)) throw new Error(\"Не все узлы соединены\")\r\n        let _nodeVindex = 0;\r\n        nodes.forEach((node, i) => {\r\n            NodeCoord.push({ x: node.x, y: node.y })\r\n            _NodeMap.set(node.id, node)\r\n            switch (node.fixation) {\r\n                case NodeFixation.X: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: 0, y: _nodeVindex })\r\n                    if (node.forceY) Forces.push(-node.forceY.value)\r\n\r\n                    break;\r\n                }\r\n                case NodeFixation.Y: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: _nodeVindex, y: 0 })\r\n                    if (node.forceX) Forces.push(-node.forceX.value)\r\n                    else Forces.push(0)\r\n                    break;\r\n                }\r\n                case NodeFixation.YX:\r\n                case NodeFixation.XY: {\r\n                    NodeV.push({ x: 0, y: 0 })\r\n                    break;\r\n                }\r\n                case NodeFixation.None: {\r\n                    _nodeVindex++\r\n                    NodeV.push({ x: _nodeVindex, y: _nodeVindex + 1 })\r\n                    _nodeVindex++\r\n                    if (node.forceX) Forces.push(-node.forceX.value)\r\n                    else Forces.push(0)\r\n                    if (node.forceY) Forces.push(-node.forceY.value)\r\n                    else Forces.push(0)\r\n                    break;\r\n                }\r\n                default: break;\r\n            }\r\n        })\r\n        beams.forEach((beam, i) => {\r\n            const nums = beam.name.split(' - ')\r\n            LinkNodes.push({\r\n                x: Number(nums[0]) - 1,\r\n                y: Number(nums[1]) - 1\r\n            })\r\n            LinkLength.push(Farm.getBeamLength(beam))\r\n        })\r\n\r\n        const data = await FarmCalc.init(NodeCoord, NodeV, Forces, LinkNodes, LinkLength, props)\r\n        return data\r\n    }\r\n\r\n    static correctAfterCalc(nodes: FarmNode[], beams:Beam[], {Vi,P}:FarmCalcData) : IFarm{\r\n        const bufNodeMap: Map<string, FarmNode> = new Map()\r\n        let _nodes = nodes.map((item, i) => {\r\n            const node = {\r\n                ...item,\r\n                newX: Math.round(item.x + (Vi[i].x * consts.UI.koefOfNewPos)),\r\n                newY: Math.round(item.y - (Vi[i].y * consts.UI.koefOfNewPos)),\r\n                withNewPosition: true\r\n            }\r\n            bufNodeMap.set(node.id,node)\r\n            return node\r\n        })\r\n        let _beams = beams.map((beam, i) => {\r\n            const startNode = (bufNodeMap.get(beam.startConnectedNodeID) as FarmNode)\r\n            const endNode = (bufNodeMap.get(beam.endConnectedNodeID) as FarmNode)\r\n            return {\r\n                ...beam,\r\n                newX: startNode.newX,\r\n                newY: startNode.newY,\r\n                newEndX: endNode.newX,\r\n                newEndY: endNode.newY,\r\n                startForce:Math.round(P[i][0][0]),\r\n                endForce:Math.round(P[i][1][0]),\r\n                withNewPosition: true\r\n            }\r\n        })\r\n\r\n        return {\r\n            nodes:_nodes,\r\n            beams:_beams\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Farm","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Typography, IconButton, Box, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { instanceOfNode, FarmNode, NodeFixation } from 'src/models/Farm/ModelNode';\r\nimport { instanceOfBeam, Beam } from 'src/models/Farm/ModelBeam';\r\nimport Farm from 'src/models/Farm/Farm';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    btnGroup: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n})\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: Entity | undefined,\r\n    onDelete(entity: Entity): void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\nconst TextRow = ({ text, className }: { text: string, className?: string }) =>     (\r\n    <React.Fragment>\r\n        <Typography variant=\"subtitle2\">\r\n            {text}\r\n        </Typography>\r\n        <Divider />\r\n    </React.Fragment>\r\n)\r\nconst TextRows = ({ text, className }: { text: string[], className?: string }) => {\r\n    if (text.length === 0) return (<React.Fragment />)\r\n    return (\r\n        <React.Fragment>\r\n            {text.map((str,i) => (\r\n                <Typography variant=\"subtitle2\" key={i}>\r\n                    {str}\r\n                </Typography>\r\n            ))}\r\n            <Divider />\r\n        </React.Fragment>\r\n    )\r\n}\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    viewFixationInfo(node: FarmNode) {\r\n        switch (node.fixation) {\r\n            case NodeFixation.X: return (\r\n                <TextRow text={\"Фиксация по оси X\"} />\r\n            )\r\n            case NodeFixation.Y: return (\r\n                <TextRow text={\"Фиксация по оси Y\"} />\r\n            )\r\n            case NodeFixation.XY: return (\r\n                <TextRow text={\"Фиксация по осям Х и Y\"} />\r\n            )\r\n            default: return undefined\r\n        }\r\n    }\r\n    NodeInfo(node: FarmNode) {\r\n        const { classes, onDelete } = this.props        \r\n        return (\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Узел {node.name}\r\n                </Typography>\r\n                <TextRows text={[`X: ${node.x} мм`,`Y: ${node.y} мм`]}/>\r\n                {node.withNewPosition && (<TextRows text={[`X': ${node.newX} мм`,`Y': ${node.newY} мм`]}/>)}\r\n                {node.forceX && (<TextRows text={[`Сила: ${node.forceX.value} H`, `Угол: ${node.forceX.angle}°`]} />)}\r\n                {node.forceY && (<TextRows text={[`Сила: ${node.forceY.value} H`, `Угол: ${node.forceY.angle}°`]} />)}\r\n                {this.viewFixationInfo(node)}\r\n                <div className={classes.btnGroup}>\r\n                    <IconButton\r\n                        aria-label=\"Delete\"\r\n                        onClick={() => onDelete(node)}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </Box>\r\n        )\r\n    }\r\n    BeamInfo(beam: Beam) {\r\n        const { classes, onDelete } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Стержень {beam.name}\r\n                </Typography>\r\n                <TextRow text={`Длина: ${beam.length || Farm.getBeamLength(beam)} мм`}/>\r\n                {beam.withNewPosition && (<TextRows text={[`Сила в начале: ${beam.startForce} H`,`Сила в конце: ${beam.endForce} H`]} />)}\r\n                <div className={classes.btnGroup}>\r\n                    <IconButton\r\n                        aria-label=\"Delete\"\r\n                        onClick={() => onDelete(beam)}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </Box>\r\n        )\r\n    }\r\n    viewInfo(entity: Entity | undefined) {\r\n        if (instanceOfNode(entity)) return this.NodeInfo(entity)\r\n        else if (instanceOfBeam(entity)) return this.BeamInfo(entity)\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"right\"\r\n                title=\"Информация о выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon />)}\r\n            >\r\n                {this.viewInfo(entity)}\r\n                <Divider />\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles,  Paper } from '@material-ui/core';\r\nimport { ToggleButtonGroup } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { ZoomOutMap as MoveIcon, MyLocation as AddNodeIcon, Delete as DeleteIcon, Power as ConnectIcon } from '@material-ui/icons';\r\n\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { MyToggleButton } from 'src/components';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        padding: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        left: \"50%\",\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: fade(theme.palette.primary.light, 0.4),\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        '&:hover':{\r\n            backgroundColor: theme.palette.primary.light,\r\n        }\r\n    },\r\n    modsBtnGroup: {\r\n        borderRadius: 0,\r\n        backgroundColor: 'transparent'\r\n    }\r\n})\r\n\r\n\r\nexport interface IMode {\r\n    name: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolPanelProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIToolPanel: React.FC<UIToolPanelProps> = ({ onSelect, selected, classes }) => {\r\n    const mods: IMode[] = [\r\n        {\r\n            name: \"Перемещение\",\r\n            mod: UIModes.move,\r\n            icon: (<MoveIcon />)\r\n        },\r\n        {\r\n            name: \"Добавить узел\",\r\n            mod: UIModes.addNode,\r\n            icon: (<AddNodeIcon />)\r\n        },\r\n        {\r\n            name: \"Соединить узлы\",\r\n            mod: UIModes.addBeam,\r\n            icon: (<ConnectIcon />)\r\n        },\r\n        {\r\n            name: \"Удалить\",\r\n            mod: UIModes.delete,\r\n            icon: (<DeleteIcon />)\r\n        }\r\n    ]\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <ToggleButtonGroup\r\n                value={selected}\r\n                exclusive\r\n                onChange={(e, value) => onSelect(value)}\r\n                size=\"medium\"\r\n                className={classes.modsBtnGroup}\r\n            >\r\n                {mods.map(item => (\r\n                    <MyToggleButton\r\n                        key={item.mod}\r\n                        value={item.mod}\r\n                        selected={item.mod === selected}\r\n                        icon={item.icon}\r\n                        name={item.name}\r\n                        \r\n                    />\r\n                ))}\r\n            </ToggleButtonGroup>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolPanel)","import * as React from 'react'\r\nimport KeyHandler from 'react-key-handler'\r\nimport Konva from \"konva\"\r\nimport { Stage } from \"react-konva\"\r\nimport { createStyles, Theme, WithStyles, withStyles, Box } from '@material-ui/core';\r\nimport { UITreePanel, UIEntityInfo, UIStage, UIHeader, UIToolPanel } from '.';\r\nimport { MyMath } from 'src/utils';\r\nimport Stats from 'react-stats'\r\nimport { instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { FarmContainer } from '../FarmContainer'\r\nimport { UIModes } from 'src/utils/UI';\r\nimport {  canvas} from 'src/static/const';\r\nimport { IFarm } from 'src/models/Farm/FarmTypes';\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\nexport interface UIFarmProps extends IFarm, WithStyles<typeof styles> {\r\n    addNode: typeof FarmContainer.prototype.addNode,\r\n    addBeam: typeof FarmContainer.prototype.addBeam,\r\n    moveNode: typeof FarmContainer.prototype.moveNode,\r\n    moveBeam: typeof FarmContainer.prototype.moveBeam,\r\n    connectBeamToNode: typeof FarmContainer.prototype.connectBeamToNode,\r\n    deleteEntity: typeof FarmContainer.prototype.deleteEntity\r\n    defautlFarm: typeof FarmContainer.prototype.defautlFarm\r\n    saveFarm: typeof FarmContainer.prototype.saveFarm,\r\n    calculateFarm: typeof FarmContainer.prototype.calculateFarm\r\n    calculation: boolean,\r\n    calculated: boolean,\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    uiMode: UIModes,\r\n    selectedEntityID: string,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\nclass UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n        this.state = {\r\n            stageHeight: canvas.height,\r\n            stageWidth: canvas.width,\r\n            uiMode: UIModes.none,\r\n            selectedEntityID: \"\",\r\n            paintEntity: undefined,\r\n        }\r\n        this.UIonClick = this.UIonClick.bind(this)\r\n        this.UIonDrag = this.UIonDrag.bind(this)\r\n        this.UIonMouseMove = this.UIonMouseMove.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this.selectEntity = this.selectEntity.bind(this)\r\n        this.clearFarm = this.clearFarm.bind(this)\r\n        this.deleteEntity = this.deleteEntity.bind(this)\r\n        this.saveFarm = this.saveFarm.bind(this)\r\n        this.calculateFarm = this.calculateFarm.bind(this)\r\n        this.stage = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container: HTMLDivElement = stage.attrs.container.parentElement.parentElement            \r\n            if (container) {\r\n                container.scrollTop = (container.scrollHeight - container.offsetHeight) / 2\r\n                container.scrollLeft = (container.scrollWidth - container.offsetWidth) / 2\r\n            }\r\n        }\r\n    }\r\n\r\n    UIonClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const { calculation } = this.props\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n        if (e.evt.button === 0 && !calculation) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace) {\r\n                        this.selectEntity(entity);\r\n                    } else this.setState({ selectedEntityID: \"\" })\r\n\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        this.props.addNode(cellX, cellY)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && instanceOfNode(entity)) {\r\n                        const beam = this.props.addBeam({\r\n                            x: entity.x,\r\n                            y: entity.y\r\n                        })\r\n                        if (instanceOfBeam(beam)) {\r\n                            const connectedBeam = this.props.connectBeamToNode(entity, beam, 'start')\r\n                            if (instanceOfBeam(connectedBeam))\r\n                                this.setState({\r\n                                    paintEntity: connectedBeam,\r\n                                    uiMode: UIModes.addBeamStart\r\n                                })\r\n                            else this.props.deleteEntity(beam.id)\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && instanceOfNode(entity) && instanceOfBeam(paintEntity)) {\r\n                        if (this.props.connectBeamToNode(entity, paintEntity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: undefined\r\n                            })\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this.deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            if (isEmptyPlace) this.setState({ selectedEntityID: \"\" })\r\n        }\r\n\r\n\r\n\r\n    }\r\n    UIonMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {        \r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        const { uiMode, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if (e.target.getStage()) {\r\n                    if (paintEntity && instanceOfBeam(paintEntity)) {\r\n                        this.props.moveBeam(paintEntity, layerX, layerY)\r\n                    } else this.setState({ uiMode: UIModes.addBeam })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.delete: {\r\n                const stage: Stage & Konva.Stage = e.target.getStage()\r\n                if (stage === e.target) {\r\n                    stage.container().style.cursor = 'default'\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    UIonDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        const { uiMode } = this.state\r\n        switch (uiMode) {\r\n            case UIModes.move: {\r\n                if (instanceOfNode(entity)) {\r\n                    if (e.evt.defaultPrevented) {\r\n                        const { layerX, layerY } = e.evt\r\n                        this.props.moveNode(entity, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this.deletePaintEntity()\r\n                this.setState({\r\n                    uiMode:0\r\n                })\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    deletePaintEntity() {\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            paintEntity: undefined\r\n        })\r\n    }\r\n    deleteEntity(entity: Entity) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (this.state.selectedEntityID && this.state.selectedEntityID === entity.id)\r\n            this.setState({\r\n                selectedEntityID: \"\"\r\n            })\r\n        this.props.deleteEntity(entity.id)\r\n    }\r\n    selectEntity(entity: Entity | undefined) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (entity) this.setState({ selectedEntityID: entity.id })\r\n    }\r\n    clearFarm(): void {\r\n        if (window.confirm('Вы уверены, что хотите очистить холст?'))\r\n            this.props.defautlFarm()\r\n    }\r\n    saveFarm(e: React.FormEvent<HTMLButtonElement>) {\r\n        if (window.confirm('Вы уверены, что хотите сохранить холст в кэш?'))\r\n            this.props.saveFarm()\r\n    }\r\n    calculateFarm(e: React.FormEvent<HTMLButtonElement>) {\r\n        this.props.calculateFarm()\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        const { calculation } = this.props\r\n        if (calculation) return\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n            paintEntity: undefined\r\n        })\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, uiMode, selectedEntityID} = this.state\r\n        const { classes, nodes, beams, calculation, calculated } = this.props\r\n        const selectedEntity = ([...nodes,...beams].find(item => item.id === selectedEntityID) as Entity)\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Stats isActive={true} />\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIHeader\r\n                    hundleClear={this.clearFarm}\r\n                    hundleSave={this.saveFarm}\r\n                    hundleCalculate={this.calculateFarm}\r\n                    disabled={calculation} />\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n                    <UITreePanel\r\n                        nodes={nodes}\r\n                        beams={beams}\r\n                        selectedEntity={selectedEntity}\r\n                        onSelect={this.selectEntity}\r\n                    />\r\n                    <UIStage\r\n                        onClick={this.UIonClick}\r\n                        onDrag={this.UIonDrag}\r\n                        onMouseMove={this.UIonMouseMove}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        nodes={nodes}\r\n                        beams={beams}\r\n                        stage={this.stage}\r\n                        selectedEntity={selectedEntity}\r\n                        uiMode={uiMode}\r\n                        viewNewPos={calculated}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={selectedEntity}\r\n                        onDelete={this.deleteEntity} />\r\n                </Box>\r\n                <UIToolPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)} />\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UIFarm)","import { FarmNode, createNode } from \"./ModelNode\";\r\nimport { createForce } from \"./ModelForce\";\r\nimport { canvas, UI } from \"src/static/const\";\r\nimport { Beam } from \"./ModelBeam\";\r\nimport { IFarm, IFixedNodeCreate, IStaticNodeCreate, ISimpleNodeCreate } from \"./FarmTypes\";\r\n\r\nexport class FarmFactory {\r\n    static firstPlacement(_nodes: FarmNode[], _beams: Beam[]): IFarm {\r\n\r\n        const nodes = _nodes.map(node => {\r\n            const x = node.x + Math.round((canvas.width / 3) / UI.cellSize) * UI.MMinCell\r\n            const y = node.y + Math.round((canvas.height / 3) / UI.cellSize) * UI.MMinCell\r\n            return {\r\n                ...node,\r\n                x,\r\n                y\r\n            }\r\n        })\r\n        const beams = _beams.map(beam => {\r\n            const x = beam.x + Math.round((canvas.width / 3) / UI.cellSize) * UI.MMinCell\r\n            const y = beam.y + Math.round((canvas.height / 3) / UI.cellSize) * UI.MMinCell\r\n            return {\r\n                ...beam,\r\n                x,\r\n                y\r\n            }\r\n        })\r\n\r\n        return { nodes, beams }\r\n    }\r\n    static parse(nodesJSON:string, beamsJSON:string):IFarm{\r\n        let nodes:FarmNode[] = JSON.parse(nodesJSON)\r\n        let beams:Beam[] = JSON.parse(beamsJSON)\r\n\r\n        nodes = nodes.map((node) => {\r\n            return {\r\n                ...node,\r\n                newX:node.x,\r\n                newY:node.y,\r\n                withNewPosition:false,\r\n            }\r\n        })\r\n        beams = beams.map((beam) => {\r\n            return {\r\n                ...beam,\r\n                withNewPosition:false,\r\n            }\r\n        })\r\n\r\n        return {\r\n            nodes,\r\n            beams\r\n        }\r\n    }\r\n    static createNodes(_fixedNodes: IFixedNodeCreate[], _staticNodes: IStaticNodeCreate[], _nodes: ISimpleNodeCreate[]): FarmNode[] {\r\n        const nodes: FarmNode[] = []\r\n        let index: number = 0;\r\n        return nodes.concat(\r\n            _fixedNodes.map(item => {\r\n                index++\r\n                return createNode({ ...item, isStatic: true, name: index + \"\" })\r\n            }),\r\n            _staticNodes.map(item => {\r\n                index++\r\n                const _node = createNode({ ...item, isStatic: true, name: index + \"\" })\r\n                if (item.angle === 0) _node.forceX = createForce({ nodeID: _node.id, value: item.value, angle: item.angle })\r\n                else _node.forceY = createForce({ nodeID: _node.id, value: item.value, angle: item.angle })\r\n                return _node\r\n            }),\r\n            _nodes.map(item => {\r\n                index++\r\n                return createNode({ ...item, name: index + \"\" })\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nexport default FarmFactory","import FarmPage from './FarmContainer'\r\n\r\nexport default FarmPage","import * as React from 'react'\r\nimport { UIFarm } from './components'\r\nimport { FarmNode, INode, instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { Beam, IBeam, instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\nimport { Force, IForce, createForce } from 'src/models/Farm/ModelForce';\r\nimport Farm from 'src/models/Farm/Farm';\r\nimport testFarm from './_testFarm'\r\nimport { consts } from 'src/static';\r\nimport { IFarm } from 'src/models/Farm/FarmTypes';\r\nimport FarmFactory from 'src/models/Farm/FarmFactory';\r\n\r\ninterface State extends IFarm {\r\n    calculation: boolean,\r\n    calculated:boolean\r\n}\r\ninterface Props {\r\n\r\n}\r\nexport class FarmContainer extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            nodes: [],\r\n            beams: [],\r\n            calculation: false,\r\n            calculated: false,\r\n        }\r\n        this.defautlFarm = this.defautlFarm.bind(this)\r\n        this.saveFarm = this.saveFarm.bind(this)\r\n        this.calculateFarm = this.calculateFarm.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        const nodesJSON = localStorage.getItem(\"nodes\")\r\n        const beamsJSON = localStorage.getItem(\"beams\")\r\n        if (nodesJSON && beamsJSON) {\r\n            const {nodes, beams} = FarmFactory.parse(nodesJSON, beamsJSON)\r\n            this.setState({ nodes, beams })\r\n        } else this.defautlFarm()\r\n    }\r\n    componentWillUpdate(nextProps:Props,nextState:State){\r\n        if(this.state.calculated && nextState.calculated ) this.setState({calculated:false})\r\n    }\r\n    addNode = (x: number, y: number, options?: INode) => {\r\n        const node = Farm.addNode(this.state.nodes, { ...options, x: x * consts.UI.koefOnGrid, y: y * consts.UI.koefOnGrid })\r\n        if (node) {\r\n            this.setState({\r\n                nodes: [...this.state.nodes, node]\r\n            })\r\n            return node\r\n        }\r\n        return null\r\n    }\r\n    addBeam = (options?: IBeam) => {\r\n        const beam = Farm.addBeam(this.state.beams, { ...options })\r\n        if (beam) {\r\n            this.setState({\r\n                beams: [...this.state.beams, beam]\r\n            })\r\n            return beam\r\n        }\r\n        return null\r\n    }\r\n    connectBeamToNode = (_node: FarmNode, _beam: Beam, place: 'start' | 'end') => {\r\n\r\n        const node: FarmNode = { ..._node }\r\n        const beam: Beam = { ..._beam }\r\n\r\n        switch (place) {\r\n            case 'start': {\r\n                beam.startConnectedNodeID = node.id\r\n                beam.name = node.name + \" - \"\r\n                node.beamsID.push(beam.id)\r\n                Farm.moveEntity(beam, node.x, node.y)\r\n                this.setState(state => ({\r\n                    nodes: state.nodes.map(item => {\r\n                        if (item.id === node.id) return node\r\n                        return item\r\n                    }),\r\n                    beams: state.beams.map(item => {\r\n                        if (item.id === beam.id) return beam\r\n                        return item\r\n                    })\r\n                }))\r\n                return beam;\r\n            }\r\n            case 'end': {\r\n                const beamsOfNode = this.state.beams.filter(item => (node && node.beamsID.includes(item.id)))\r\n                const oldBeam = beamsOfNode.find(item => Farm.findOldBeam(node, beam, item))\r\n                if (!oldBeam) {\r\n                    node.beamsID.push(beam.id)\r\n                    beam.endConnectedNodeID = node.id\r\n                    beam.name = beam.name + node.name\r\n                    Farm.moveBeamEnd(beam, node.x, node.y)\r\n                    this.setState(state => ({\r\n                        nodes: state.nodes.map(item => {\r\n                            if (item.id === node.id) return node\r\n                            return item\r\n                        }),\r\n                        beams: state.beams.map(item => {\r\n                            if (item.id === beam.id) return beam\r\n                            return item\r\n                        })\r\n                    }))\r\n                    return true\r\n                }\r\n                return false\r\n            }\r\n            default: return false\r\n        }\r\n    }\r\n    addForceToNode = (node: FarmNode, options?: IForce) => {\r\n        let force: Force = createForce({\r\n            ...options,\r\n            nodeID: node.id,\r\n        })\r\n\r\n        if (force.angle === 0) node.forceX = force\r\n        else node.forceY = force\r\n        this.setState(state => ({\r\n            nodes: state.nodes.map(item => {\r\n                if (node && item.id === node.id) return node\r\n                return item\r\n            }),\r\n        }))\r\n        return force\r\n\r\n    }\r\n    moveNode = (_node: FarmNode, _x: number, _y: number, ) => {\r\n        const x = _x * consts.UI.koefOnGrid\r\n        const y = _y * consts.UI.koefOnGrid\r\n        if (_node.isStatic) return false\r\n        const oldNode = this.state.nodes.find(item => item.x === x && item.y === y)\r\n        if (!oldNode) {\r\n            const node: FarmNode = { ..._node }\r\n            Farm.moveEntity(node, x, y)\r\n            const beamsOfNode = this.state.beams.filter(item => (node && node.beamsID.includes(item.id)))\r\n            beamsOfNode.forEach(item => {\r\n                if (node) {\r\n                    const beam: Beam = { ...item }\r\n                    if (beam.startConnectedNodeID === node.id) Farm.moveEntity(beam, x, y)\r\n                    else if (item.endConnectedNodeID === node.id) Farm.moveBeamEnd(beam, x, y)\r\n                    this.setState(state => ({\r\n                        beams: state.beams.map(item => {\r\n                            if (item.id === beam.id) return beam\r\n                            return item\r\n                        })\r\n                    }))\r\n                }\r\n            })\r\n            this.setState(state => ({\r\n                nodes: state.nodes.map(item => {\r\n                    if (item.id === node.id) return node\r\n                    return item\r\n                }),\r\n            }))\r\n\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    moveBeam = (beam: Beam, _x: number, _y: number, place: 'start' | 'end' = 'end') => {\r\n\r\n        const x = _x * consts.UI.koefOnGrid\r\n        const y = _y * consts.UI.koefOnGrid\r\n        beam = { ...beam }\r\n        if (place === 'start') Farm.moveEntity(beam, x, y)\r\n        else Farm.moveBeamEnd(beam, x, y)\r\n        this.setState(state => ({\r\n            beams: state.beams.map(item => {\r\n                if (beam && item.id === beam.id) return beam\r\n                return item\r\n            })\r\n        }))\r\n        return true\r\n    }\r\n    deleteEntity = (id: string) => {\r\n        let nodes: FarmNode[] = [...this.state.nodes]\r\n        let beams: Beam[] = [...this.state.beams]\r\n        let entity: Beam | FarmNode | undefined =\r\n            this.state.beams.find(item => item.id === id) ||\r\n            this.state.nodes.find(item => item.id === id)\r\n        if (instanceOfNode(entity)) {\r\n            if (entity.isStatic) return false\r\n            const beamsOfNode = beams.filter(item => (instanceOfNode(entity) && entity.beamsID.includes(item.id)))\r\n            beamsOfNode.forEach(beam => {\r\n                if (instanceOfNode(entity)) {\r\n                    let _node: FarmNode | undefined\r\n                    if (beam.startConnectedNodeID === entity.id) _node = nodes.find(item => item.id === beam.endConnectedNodeID)\r\n                    else _node = nodes.find(item => item.id === beam.startConnectedNodeID)\r\n                    if (_node) {\r\n                        _node = { ..._node }\r\n                        _node.beamsID = _node.beamsID.filter(id => id !== beam.id)\r\n                        nodes = nodes.map(item => {\r\n                            if (_node && item.id === _node.id) return _node\r\n                            return item\r\n                        })\r\n                    }\r\n                    beams = beams.filter(i => i.id !== beam.id)\r\n                }\r\n            })\r\n            nodes = nodes.filter(i => (instanceOfNode(entity) && i.id !== entity.id))\r\n            const { nodes: upNodes, beams: upBeams } = Farm.update(nodes, beams)\r\n            this.setState({\r\n                nodes: upNodes,\r\n                beams: upBeams\r\n            })\r\n            return true\r\n\r\n        } else if (instanceOfBeam(entity)) {\r\n            [entity.startConnectedNodeID, entity.endConnectedNodeID].forEach(nodeID => {\r\n                if (nodeID && nodeID.length > 0) {\r\n                    let _node = nodes.find(item => item.id === nodeID)\r\n                    if (_node && instanceOfBeam(entity)) {\r\n                        _node = { ..._node }\r\n                        _node.beamsID = _node.beamsID.filter(id => {\r\n                            if (entity) return id !== entity.id\r\n                            return false\r\n                        })\r\n                        nodes = nodes.map(item => {\r\n                            if (_node && item.id === _node.id) return _node\r\n                            return item\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            beams = beams.filter(i => (instanceOfBeam(entity) && i.id !== entity.id))\r\n            this.setState({\r\n                nodes, beams\r\n            })\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n    async calculateFarm() {\r\n        let { nodes, beams } = Farm.normalize(this.state.nodes, this.state.beams)\r\n        this.setState({\r\n            nodes,\r\n            beams,\r\n            calculation:true\r\n        })\r\n        try {\r\n            const data = await Farm.calculate(nodes, beams)\r\n            const withNewPos = Farm.correctAfterCalc(nodes, beams, data)\r\n            this.setState({\r\n                nodes:withNewPos.nodes,\r\n                beams:withNewPos.beams,\r\n                calculation:false,\r\n                calculated:true\r\n            })\r\n\r\n        } catch (e) {\r\n            if (e.message)\r\n                alert(e.message)\r\n            else alert(e)\r\n            console.error(e);\r\n            \r\n            this.setState({\r\n                calculation:false\r\n            })\r\n        }\r\n    }\r\n    defautlFarm() {\r\n        let _farm = testFarm()\r\n        localStorage.removeItem('nodes')\r\n        localStorage.removeItem('beams')\r\n        _farm = FarmFactory.firstPlacement(_farm.nodes, _farm.beams)\r\n        const { nodes, beams } = _farm\r\n        this.setState({\r\n            nodes,\r\n            beams,\r\n        })\r\n    }\r\n    saveFarm() {\r\n        const { nodes, beams } = this.state\r\n        localStorage.setItem('nodes', JSON.stringify(nodes))\r\n        localStorage.setItem('beams', JSON.stringify(beams))\r\n    }\r\n    render() {\r\n        return (\r\n            <UIFarm\r\n                {...this.state}\r\n                {...this}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default FarmContainer","import { FarmNode, NodeFixation } from \"src/models/Farm/ModelNode\";\r\nimport { Beam } from \"src/models/Farm/ModelBeam\";\r\nimport { FarmFactory } from \"src/models/Farm/FarmFactory\";\r\n\r\nexport default () => {\r\n    let nodes: FarmNode[] = []\r\n    let beams: Beam[] = []\r\n\r\n    nodes = FarmFactory.createNodes(\r\n        [\r\n            {\r\n                x: 0,\r\n                y: 1000,\r\n                fixation: NodeFixation.XY,\r\n            },\r\n            {\r\n                x: 3000,\r\n                y: 1000,\r\n                fixation: NodeFixation.Y,\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                x: 1000,\r\n                y: 1000,\r\n                angle: 90,\r\n                value: 9000\r\n            }\r\n        ],\r\n        [\r\n            // {\r\n            //     x: 1000,\r\n            //     y: 1000\r\n            // }, {\r\n            //     x: 700,\r\n            //     y: 700\r\n            // }, {\r\n            //     x: 1000,\r\n            //     y: 700\r\n            // }\r\n        ]\r\n    )\r\n\r\n    return { nodes, beams }\r\n}","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"20%\",\r\n\t\theight:'20%'\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({classes} : WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img \r\n\t\t\t\tsrc={consts.img.bridgeIcon_2} \r\n\t\t\t\talt=\"logo\" \r\n\t\t\t\tclassName={classes.logo} \r\n\t\t\t/>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.str.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.str.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.FARM_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { IHomeStore } from 'src/store/home/homeReducer';\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\twidth:'100%',\r\n\t\tminHeight:'100%',\r\n\t\tdisplay:'block',\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends IHomeStore, WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from 'src/store/home/homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Helment from 'react-helmet'\r\nimport {CssBaseline} from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { FarmPage, Home } from './pages'\r\nimport { navPath } from './navigation'\r\nimport {str, img} from './static/const';\r\nimport { theme } from './utils/UI';\r\n\r\ninterface IAppProps {}\r\n\r\nclass App extends React.Component<IAppProps> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helment\r\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\r\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\r\n\t\t\t\t\tdefaultTitle={str.title}\r\n\t\t\t\t\tlink={[\r\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":img.bridgeIcon_2},\r\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":img.airBridge},\r\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/css?family=Roboto:300,400,500'},\r\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/icon?family=Material+Icons'}\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tmeta={[\r\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\r\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\r\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\r\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": str.description },\r\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\r\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": str.title},\r\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": img.airBridge},\r\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": img.airBridge},\r\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": img.airBridge},\r\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": str.url},\r\n\t\t\t\t\t]}\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\r\n\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={FarmPage} />\r\n\t\t\t\t\t</Switch>\r\n\r\n\t\t\t\t</ThemeProvider>\r\n\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { history } from './utils';\r\nimport store from './store';\r\nimport { HashRouter, Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst isGitHubPages = process.env.REACT_APP_GHP === 'true' || false;\r\n\r\nconst Root = () => {    \r\n    if (isGitHubPages) return (\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    )\r\n    else return (\r\n        <Router history={history}>\r\n            <App />\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Root/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}