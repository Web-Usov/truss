{"version":3,"sources":["pages/Farm/components/UIToolPanel.tsx","utils/history.ts","utils/math.ts","pages/Farm/store/farmReducer.ts","pages/Farm/store/farmTypes.ts","models/Farm/ModelEntity.ts","models/Farm/ModelForce.ts","models/Farm/ModelBeam.ts","models/Farm/ModelNode.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Home/homeTypes.ts","components/sidebar.tsx","components/appBar.tsx","components/myToggleButton.tsx","theme.ts","pages/Farm/components/UIFarmEntities/UINode.tsx","pages/Farm/components/UIFarmEntities/UIBeam.tsx","pages/Farm/components/UIFarmEntities/UIGrid.tsx","pages/Farm/components/UIFarmEntities/UIStage.tsx","pages/Farm/components/UIHeader.tsx","pages/Farm/components/UITreePanel.tsx","pages/Farm/components/UIEntityInfo.tsx","pages/Farm/farm.tsx","pages/Farm/index.tsx","pages/Farm/_testFarm.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","static/const.ts","static/ogImage.png","static/icon.png","static/bridge.png","static/airBridge.png"],"names":["UIModes","createBrowserHistory","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","UI_cellSize","y","defaultState","nodes","beams","forces","reducer","state","arguments","length","undefined","action","type","node","Object","objectSpread","concat","toConsumableArray","beam","force","map","item","id","filter","createEntity","props","name","angle","newX","newY","uuid","createForce","nodeID","value","entity","instanceOfForce","object","createBeam","startConnectedNodeID","endConnectedNodeID","endX","endY","instanceOfBeam","createNode","beamsID","forceX","forceY","isStatic","isFixed","instanceOfNode","defaultHomeState","title","mainReducer","combineReducers","farm","FarmReducer","home","createStore","applyMiddleware","thunk","Sidebar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","open","viewTooltip","switchDrawer","bind","assertThisInitialized","setState","flag","_this2","_this$props","classes","children","btnIcon","anchor","_this$state","react","Drawer","className","drawer","variant","paper","drawerPaper","toolbar","Typography","align","Divider","Tooltip","onOpen","changeViewtooltip","onClose","Fab","style","left","drawerWidth","right","color","size","toogleIcon","onClick","Close","React","withStyles","theme","createStyles","position","width","top","spacing","zIndex","padding","mixins","appBar","logo","marginRight","marginLeft","& img","height","_ref","_ref$withLogo","withLogo","AppBar","clsx","Toolbar","react_router_dom","to","alt","src","bridgeIcon_2","viewLogo","btn","borderRadius","border","fade","palette","active","transition","transitions","create","duration","short","secondary","contrastText","backgroundColor","light","&$selected","main","&:hover","dark","@media (hover: none)","&$disabled","selected","icon","other","objectWithoutProperties","ToggleButton","assign","key","defineProperty","root","bottom","transform","primary","modsBtnGroup","onSelect","mods","mod","move","ZoomOutMap","addNode","MyLocation","addBeam","Power","delete","Delete","Paper","ToggleButtonGroup","exclusive","onChange","e","myToggleButton","createMuiTheme","background","default","UI_nodeSize","UINode","hundleMouseEnter","hundleMouseLeave","getStorkeColor","getStorkeWidth","getFillColor","viewForce","mode","stage","target","getStage","container","cursor","none","addBeamStart","ReactKonva","points","stroke","grey","strokeWidth","shadowBlur","pointerLength","pointerWidth","hitStrokeWidth","rotation","text","radius","fill","nextProps","_this$props2","_useStrictMode","_onClick","_x","apply","toString","viewFixation","onDragEnd","draggable","onMouseEnter","onMouseLeave","onDragMove","drag","UIBeam","UI_beamSize","ReactKonvaCore","UIGrid","widthCell","heightCell","heightBox","widthBox","countOfX","countOfY","columns","index","push","viewColumns","rows","viewRows","flexGrow","stageHeight","stageWidth","onMouseMove","onDrag","uiMode","selectedEntity","lib_default","a","autoHide","ref","UIFarmEntities_UIGrid","UIFarmEntities_UIBeam","UIFarmEntities_UINode","grow","_ref$hundleSave","hundleSave","alert","_ref$hundleClear","hundleClear","Button","UITreePanel","tabs","Map","openTab","viewListItem","set","tab","get","entityArray","ListItem","button","ListItemIcon","Badge","badgeContent","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","nested","sidebar","esm_List","GpsNotFixed","Timeline","paddingLeft","UIEntityInfo","onDelete","Box","subTitle","gutterBottom","getTypeStr","IconButton","aria-label","Info","viewInfo","fontSize","marginBottom","UIFarm","paintEntity","onKeyHandle","_setStageSize","selectEntity","clearFarm","deleteEntity","window","addEventListener","current","attrs","parentElement","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","removeEventListener","isEmptyPlace","evt","preventDefault","_e$evt","layerX","layerY","cellX","cellY","connectedBeam","connectBeamToNode","console","log","_this$state2","_e$evt2","moveBeam","defaultPrevented","_e$evt3","moveNode","deletePaintEntity","innerHeight","innerWidth","confirm","defautlFarm","_this$state3","react_stats_default","FPSStats","isActive","esm","keyEventName","keyValue","components_UIHeader","stageBox","components_UITreePanel","UIFarmEntities_UIStage","components_UIEntityInfo","components_UIToolPanel","setSelectedMode","overflow","display","flexDirection","FarmContainerClass","_React$Component","options","find","addForce","_node","_beam","place","_console","includes","addForceToNode","forEach","Node","i","inherits","createClass","_testFarm","n","f","b","testFarm","navPath","alignItems","justifyContent","descripton","description","Link","Home","homeHeader","minHeight","setTitle","connect","dispatch","bindActionCreators","homeActions","App","Helmet_default","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","path","exact","ReactDOM","render","react_default","createElement","es","store","src_App","document","getElementById","__webpack_require__","r","__webpack_exports__","__dirname","d","url","favicon","_ogImage_png__WEBPACK_IMPORTED_MODULE_0__","_ogImage_png__WEBPACK_IMPORTED_MODULE_0___default","_icon_png__WEBPACK_IMPORTED_MODULE_1__","_icon_png__WEBPACK_IMPORTED_MODULE_1___default","_bridge_png__WEBPACK_IMPORTED_MODULE_2__","_bridge_png__WEBPACK_IMPORTED_MODULE_2___default","_airBridge_png__WEBPACK_IMPORTED_MODULE_3__","_airBridge_png__WEBPACK_IMPORTED_MODULE_3___default","path__WEBPACK_IMPORTED_MODULE_4__","process","resolve","module","exports","p"],"mappings":"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","file":"static/js/main.695e5032.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { Theme, createStyles, withStyles,  Paper } from '@material-ui/core';\r\nimport { ToggleButtonGroup } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { ZoomOutMap as MoveIcon, MyLocation as AddNodeIcon, Delete as DeleteIcon, Power as ConnectIcon } from '@material-ui/icons';\r\n\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { MyToggleButton } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        padding: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        left: \"50%\",\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: fade(theme.palette.primary.light, 0.4),\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        '&:hover':{\r\n            backgroundColor: theme.palette.primary.light,\r\n        }\r\n    },\r\n    modsBtnGroup: {\r\n        borderRadius: 0,\r\n        backgroundColor: 'transparent'\r\n    }\r\n})\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport interface IMode {\r\n    name: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolPanelProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIToolPanel: React.FC<UIToolPanelProps> = ({ onSelect, selected, classes }) => {\r\n    const mods: IMode[] = [\r\n        {\r\n            name: \"Перемещение\",\r\n            mod: UIModes.move,\r\n            icon: (<MoveIcon />)\r\n        },\r\n        {\r\n            name: \"Добавить узел\",\r\n            mod: UIModes.addNode,\r\n            icon: (<AddNodeIcon />)\r\n        },\r\n        {\r\n            name: \"Соединить узлы\",\r\n            mod: UIModes.addBeam,\r\n            icon: (<ConnectIcon />)\r\n        },\r\n        {\r\n            name: \"Удалить\",\r\n            mod: UIModes.delete,\r\n            icon: (<DeleteIcon />)\r\n        }\r\n    ]\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <ToggleButtonGroup\r\n                value={selected}\r\n                exclusive\r\n                onChange={(e, value) => onSelect(value)}\r\n                size=\"medium\"\r\n                className={classes.modsBtnGroup}\r\n            >\r\n                {mods.map(item => (\r\n                    <MyToggleButton\r\n                        key={item.mod}\r\n                        value={item.mod}\r\n                        selected={item.mod === selected}\r\n                        icon={item.icon}\r\n                        name={item.name}\r\n                        \r\n                    />\r\n                ))}\r\n            </ToggleButtonGroup>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolPanel)","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { consts } from \"src/static\";\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x:number):number{        \r\n        return  Math.round(x / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n    static cellY(y:number):number{        \r\n        return  Math.round(y / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","\r\nimport * as FarmTypes from './farmTypes'\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\n\r\nexport interface IFarmStore {\r\n    nodes:FarmNode[],\r\n    beams:Beam[],\r\n    forces:Force[]\r\n}\r\n\r\nexport const defaultState: IFarmStore = {\r\n    nodes:[],\r\n    beams:[],\r\n    forces:[]\r\n}\r\n\r\nexport const reducer = (state: IFarmStore = defaultState, action: FarmTypes.FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        // Add\r\n        case FarmTypes.ADD_NODE : {\r\n            const {node} = action\r\n            return {\r\n                ...state,\r\n                nodes : [\r\n                    ...state.nodes,\r\n                    node\r\n                ]\r\n            }\r\n            \r\n        }\r\n        case FarmTypes.ADD_BEAM : {\r\n            const {beam} = action\r\n            return {\r\n                ...state,\r\n                beams : [\r\n                    ...state.beams,\r\n                    beam\r\n                ]\r\n            }            \r\n        }\r\n        case FarmTypes.ADD_FORCE : {\r\n            const {force} = action\r\n            return {\r\n                ...state,\r\n                forces : [\r\n                    ...state.forces,\r\n                    force\r\n                ]\r\n            }            \r\n        }\r\n        // Edit\r\n        case FarmTypes.EDIT_NODE : {\r\n            return {\r\n                ...state,\r\n                nodes : state.nodes.map(item => {\r\n                    if(item.id === action.node.id){      \r\n                        // const node : Node = {\r\n                        //     ...item,\r\n                        //     ...action.node\r\n                        // }\r\n                        return {\r\n                                ...item,\r\n                                ...action.node\r\n                            }\r\n                    }\r\n                    return item\r\n                })\r\n            }            \r\n        }\r\n        case FarmTypes.EDIT_BEAM : {\r\n            return {\r\n                ...state,\r\n                beams : state.beams.map(item => {\r\n                    if(item.id === action.beam.id){ \r\n                        return {\r\n                            ...item,\r\n                            ...action.beam\r\n                        }   \r\n                    }\r\n                    return item\r\n                })\r\n            }            \r\n        }\r\n        // Delete\r\n        case FarmTypes.DELETE_ENTITY : {\r\n            return {\r\n                beams : state.beams.filter(item => item.id !== action.id),\r\n                nodes : state.nodes.filter(item => item.id !== action.id),\r\n                forces : state.forces.filter(item => item.id !== action.id),\r\n            }            \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { Action } from \"redux\";\r\nimport {  Beam } from \"src/models/Farm/ModelBeam\";\r\nimport {  FarmNode } from \"src/models/Farm/ModelNode\";\r\nimport { Force } from \"src/models/Farm/ModelForce\";\r\n\r\nexport const DELETE_EN = \"DELETE_EN\"\r\nexport const ADD_NODE = \"ADD_NODE\"\r\nexport const ADD_BEAM = \"ADD_BEAM\"\r\nexport const ADD_FORCE = \"ADD_FORCE\"\r\nexport const DELETE_ENTITY = \"DELETE_ENTITY\"\r\nexport const EDIT_NODE = \"EDIT_NODE\"\r\nexport const EDIT_BEAM = \"EDIT_BEAM\"\r\n\r\n// Add\r\nexport interface ActionAddNode extends Action {    \r\n    type: typeof ADD_NODE,\r\n    node:FarmNode\r\n}\r\nexport interface ActionAddBeam extends Action {    \r\n    type: typeof ADD_BEAM,\r\n    beam:Beam\r\n}\r\nexport interface ActionAddForce extends Action {    \r\n    type: typeof ADD_FORCE,\r\n    force:Force\r\n}\r\n// Delete\r\nexport interface ActionDeleteEntity extends Action {    \r\n    type: typeof DELETE_ENTITY,\r\n    id:string\r\n}\r\n// Edit\r\nexport interface ActionEditNode extends Action {    \r\n    type: typeof EDIT_NODE,\r\n    node:FarmNode\r\n}\r\nexport interface ActionEditBeam extends Action {    \r\n    type: typeof EDIT_BEAM,\r\n    beam:Beam\r\n}\r\n\r\nexport type FarmActions = (\r\n    ActionAddNode | \r\n    ActionAddBeam |\r\n    ActionAddForce |\r\n    ActionDeleteEntity |\r\n    ActionEditNode | \r\n    ActionEditBeam\r\n);","import uuid from 'uuid'\r\n\r\nexport interface IEntity {\r\n    id?: string\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n    type?:'entity' | 'node' | 'beam' | 'force'\r\n}\r\n\r\n// export class Entity implements IEntity {\r\n//     id: string\r\n//     x: number;\r\n//     y: number;\r\n//     angle: number;\r\n//     name: string;\r\n//     newX: number;\r\n//     newY: number;\r\n//     constructor(props: IEntity) {\r\n//         this.id =  props.id || uuid()\r\n//         this.x = props.x || 0\r\n//         this.y = props.y || 0\r\n//         this.angle = props.angle || 0\r\n//         this.name = props.name || this.id + \"\"\r\n//         this.newX = this.x\r\n//         this.newY = this.y\r\n//     }\r\n// }\r\n\r\nexport interface Entity {    \r\n    id: string\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    type:'entity' | 'node' | 'beam' | 'force'\r\n}\r\n\r\nexport const createEntity = (props:IEntity = {}) :Entity => {\r\n    const { x, y, name, angle, id, newX, newY, type } = props\r\n    const entity : Entity =  {\r\n        id: id || uuid(),\r\n        x: x || 0,\r\n        y: y || 0,\r\n        angle: angle || 0,\r\n        name: name || \"\",\r\n        newX: newX || x || 0,\r\n        newY: newY || y || 0,\r\n        type:type || 'entity'\r\n    }\r\n    return entity\r\n\r\n}\r\nexport const instanceOfEntity = (object: any): object is Entity => object && object.type === 'entity';","import { IEntity, Entity, createEntity } from \"./ModelEntity\";\r\n\r\nexport interface IForce extends IEntity {\r\n    value?: number,\r\n    angle?: 0 | 90,\r\n    nodeID?: string\r\n}\r\n\r\nexport interface Force extends Entity {\r\n    value: number\r\n    angle: 0 | 90\r\n    nodeID: string\r\n}\r\nexport const createForce = (props: IForce = {}): Force => {\r\n    const {  angle, nodeID, value } = props\r\n    const entity = createEntity(props)\r\n    const force : Force =  {\r\n        ...entity,\r\n        type:\"force\",\r\n        angle: angle || 0,\r\n        nodeID: nodeID || \"\",\r\n        value: value || 0\r\n    }\r\n    return force\r\n}\r\nexport const instanceOfForce = (object: any): object is Force => object && object.type === 'force';","import { IEntity, Entity, createEntity } from \"./ModelEntity\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: string\r\n    endConnectedNodeID?: string\r\n    endX?: number,\r\n    endY?: number\r\n}\r\n\r\n// export class Beam extends Entity {\r\n//     length: number\r\n//     startConnectedNodeID: string | undefined\r\n//     endConnectedNodeID: string | undefined\r\n//     newAngle:number\r\n//     endX:number\r\n//     endY:number\r\n//     constructor(props: IBeam) {\r\n//         super(props)\r\n//         this.length = props.length || 0\r\n//         this.startConnectedNodeID = props.startConnectedNodeID || undefined\r\n//         this.endConnectedNodeID = props.endConnectedNodeID || undefined\r\n//         this.newAngle = this.angle\r\n//         this.endX = props.endX || this.x\r\n//         this.endY = props.endY || this.y\r\n//     }\r\n\r\n// connectNode(nodeID: string, place: 'start' | 'end'): void {\r\n//     switch (place) {\r\n//         case 'start':{\r\n//             this.startConnectedNodeID = nodeID\r\n//             break;\r\n//         }\r\n//         case 'end':{\r\n//             this.endConnectedNodeID = nodeID\r\n//             break;\r\n//         }\r\n//         default:\r\n//             break;\r\n//     }\r\n// }\r\n// removeNode(place: 'start' | 'end'): void {\r\n//     place === 'start' ?\r\n//     this.startConnectedNodeID = \"\" :\r\n//     this.endConnectedNodeID = \"\"\r\n// }\r\n// moveStartPoint(x:number,y:number):void{\r\n\r\n//     this.x = x\r\n//     this.y = y\r\n// }\r\n\r\n// moveEndPoint(x:number,y:number):void{\r\n//     this.endX = x\r\n//     this.endY = y\r\n// }\r\n// }\r\n\r\nexport interface Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: string | undefined\r\n    endConnectedNodeID: string | undefined\r\n    endX: number\r\n    endY: number\r\n}\r\nexport const createBeam = (props: IBeam = {}): Beam => {\r\n    const { length, startConnectedNodeID, endConnectedNodeID, endX, endY } = props\r\n    const entity = createEntity(props)\r\n    const bram: Beam = {\r\n        ...entity,\r\n        type: \"beam\",\r\n        length: length || 0,\r\n        startConnectedNodeID: startConnectedNodeID,\r\n        endConnectedNodeID: endConnectedNodeID,\r\n        endX: endX || entity.x || 0,\r\n        endY: endY || entity.y || 0,\r\n    }\r\n    return bram\r\n}\r\n\r\n\r\nexport const instanceOfBeam = (object: any): object is Beam => object && object.type === 'beam';\r\n","import { IEntity, Entity, createEntity } from './ModelEntity';\r\nimport { Force } from './ModelForce';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: string[]\r\n    forceX?: Force,\r\n    forceY?: Force,\r\n    isStatic?: boolean\r\n    isFixed?: false | 'x' | 'y' | 'xy'\r\n}\r\n\r\nexport interface FarmNode extends Entity {\r\n    beamsID: string[];\r\n    forceX: Force | undefined\r\n    forceY: Force | undefined\r\n    isStatic: boolean\r\n    isFixed: false | 'x' | 'y' | 'xy'\r\n}\r\n\r\nexport const createNode = (props: INode = {}): FarmNode => {\r\n    const { beamsID, forceX, forceY, isStatic, isFixed } = props\r\n    const entity = createEntity(props)\r\n    const node: FarmNode = {\r\n        ...entity,\r\n        type: \"node\",\r\n        beamsID: beamsID || [],\r\n        forceX: forceX,\r\n        forceY: forceY,\r\n        isStatic: isStatic || false,\r\n        isFixed: isFixed || false\r\n    }\r\n    return node\r\n}\r\nexport const instanceOfNode = (object: any): object is FarmNode => object && object.type === 'node'","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { FarmReducer, FarmTypes } from 'src/pages/Farm/store';\r\nimport { homeReducer } from 'src/pages/Home/homeReducer';\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\r\n\r\n\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : FarmReducer.reducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport type AppState = ReturnType<typeof mainReducer> \r\nexport type AppActions = FarmTypes.FarmActions \r\n\r\nexport default createStore(mainReducer, applyMiddleware(thunk as ThunkMiddleware<AppState,AppActions>));\r\n","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip, Typography, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(10),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    title:{\r\n        padding:theme.spacing(1)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface SidebarProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    title? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface SidebarState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\n\r\nclass Sidebar extends React.PureComponent<SidebarProps, SidebarState>{\r\n    constructor(props: SidebarProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    switchDrawer() {\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, title, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <Typography \r\n                        variant='body2'\r\n                        align=\"center\"\r\n                        className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider/>\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={title}\r\n                    open={title !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 15 : drawerWidth + 15 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 15 : drawerWidth + 15 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import * as React from 'react'\r\nimport clsx from 'clsx'\r\nimport { Theme, createStyles, withStyles, AppBar, Toolbar } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { consts } from 'src/static';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBarProps } from '@material-ui/core/AppBar';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n        marginRight: theme.spacing(4),\r\n        marginLeft: theme.spacing(2),\r\n        '& img': {\r\n            width: 50,\r\n            height: 'auto'\r\n        }\r\n    }\r\n})\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles>, React.HTMLAttributes<HTMLDivElement> {\r\n    color?: AppBarProps['color'],\r\n    position?: AppBarProps['position'],\r\n    withLogo?: boolean\r\n}\r\n\r\nconst UIAppBar: React.FC<UIToolBarProps> = ({ classes, children, className, color, position, withLogo = true }) => {\r\n    const viewLogo = () => {\r\n        if (withLogo) return ((\r\n            <Link\r\n                to={'/'}\r\n                className={classes.logo}\r\n            >\r\n                <img\r\n                    alt=\"Logo Icon\"\r\n                    src={consts.bridgeIcon_2}\r\n                />\r\n            </Link>\r\n        ))\r\n    }\r\n    return (\r\n        <AppBar\r\n            position={position || 'fixed'}\r\n            className={clsx(classes.appBar, className)}\r\n            color={color || 'primary'}>\r\n            <Toolbar >\r\n                {viewLogo()}\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIAppBar)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Tooltip } from '@material-ui/core';\r\nimport {  ToggleButton } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButtonProps } from '@material-ui/lab/ToggleButton';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    btn: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        borderRadius: '50% !important',\r\n        border: `1px solid ${fade(theme.palette.action.active, 0.2)} !important`,\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.light,\r\n\r\n        '&$selected': {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            '@media (hover: none)': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            '&$disabled': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n        },\r\n    },\r\n    selected: {},\r\n})\r\n\r\n\r\n\r\nexport interface MyToggleButtonProps extends WithStyles<typeof styles> {\r\n    selected: boolean,\r\n    value?:any,\r\n    name?:string,\r\n    icon:JSX.Element\r\n}\r\n\r\nconst MyToggleButton: React.FC<MyToggleButtonProps & ToggleButtonProps> = ({  selected, classes , value, name, icon, ...other}) => {\r\n    return (\r\n        <ToggleButton\r\n            key={name}\r\n            value={value}\r\n            className={clsx(\r\n                classes.btn,\r\n                {\r\n                    [classes.selected]: selected,\r\n                }\r\n            )}\r\n            {...other}\r\n            \r\n        >\r\n            <Tooltip title={name}>\r\n                {icon}\r\n            </Tooltip>\r\n        </ToggleButton>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MyToggleButton)","\r\nimport {  createMuiTheme } from '@material-ui/core';\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark:\"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light:'#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\"\r\n        },\r\n        background:{\r\n            default:'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }  \r\n        \r\n    },\r\n});\r\n\r\nexport default theme","import * as React from 'react'\r\nimport { Circle, Stage, Text, Group, Arrow, Line } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\nimport { UIModes } from '../UIToolPanel';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { KonvaEventObject } from 'konva/types/Node';\r\n\r\nconst size = consts.UI_nodeSize\r\ninterface UINodeProps {\r\n    node: FarmNode,\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, node: FarmNode): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, node: FarmNode): void\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\nclass UINode extends React.Component<UINodeProps>{\r\n    constructor(props: UINodeProps) {\r\n        super(props)\r\n        this.hundleMouseEnter = this.hundleMouseEnter.bind(this)\r\n        this.hundleMouseLeave = this.hundleMouseLeave.bind(this)\r\n        this.getStorkeColor = this.getStorkeColor.bind(this)\r\n        this.getStorkeWidth = this.getStorkeWidth.bind(this)\r\n        this.getFillColor = this.getFillColor.bind(this)\r\n        this.viewForce = this.viewForce.bind(this)\r\n    }\r\n    hundleMouseEnter(e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) {\r\n        const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n        const { node } = this.props\r\n\r\n        switch (mode) {\r\n            case UIModes.delete:\r\n                if (node.isStatic) {\r\n                    stage.container().style.cursor = 'default'\r\n                    break\r\n                }\r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            case UIModes.none: {\r\n                stage.container().style.cursor = 'pointer'\r\n                break;\r\n            }\r\n\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                stage.container().style.cursor = 'crosshair'\r\n                break\r\n            }\r\n            case UIModes.move: {\r\n                if (node.isStatic) {\r\n                    stage.container().style.cursor = 'default'\r\n                    break\r\n                }\r\n                stage.container().style.cursor = 'move'\r\n                break\r\n            }\r\n\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n    hundleMouseLeave(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n        if (stage) stage.container().style.cursor = 'default'\r\n    }\r\n    getStorkeColor(): string {\r\n        const { mode, node } = this.props\r\n        switch (mode) {\r\n            case UIModes.move: {\r\n                if (node.isStatic) return theme.palette.secondary.dark\r\n                return theme.palette.primary.light\r\n            }\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                return theme.palette.primary.light\r\n            }\r\n            default:\r\n                return theme.palette.secondary.main\r\n        }\r\n    }\r\n    getStorkeWidth(): number {\r\n        const { mode } = this.props\r\n        const { node } = this.props\r\n        switch (mode) {\r\n            case UIModes.move: {\r\n                if (node.isStatic) return 0\r\n                return 2\r\n            }\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                return 2\r\n            }\r\n            default:\r\n                return 0\r\n        }\r\n\r\n    }\r\n    getFillColor(): string {\r\n        const { node } = this.props\r\n        if (node.isStatic) {\r\n            if (node.isFixed) return theme.palette.secondary.dark\r\n            return theme.palette.secondary.light\r\n        }\r\n        return theme.palette.secondary.main\r\n\r\n    }\r\n    viewForce(force: Force) {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Arrow\r\n                    points={[\r\n                        0,\r\n                        0,\r\n                        consts.UI_cellSize,\r\n                        0,\r\n                    ]}\r\n                    stroke={theme.palette.grey[300]}\r\n                    strokeWidth={size / 3}\r\n                    shadowBlur={2}\r\n                    pointerLength={consts.UI_cellSize / 10}\r\n                    pointerWidth={consts.UI_cellSize / 10}\r\n                    hitStrokeWidth={size * 2}\r\n                    rotation={force.value > 0 ? force.angle : 180 + force.angle}\r\n                />\r\n                <Text\r\n                    x={force.angle === 0 ? (force.value > 0 ? consts.UI_cellSize / 3 : -consts.UI_cellSize) : consts.UI_cellSize / 3}\r\n                    y={force.angle === 90 ? (force.value > 0 ? consts.UI_cellSize / 3 : -consts.UI_cellSize / 2) : -consts.UI_cellSize / 1.5}\r\n                    text={force.value + \"H\"}\r\n                />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n    viewFixation(angle: 0 | 90) {\r\n\r\n        const {node} = this.props\r\n        return (<Group\r\n                x={0}\r\n                y={0}\r\n                rotation={angle}\r\n            >\r\n            <Line\r\n                points={[\r\n                    0, 0,\r\n                    0, consts.UI_cellSize,\r\n                    -consts.UI_cellSize / 2,  consts.UI_cellSize,\r\n                    consts.UI_cellSize / 2,  consts.UI_cellSize,\r\n                ]}\r\n                stroke={theme.palette.grey[300]}\r\n                strokeWidth={size / 4}\r\n                shadowBlur={2}\r\n            />\r\n            <Circle\r\n                radius={size / 2}\r\n                fill={theme.palette.grey[500]}\r\n                x={0}\r\n                y={consts.UI_cellSize - (size/1.7)}\r\n            />\r\n        </Group>)\r\n    }\r\n    shouldComponentUpdate(nextProps: UINodeProps) {\r\n        return (\r\n            nextProps.node !== this.props.node ||\r\n            nextProps.mode !== this.props.mode ||\r\n            nextProps.selected !== this.props.selected\r\n        )\r\n    }\r\n    render() {\r\n        const { onClick, mode, selected, node } = this.props\r\n\r\n        return (\r\n            <Group\r\n                x={node.x}\r\n                y={node.y}\r\n                _useStrictMode\r\n                onClick={(e: any) => onClick(e, node)}\r\n            >\r\n                {node.forceX && this.viewForce(node.forceX)}\r\n                {node.forceY && this.viewForce(node.forceY)}\r\n                {node.isFixed === 'x' && this.viewFixation(90)}\r\n                {node.isFixed === 'y' && this.viewFixation(0)}\r\n                {node.isFixed === 'xy' && this.viewFixation(90)}\r\n                {node.isFixed === 'xy' && this.viewFixation(0)}\r\n                <Circle\r\n                    radius={size}\r\n                    x={0}\r\n                    y={0}\r\n                    fill={this.getFillColor()}\r\n                    shadowBlur={selected ? 8 : 2}\r\n                    stroke={this.getStorkeColor()}\r\n                    strokeWidth={this.getStorkeWidth()}\r\n\r\n                    hitStrokeWidth={size * 2}\r\n                />\r\n                <Circle\r\n                    radius={size}\r\n                    x={node.x - node.x}\r\n                    y={node.y - node.y}\r\n                    onDragEnd={(e: KonvaEventObject<DragEvent>) => {\r\n                        e.target.to({\r\n                            x: 0,\r\n                            y: 0,\r\n                        })\r\n                    }}\r\n                    hitStrokeWidth={size * 2}\r\n                    draggable={mode === UIModes.move && !node.isStatic}\r\n                    onMouseEnter={(e: any) => this.hundleMouseEnter(e, mode)}\r\n                    onMouseLeave={(e: any) => this.hundleMouseLeave(e)}\r\n                    onDragMove={(e: KonvaEventObject<DragEvent>) => this.props.drag(e, node)}\r\n                />\r\n            </Group>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Line, Stage } from 'react-konva/lib/ReactKonvaCore'\r\nimport Konva from 'konva'\r\nimport { UIModes } from '../UIToolPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\n\r\ninterface UIBeamProps {\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    mode: UIModes,\r\n    selected: boolean,\r\n    beam: Beam\r\n}\r\n\r\nclass UIBeam extends React.Component<UIBeamProps>{\r\n\r\n    constructor(props: UIBeamProps) {\r\n        super(props)\r\n        this.hundleMouseEnter = this.hundleMouseEnter.bind(this)\r\n        this.hundleMouseLeave = this.hundleMouseLeave.bind(this)\r\n    }\r\n    hundleMouseEnter(e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) {\r\n        const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n\r\n        switch (mode) {\r\n            case UIModes.delete:\r\n            case UIModes.none: {\r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            }\r\n\r\n            default: {\r\n                break\r\n            }\r\n        }\r\n\r\n    }\r\n    hundleMouseLeave(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n        if (stage) stage.container().style.cursor = 'default'\r\n    }\r\n    shouldComponentUpdate(nextProps: UIBeamProps) {\r\n        const { beam, mode, selected } = this.props\r\n        return (\r\n            nextProps.beam !== beam ||\r\n            nextProps.mode !== mode ||\r\n            nextProps.selected !== selected\r\n        )\r\n    }\r\n    render() {\r\n        const { onClick, mode, selected, beam } = this.props\r\n        const size = consts.UI_beamSize\r\n        return (\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.endX,\r\n                    beam.endY\r\n                ]}\r\n                stroke={theme.palette.secondary.light}\r\n                strokeWidth={size}\r\n                shadowBlur={selected ? 8 : 2}\r\n\r\n                hitStrokeWidth={size * 4}\r\n                onClick={(e: any) => onClick(e, beam)}\r\n                onMouseEnter={(e: any) => this.hundleMouseEnter(e, mode)}\r\n                onMouseLeave={(e: any) => this.hundleMouseLeave(e)}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\nexport default UIBeam","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst UIGrid: React.FC<UIGridProps> = ({ widthCell, heightCell, heightBox, widthBox }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    const viewRows = () => {\r\n        const rows = []\r\n        for (let index = 0; index < countOfY; index++) {\r\n            rows.push(<Line\r\n                points={[\r\n                    0,\r\n                    index * heightCell,\r\n                    widthBox,\r\n                    index * heightCell,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const viewColumns = () => {\r\n        const columns = []\r\n        for (let index = 0; index < countOfX; index++) {\r\n\r\n            columns.push(<Line\r\n                points={[\r\n                    index*widthCell,\r\n                    0,\r\n                    index*widthCell,\r\n                    heightBox,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n\r\n        }\r\n        return columns\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns()}\r\n            {viewRows()}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIGrid","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport {  Entity } from 'src/models/Farm/ModelEntity';\r\nimport { UIModes } from '../UIToolPanel';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\nimport ScrollBar from 'react-custom-scrollbars';\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { UIBeam, UINode } from '..';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n        flexGrow: 1,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n    }\r\n})\r\n\r\n\r\nexport interface UIStageProps extends WithStyles<typeof styles> {\r\n    nodes: FarmNode[],\r\n    beams: Beam[],\r\n    forces: Force[],\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    stageHeight: number,\r\n    stageWidth: number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity): void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent | TouchEvent>): void,\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity): void,\r\n    stage: React.RefObject<Stage & Konva.Stage>\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = ({ classes, stage, stageHeight, stageWidth, onClick, onMouseMove, onDrag, forces,beams,nodes, uiMode, selectedEntity }) => {\r\n    return (\r\n        <ScrollBar \r\n            className={classes.root}\r\n            autoHide>\r\n            <Stage\r\n                height={stageHeight}\r\n                width={stageWidth}\r\n                style={{height:stageHeight, width:stageWidth}}\r\n                className={classes.stage}\r\n                onClick={onClick}\r\n                onMouseMove={onMouseMove}\r\n                ref={stage}\r\n            >\r\n\r\n                <Layer className=\"layer\" >\r\n                    <UIGrid\r\n                        heightCell={consts.UI_cellSize}\r\n                        widthCell={consts.UI_cellSize}\r\n                        heightBox={stageHeight}\r\n                        widthBox={stageWidth}\r\n                    />\r\n                    {beams.map(beam => (\r\n                        <UIBeam\r\n                            key={beam.id}\r\n                            beam={beam}\r\n                            mode={uiMode}\r\n                            onClick={onClick}\r\n                            selected={selectedEntity === beam}\r\n                        />\r\n                    ))}\r\n\r\n                    {nodes.map(node => (\r\n                        <UINode\r\n                            key={node.id}\r\n                            node={node}\r\n                            mode={uiMode}\r\n                            drag={onDrag}\r\n                            onClick={onClick}\r\n                            selected={selectedEntity === node}\r\n                        />\r\n                    ))}\r\n                </Layer>\r\n            </Stage>\r\n        </ScrollBar>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIStage)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Button } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { AppBar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n\r\n    },\r\n    btn:{\r\n        marginLeft:theme.spacing(2),\r\n        marginRight:theme.spacing(2)\r\n    },\r\n    grow:{\r\n        flexGrow:1\r\n    }\r\n})\r\n\r\nexport interface UIHeaderProps extends WithStyles<typeof styles> {\r\n    hundleSave?:(e: React.FormEvent<HTMLButtonElement>) => void,\r\n    hundleClear?:(e: React.FormEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nconst UIHeader: React.FC<UIHeaderProps> = (\r\n    { \r\n        classes, \r\n        hundleSave = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n        hundleClear = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n    }) => {\r\n\r\n    return (\r\n        <AppBar \r\n            className={classes.root}\r\n        >\r\n            <div className={classes.grow}/>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleSave}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleClear}\r\n            >\r\n                Очистить\r\n            </Button>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIHeader)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, List, ListItem, ListItemText, Collapse, ListItemIcon, Divider, Badge } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { GpsNotFixed as NodeIcon, Timeline as BeamIcon, List as TreePanelIcon, ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n        paddingLeft: theme.spacing(6)\r\n    },\r\n})\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes: FarmNode[],\r\n    beams: Beam[]\r\n    selectedEntity: Entity | undefined\r\n    onSelect(entity: Entity): void\r\n}\r\n\r\ninterface TreeState {\r\n    tabs: Map<string, boolean>,\r\n    open: boolean,\r\n\r\n}\r\n\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            tabs: new Map()\r\n        }\r\n        this.openTab = this.openTab.bind(this)\r\n        this.viewListItem = this.viewListItem.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        const { tabs } = this.state\r\n        tabs.set('Узлы', false)\r\n        tabs.set('Стержни', false)\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    openTab(tab: string): void {\r\n        const { tabs } = this.state\r\n        tabs.set(tab, !tabs.get(tab))\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    viewListItem(entityArray: Entity[], title: string, icon?: JSX.Element) {\r\n        const { selectedEntity, classes, onSelect } = this.props\r\n        const { tabs } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={() => this.openTab(title)}>\r\n                    {icon && (\r\n                        <ListItemIcon>\r\n                            <Badge badgeContent={entityArray.length} color=\"secondary\">\r\n                                {icon}\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                    )}\r\n                    <ListItemText primary={title} />\r\n                    {tabs.get(title) ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={tabs.get(title)} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {entityArray.map(item => (\r\n                            <ListItem\r\n                                button\r\n                                className={classes.nested}\r\n                                key={item.id}\r\n                                selected={selectedEntity === item}\r\n                                onClick={(e) => onSelect(item)}\r\n                            >\r\n                                <ListItemText primary={item.id} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render() {\r\n        const { nodes, beams } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"left\"\r\n                title=\"Структура проекта\"\r\n                btnIcon={(<TreePanelIcon />)}\r\n            >\r\n\r\n                {this.viewListItem(nodes, 'Узлы', (<NodeIcon />))}\r\n                {this.viewListItem(beams, 'Стержни', (<BeamIcon />))}\r\n\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Typography, IconButton, Box, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    subTitle: {\r\n        fontSize: 14,\r\n    },\r\n    title: {\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: Entity | undefined,\r\n    onDelete(entity: Entity): void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\n\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    getTypeStr(entity: Entity): string {\r\n        if (instanceOfNode(entity)) return \"Узел\"\r\n        else if (instanceOfBeam(entity)) return \"Стержень\"\r\n        else return \"Элемент\"\r\n    }\r\n    viewInfo(entity: Entity | undefined) {\r\n        const { classes, onDelete } = this.props\r\n        if (entity) return (\r\n            <Box className={classes.root}>\r\n                <Typography className={classes.subTitle} color=\"textSecondary\" gutterBottom>\r\n                    {this.getTypeStr(entity)}\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    {entity.name}\r\n                </Typography>\r\n                <IconButton aria-label=\"Delete\" onClick={() => onDelete(entity)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Box>\r\n        )\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"right\"\r\n                title=\"Информация о выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon />)}\r\n            >\r\n                {this.viewInfo(entity)}\r\n                <Divider />\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","import * as React from 'react'\r\nimport KeyHandler from 'react-key-handler'\r\nimport Konva from \"konva\"\r\nimport { Stage } from \"react-konva\"\r\nimport { createStyles, Theme, WithStyles, withStyles, Box } from '@material-ui/core';\r\nimport { IFarmStore } from './store/farmReducer';\r\nimport { UITreePanel, UIEntityInfo, UIStage, UIHeader, UIToolPanel } from './components';\r\nimport { UIModes } from './components/UIToolPanel';\r\nimport { MyMath } from 'src/utils';\r\nimport Stats from 'react-stats'\r\nimport { instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { FarmContainerClass } from './index'\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\nexport interface UIFarmProps extends IFarmStore, WithStyles<typeof styles> {\r\n    addNode: typeof FarmContainerClass.prototype.addNode,\r\n    addBeam: typeof FarmContainerClass.prototype.addBeam,\r\n    moveNode: typeof FarmContainerClass.prototype.moveNode,\r\n    moveBeam: typeof FarmContainerClass.prototype.moveBeam,\r\n    connectBeamToNode: typeof FarmContainerClass.prototype.connectBeamToNode,\r\n    deleteEntity: typeof FarmContainerClass.prototype.deleteEntity\r\n    defautlFarm:typeof FarmContainerClass.prototype.defautlFarm\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\nclass UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: 3000,\r\n            stageWidth: 3000,\r\n            uiMode: UIModes.none,\r\n            selectedEntity: undefined,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this._setStageSize = this._setStageSize.bind(this)\r\n        this.selectEntity = this.selectEntity.bind(this)\r\n        this.clearFarm = this.clearFarm.bind(this)\r\n        this.deleteEntity = this.deleteEntity.bind(this)\r\n\r\n        this.stage = React.createRef();\r\n    }\r\n    componentWillMount() {\r\n        this._setStageSize()\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this._setStageSize)\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container: HTMLDivElement = stage.attrs.container.parentElement\r\n            if (container) {\r\n                container.scrollTop = (container.scrollHeight - container.offsetHeight) / 2\r\n                container.scrollLeft = (container.scrollWidth - container.offsetWidth) / 2\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this._setStageSize)\r\n    }\r\n\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n        if (e.evt.button === 0) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace) {\r\n                        this.selectEntity(entity);\r\n                    } else this.setState({ selectedEntity: undefined })\r\n\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        this.props.addNode(cellX, cellY)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && instanceOfNode(entity)) {\r\n\r\n                        const beam = this.props.addBeam({\r\n                            x:entity.x,\r\n                            y:entity.y\r\n                        })\r\n                        if (instanceOfBeam(beam)) {\r\n                            const connectedBeam = this.props.connectBeamToNode(entity, beam, 'start')\r\n                            console.log(\"PAM\", connectedBeam);\r\n                            \r\n                            if(instanceOfBeam(connectedBeam))\r\n                                this.setState({\r\n                                    paintEntity: connectedBeam,\r\n                                    uiMode: UIModes.addBeamStart\r\n                                })\r\n                            else this.props.deleteEntity(beam.id)\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && instanceOfNode(entity) && instanceOfBeam(paintEntity)) {\r\n                        if (this.props.connectBeamToNode(entity, paintEntity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: undefined\r\n                            })\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this.deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        if (isEmptyPlace) this.setState({ selectedEntity: undefined })\r\n\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if (e.target.getStage()) {\r\n                    if (paintEntity && instanceOfBeam(paintEntity)) {\r\n                        this.props.moveBeam(paintEntity, layerX, layerY)\r\n                    } else this.setState({ uiMode: UIModes.addBeam })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.delete: {\r\n                const stage: Stage & Konva.Stage = e.target.getStage()\r\n                if (stage === e.target) {\r\n                    stage.container().style.cursor = 'default'\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n        const { uiMode } = this.state\r\n        switch (uiMode) {\r\n            case UIModes.move: {\r\n                if (instanceOfNode(entity)) {\r\n                    if (e.evt.defaultPrevented) {\r\n                        const { layerX, layerY } = e.evt\r\n                        this.props.moveNode(entity, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this.deletePaintEntity()\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        if(this.state.paintEntity) \r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n            paintEntity: undefined\r\n        })\r\n    }\r\n\r\n    _setStageSize(e?: UIEvent) {\r\n        this.setState({\r\n            stageHeight: window.innerHeight * 1.5,\r\n            stageWidth: window.innerWidth * 1.5\r\n        })\r\n    }\r\n    selectEntity(entity: Entity | undefined) {\r\n        if (entity) this.setState({ selectedEntity: entity })\r\n    }\r\n    clearFarm(): void {\r\n        if (window.confirm('Выуверены, что хотите очистить холст?')) {\r\n            this.props.defautlFarm()\r\n        }\r\n    }\r\n    deletePaintEntity() {\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            paintEntity: undefined\r\n        })\r\n    }\r\n    deleteEntity(entity: Entity) {\r\n        if (this.state.selectedEntity && this.state.selectedEntity.id === entity.id)\r\n            this.setState({\r\n                selectedEntity: undefined\r\n            })\r\n        this.props.deleteEntity(entity.id)\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, uiMode, selectedEntity } = this.state\r\n        const { classes, nodes, beams, forces } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Stats.FPSStats isActive={true} />\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIHeader\r\n                    hundleClear={this.clearFarm} />\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n\r\n                    <UITreePanel\r\n                        nodes={nodes}\r\n                        beams={beams}\r\n                        selectedEntity={selectedEntity}\r\n                        onSelect={this.selectEntity}\r\n                    />\r\n\r\n                    <UIStage\r\n                        onClick={this.onClick}\r\n                        onDrag={this.onDrag}\r\n                        onMouseMove={this.onMouseMove}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        nodes={nodes}\r\n                        beams={beams}\r\n                        forces={forces}\r\n                        stage={this.stage}\r\n                        selectedEntity={selectedEntity}\r\n                        uiMode={uiMode}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={selectedEntity}\r\n                        onDelete={this.deleteEntity} />\r\n                </Box>\r\n\r\n                <UIToolPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)} />\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UIFarm)","import * as React from 'react'\r\nimport UIFarm from './farm'\r\nimport { FarmNode, INode, createNode, instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { Beam, IBeam, createBeam, instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\nimport { Force, createForce, IForce, instanceOfForce } from 'src/models/Farm/ModelForce';\r\nimport uuid from 'uuid'\r\nimport testFarm from './_testFarm'\r\n\r\ninterface State {\r\n    nodes: FarmNode[],\r\n    beams: Beam[],\r\n    forces: Force[]\r\n}\r\ninterface Props {\r\n\r\n}\r\nexport class FarmContainerClass extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            nodes:[],\r\n            beams:[],\r\n            forces:[]\r\n        }\r\n        this.defautlFarm = this.defautlFarm.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        \r\n        this.defautlFarm()\r\n    }\r\n    addNode = (x: number, y: number, options?: INode) => {\r\n        const oldNode = this.state.nodes.find(item => item.x === x && item.y === y)\r\n        if (oldNode) return false\r\n        const id = uuid()\r\n        if (!id) return false\r\n        const node = createNode({\r\n            ...options,\r\n            id,\r\n            x,\r\n            y\r\n        })\r\n        this.setState({\r\n            nodes: [...this.state.nodes, node]\r\n        })\r\n        return node\r\n    }\r\n    addBeam = (options?: IBeam) => {\r\n\r\n        const id = uuid()\r\n        if (!id) return false\r\n        const beam = createBeam({\r\n            ...options,\r\n            id,\r\n        })\r\n        this.setState({\r\n            beams: [...this.state.beams, beam]\r\n        })\r\n        return beam\r\n    }\r\n    addForce = (options?: IForce) => {\r\n        const id = uuid()\r\n        if (!id) return false\r\n        const force = createForce({\r\n            ...options,\r\n            id,\r\n        })\r\n        this.setState({\r\n            forces: [...this.state.forces, force]\r\n        })\r\n        return force\r\n    }\r\n\r\n    connectBeamToNode = (_node: FarmNode, _beam: Beam, place: 'start' | 'end') => {\r\n\r\n        const node = createNode(_node)\r\n        const beam = createBeam(_beam)\r\n\r\n        switch (place) {\r\n            case 'start': {\r\n\r\n                beam.startConnectedNodeID = node.id\r\n                node.beamsID.push(beam.id)\r\n                \r\n                beam.x = node.x\r\n                beam.y = node.y\r\n                this.setState(state => ({\r\n                    nodes: state.nodes.map(item => {\r\n                        if (item.id === node.id) return node\r\n                        return item\r\n                    }),\r\n                    beams: state.beams.map(item => {                        \r\n                        if (item.id === beam.id) return beam\r\n                        return item\r\n                    })\r\n                }))\r\n                console.log(...this.state.beams);\r\n                \r\n                return beam;\r\n            }\r\n            case 'end': {\r\n                const beamsOfNode = this.state.beams.filter(item => (node && node.beamsID.includes(item.id)))\r\n                const oldBeam = beamsOfNode.find(item =>\r\n                    (node && beam && (\r\n                        (item.startConnectedNodeID === beam.startConnectedNodeID && item.endConnectedNodeID === node.id) ||\r\n                        (item.startConnectedNodeID === node.id && item.endConnectedNodeID === beam.startConnectedNodeID) ||\r\n                        (item.id === beam.id && item.startConnectedNodeID === node.id))\r\n                    )\r\n                )\r\n\r\n                if (!oldBeam) {\r\n\r\n                    node.beamsID.push(beam.id)\r\n                    beam.endConnectedNodeID = node.id\r\n                    beam.endX = node.x\r\n                    beam.endY = node.y\r\n                    this.setState(state => ({\r\n                        nodes: state.nodes.map(item => {\r\n                            if (item.id === node.id) return node\r\n                            return item\r\n                        }),\r\n                        beams: state.beams.map(item => {\r\n                            if (item.id === beam.id) return beam\r\n                            return item\r\n                        })\r\n                    }))\r\n                    return true\r\n                }\r\n                return false\r\n            }\r\n            default: return false\r\n        }\r\n    }\r\n    addForceToNode = (node: FarmNode, options?: IForce) => {\r\n        let force: Force = createForce({\r\n            ...options,\r\n            nodeID: node.id,\r\n        })\r\n\r\n        if (force.angle === 0) node.forceX = force\r\n        else node.forceY = force\r\n        this.setState(state => ({\r\n            nodes: state.nodes.map(item => {\r\n                if (node && item.id === node.id) return node\r\n                return item\r\n            }),\r\n            forces: [...state.forces, force]\r\n        }))\r\n        return force\r\n\r\n    }\r\n    moveNode = (_node: FarmNode, x: number, y: number, ) => {\r\n\r\n        if (_node.isStatic) return false\r\n        const oldNode = this.state.nodes.find(item => item.x === x && item.y === y)\r\n        if (!oldNode) {\r\n            const node = createNode({\r\n                ..._node,\r\n                x,\r\n                y\r\n            })\r\n            const beamsOfNode = this.state.beams.filter(item => (node && node.beamsID.includes(item.id)))\r\n            beamsOfNode.forEach(item => {\r\n                if (node) {\r\n                    const beam = createBeam(item)\r\n                    if (beam.startConnectedNodeID === node.id) {\r\n                        beam.x = x\r\n                        beam.y = y\r\n\r\n                    } else if (item.endConnectedNodeID === node.id) {\r\n                        beam.endX = x\r\n                        beam.endY = y\r\n                    }\r\n                    this.setState(state => ({\r\n                        beams: state.beams.map(item => {\r\n                            if (item.id === beam.id) return beam\r\n                            return item\r\n                        })\r\n                    }))\r\n                }\r\n            })\r\n            this.setState(state => ({\r\n                nodes: state.nodes.map(item => {\r\n                    if (item.id === node.id) return node\r\n                    return item\r\n                }),\r\n            }))\r\n\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    moveBeam = (beam: Beam, x: number, y: number, place: 'start' | 'end' = 'end') => {\r\n\r\n        beam = createBeam(beam)\r\n        if (place === 'start') {\r\n            beam.x = x\r\n            beam.y = y\r\n        }\r\n        else {\r\n            beam.endX = x\r\n            beam.endY = y\r\n        }\r\n        \r\n        this.setState(state => ({\r\n            beams: state.beams.map(item => {\r\n                if (beam && item.id === beam.id) return beam\r\n                return item\r\n            })\r\n        }))\r\n        return true\r\n    }\r\n\r\n    deleteEntity = (id: string) => {\r\n\r\n        let entity: Beam | FarmNode | Force | undefined =\r\n            this.state.beams.find(item => item.id === id) ||\r\n            this.state.nodes.find(item => item.id === id) ||\r\n            this.state.forces.find(item => item.id === id)\r\n\r\n        if (instanceOfNode(entity)) {\r\n            if (entity.isStatic) return false\r\n            const beamsOfNode = this.state.beams.filter(item => (instanceOfNode(entity) && entity.beamsID.includes(item.id)))\r\n            beamsOfNode.forEach(beam => {\r\n                if (entity instanceof Node) {\r\n                    let _node: FarmNode | undefined\r\n                    if (beam.startConnectedNodeID === entity.id) {\r\n                        _node = this.state.nodes.find(item => item.id === beam.endConnectedNodeID)\r\n                    }\r\n                    else {\r\n                        _node = this.state.nodes.find(item => item.id === beam.startConnectedNodeID)\r\n                    }\r\n                    if (_node) {\r\n                        _node = createNode(_node)\r\n                        _node.beamsID = _node.beamsID.filter(id => id !== beam.id)\r\n                        this.setState(state => ({\r\n                            nodes: state.nodes.map(item => {\r\n                                if (_node && item.id === _node.id) return _node\r\n                                return item\r\n                            }),\r\n                        }))\r\n                    }\r\n                    this.setState(state => ({\r\n                        beams: state.beams.filter(i => i.id !== beam.id)\r\n                    }))\r\n                }\r\n            })\r\n            if (entity.forceX) this.setState(state => ({\r\n                forces: state.forces.filter(i => (instanceOfNode(entity) && instanceOfForce(entity.forceX) && i.id !== entity.forceX.id))\r\n            }))\r\n            if (entity.forceY) this.setState(state => ({\r\n                forces: state.forces.filter(i => (instanceOfNode(entity) && instanceOfForce(entity.forceY) && i.id !== entity.forceY.id))\r\n            }))\r\n            this.setState(state => ({\r\n                nodes: state.nodes.filter(i => (instanceOfNode(entity) && i.id !== entity.id))\r\n            }))\r\n            return true\r\n        } else if (entity && instanceOfBeam(entity)) {\r\n            [entity.startConnectedNodeID, entity.endConnectedNodeID].forEach(nodeID => {\r\n                if (nodeID && nodeID.length > 0) {\r\n                    let _node = this.state.nodes.find(item => item.id === nodeID)\r\n                    if (_node && instanceOfBeam(entity)) {\r\n                        _node = createNode(_node)\r\n                        _node.beamsID = _node.beamsID.filter(id => {\r\n                            if (entity) return id !== entity.id\r\n                            return false\r\n                        })\r\n                        this.setState(state => ({\r\n                            nodes: state.nodes.map(item => {\r\n                                if (_node && item.id === _node.id) return _node\r\n                                return item\r\n                            }),\r\n                        }))\r\n                    }\r\n                }\r\n            })\r\n            this.setState(state => ({\r\n                beams: state.beams.filter(i => (instanceOfBeam(entity) && i.id !== entity.id))\r\n            }))\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    defautlFarm(){\r\n        const {n:nodes, b:beams,f:forces} = testFarm()\r\n        this.setState({\r\n            nodes,\r\n            beams,\r\n            forces\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <UIFarm\r\n                {...this.state}\r\n                {...this}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default FarmContainerClass","import { FarmNode, createNode } from \"src/models/Farm/ModelNode\";\r\nimport { Beam } from \"src/models/Farm/ModelBeam\";\r\nimport { Force, createForce } from \"src/models/Farm/ModelForce\";\r\n\r\nexport default () => {\r\n    const n : FarmNode[] = []\r\n    const b : Beam[] = []\r\n    const f : Force[] = []\r\n    let force : Force\r\n    let node  = createNode({\r\n        x:1000,\r\n        y:560,\r\n        isStatic:true,\r\n        isFixed:'xy'\r\n    })    \r\n    n.push(node)\r\n    node = createNode({\r\n        x:1200,\r\n        y:640,\r\n        isStatic:true,\r\n    })\r\n    force = createForce({\r\n        nodeID:node.id,\r\n        value:100,        \r\n    })\r\n    node.forceX = force\r\n    n.push(node)\r\n    f.push(force)\r\n    // if(node) {\r\n    //     farm.connectForceToNode(node, 0 , 100)\r\n    //     farm.connectForceToNode(node, 90 , 100)\r\n    // }\r\n    // node = farm.addNode(1200,760,0,\"\",true)\r\n    // if(node) {\r\n    //     farm.connectForceToNode(node, 0 , -100)\r\n    //     farm.connectForceToNode(node, 90 , -100)\r\n    // }\r\n    \r\n    return {n,b,f}\r\n}","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"20%\",\r\n\t\theight:'20%'\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({classes} : WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img \r\n\t\t\t\tsrc={consts.bridgeIcon_2} \r\n\t\t\t\talt=\"logo\" \r\n\t\t\t\tclassName={classes.logo} \r\n\t\t\t/>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.FARM_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { IHomeStore } from './homeReducer';\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\twidth:'100%',\r\n\t\tminHeight:'100%',\r\n\t\tdisplay:'block',\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends IHomeStore, WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport * as consts from './static/const';\nimport {CssBaseline} from '@material-ui/core';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/styles';\n\n\ninterface IAppProps {\n\n}\n\n\nclass App extends React.Component<IAppProps> {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={consts.title}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":consts.bridgeIcon_2},\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":consts.airBridge},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/css?family=Roboto:300,400,500'},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/icon?family=Material+Icons'}\n\t\t\t\t\t]}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": consts.description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": consts.title},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": consts.url},\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<CssBaseline/>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t</Switch>\n\n\t\t\t\t</ThemeProvider>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","// import favicon from './favicon.ico'\r\nimport ogImage from './ogImage.png'\r\nimport bridgeIcon_1 from './icon.png'\r\nimport bridgeIcon_2 from './bridge.png'\r\nimport airBridge from './airBridge.png'\r\nimport path from 'path'\r\n\r\n// Strings\r\nexport const url = process.env.PUBLIC_URL\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"\r\nexport const favicon = path.resolve(__dirname,\"favicon.ico\")\r\n\r\n// UI\r\nexport const UI_cellSize = 40\r\nexport const UI_nodeSize = 15\r\nexport const UI_beamSize = 6\r\n\r\n\r\n// Images\r\nexport {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";"],"sourceRoot":""}