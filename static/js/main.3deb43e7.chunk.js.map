{"version":3,"sources":["pages/Farm/components/UIToolPanel.tsx","utils/history.ts","utils/math.ts","models/Farm/ModelEntity.ts","models/Farm/ModelNode.ts","models/Farm/ModelBeam.ts","models/Farm/ModelFarm.ts","pages/Farm/farmReducer.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Farm/farmTypes.ts","pages/Home/homeTypes.ts","theme.ts","pages/Farm/components/UIFarmEntities/UINode.tsx","pages/Farm/components/UIFarmEntities/UIBeam.tsx","pages/Farm/components/UIFarmEntities/UIGrid.tsx","pages/Farm/components/UIFarmEntities/UIStage.tsx","pages/Farm/components/UIToolBar.tsx","components/sidebar/sidebar.tsx","components/sidebar/index.ts","pages/Farm/components/UITreePanel.tsx","pages/Farm/components/UIEntityInfo.tsx","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","static/const.ts","static/ogImage.png","static/icon.png","static/bridge.png","static/airBridge.png"],"names":["UIModes","createBrowserHistory","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","UI_cellSize","y","Entity","props","Object","classCallCheck","this","id","angle","name","newX","newY","Date","now","Node","_Entity","_this","possibleConstructorReturn","getPrototypeOf","call","beamsID","forcesID","inherits","createClass","key","value","beamID","find","push","filter","forceID","Beam","length","startConnectedNodeID","endConnectedNodeID","newAngle","nodeID","place","cos","sin","endX","getEndX","endY","getEndY","angleBePoints","lengthBePoints","Farm","_farm","fixedNodes","forces","nodes","beams","time","Map","arguments","undefined","getNodes","item","node","set","beam","delete","get","Error","concat","force","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getNode","map","getForce","_this2","getBeam","_beam","_node","connectNode","connectBeam","getBeamsOnNode","moveEndPoint","entity","_this3","forEach","removeBeam","deleteBeam","deleteNode","_entity","deleteEntity","_this4","moveStartPoint","defaultFarmState","workSpace","defaultHomeState","title","mainReducer","combineReducers","farm","state","action","type","home","objectSpread","createStore","withStyles","theme","createStyles","root","position","padding","spacing","bottom","left","transform","backgroundColor","palette","primary","main","modsBtnGroup","_ref","onSelect","selected","classes","mods","mod","move","icon","react","ZoomOutMap","addNode","MyLocation","addBeam","Power","Delete","Paper","className","ToggleButtonGroup","color","exclusive","onChange","e","size","ToggleButton","Tooltip","createMuiTheme","dark","light","secondary","background","default","UINode","drag","mode","onClick","UI_nodeSize","ReactKonva","radius","fill","shadowBlur","stroke","addBeamStart","getStorkeColor","strokeWidth","getStorkeWidth","hitStrokeWidth","draggable","_useStrictMode","onDragMove","_onClick","_x","apply","toString","onMouseEnter","stage","target","getStage","none","container","style","cursor","hundleMouseEnter","onMouseLeave","hundleMouseLeave","UIBeam","UI_beamSize","points","UIGrid","widthCell","heightCell","heightBox","widthBox","countOfX","countOfY","columns","index","viewColumns","rows","viewRows","flexGrow","overflow","stageHeight","stageWidth","onMouseMove","onDrag","uiMode","selectedEntity","height","width","ref","UIFarmEntities_UIGrid","getBeams","UIFarmEntities_UIBeam","UIFarmEntities_UINode","appBar","zIndex","drawer","AppBar","Toolbar","Sidebar","open","viewTooltip","switchDrawer","bind","assertThisInitialized","setState","flag","_this$props","children","btnTitile","btnTitle","btnIcon","anchor","_this$state","Drawer","variant","paper","drawerPaper","toolbar","onOpen","changeViewtooltip","onClose","Fab","drawerWidth","right","toogleIcon","Close","React","top","mixins","UITreePanel","tabs","openTab","viewListItem","tab","entityArray","ListItem","button","ListItemIcon","Badge","badgeContent","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","nested","Divider","_this$props2","components_sidebar","esm_List","GpsNotFixed","Timeline","paddingLeft","UIEntityInfo","onDelete","Box","Typography","subTitle","gutterBottom","getTypeStr","IconButton","aria-label","Info","viewInfo","fontSize","marginBottom","UIFarm","paintEntity","setFarm","updateFarm","onKeyHandle","_setStageSize","_deleteEntity","_selectEntity","window","addEventListener","current","attrs","console","log","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","removeEventListener","nextProps","update","isEmptyPlace","evt","preventDefault","_e$evt","layerX","layerY","cellX","cellY","connectBeamToNode","_this$state2","_e$evt2","_this$state3","defaultPrevented","_e$evt3","moveNodeTo","_deletePaintEntity","_this$state4","innerHeight","innerWidth","_this$state5","esm","keyEventName","keyValue","components_UIToolBar","stageBox","components_UITreePanel","UIFarmEntities_UIStage","components_UIEntityInfo","components_UIToolPanel","setSelectedMode","display","flexDirection","connect","dispatch","bindActionCreators","farmActions","navPath","alignItems","justifyContent","logo","descripton","btn","src","bridgeIcon_2","alt","align","description","Button","Link","to","Home","homeHeader","setTitle","homeActions","App","Helmet_default","a","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","path","exact","ReactDOM","render","react_default","createElement","es","store","react_router_dom","src_App","document","getElementById","__webpack_require__","r","__webpack_exports__","__dirname","d","url","favicon","_ogImage_png__WEBPACK_IMPORTED_MODULE_0__","_ogImage_png__WEBPACK_IMPORTED_MODULE_0___default","n","_icon_png__WEBPACK_IMPORTED_MODULE_1__","_icon_png__WEBPACK_IMPORTED_MODULE_1___default","_bridge_png__WEBPACK_IMPORTED_MODULE_2__","_bridge_png__WEBPACK_IMPORTED_MODULE_2___default","_airBridge_png__WEBPACK_IMPORTED_MODULE_3__","_airBridge_png__WEBPACK_IMPORTED_MODULE_3___default","path__WEBPACK_IMPORTED_MODULE_4__","process","resolve","module","exports","p"],"mappings":"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","file":"static/js/main.3deb43e7.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Tooltip, Paper } from '@material-ui/core';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { ZoomOutMap as MoveIcon, MyLocation as AddNodeIcon, Delete as DeleteIcon, Power as ConnectIcon } from '@material-ui/icons';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        padding: theme.spacing(1),\r\n        bottom:theme.spacing(4),\r\n        left: \"50%\",\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    modsBtnGroup: {\r\n\r\n    }\r\n})\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport interface IMode {\r\n    name: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolPanelProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIToolPanel: React.FC<UIToolPanelProps> = ({ onSelect, selected, classes }) => {\r\n    const mods: IMode[] = [\r\n        {\r\n            name: \"Перемещение\",\r\n            mod: UIModes.move,\r\n            icon: (<MoveIcon />)\r\n        },\r\n        {\r\n            name: \"Добавить узел\",\r\n            mod: UIModes.addNode,\r\n            icon: (<AddNodeIcon />)\r\n        },\r\n        {\r\n            name: \"Соединить узлы\",\r\n            mod: UIModes.addBeam,\r\n            icon: (<ConnectIcon />)\r\n        },\r\n        {\r\n            name: \"Удалить\",\r\n            mod: UIModes.delete,\r\n            icon: (<DeleteIcon />)\r\n        }\r\n    ]\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={selected}\r\n                exclusive\r\n                onChange={(e, value) => onSelect(value)}\r\n                size=\"medium\"\r\n                className={classes.modsBtnGroup}\r\n            >\r\n                {mods.map(item => (\r\n                    <ToggleButton\r\n                        value={item.mod}\r\n                        key={item.name}\r\n                        color=\"secondory\"\r\n\r\n                    >\r\n                        <Tooltip title={item.name}>\r\n                            {item.icon}\r\n                        </Tooltip>\r\n                    </ToggleButton>\r\n                ))}\r\n            </ToggleButtonGroup>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolPanel)","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { consts } from \"src/static\";\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x:number):number{        \r\n        return  Math.round(x / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n    static cellY(y:number):number{        \r\n        return  Math.round(y / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","export interface IEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\nexport class Entity implements IEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    constructor(props: IEntity) {\r\n        this.id = Date.now()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id + \"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { IEntity, Entity } from './ModelEntity';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: number[]\r\n    forcesID?: number[],\r\n}\r\n\r\nexport class Node extends Entity {\r\n    beamsID: number[];\r\n    forcesID: number[];\r\n    constructor(props:INode) {\r\n        super(props)\r\n        this.beamsID = props.beamsID || []\r\n        this.forcesID = props.forcesID  || []\r\n    }\r\n    connectBeam(beamID: number):boolean {\r\n        if (!this.beamsID.find(id => id === beamID)){\r\n            this.beamsID.push(beamID)\r\n            return true            \r\n        }\r\n        return false\r\n    }\r\n    removeBeam(beamID: number) {\r\n        \r\n        this.beamsID  = this.beamsID.filter(id => id !== beamID)\r\n    }\r\n    connectForce(forceID: number) {\r\n        if (!this.forcesID.find(id => id === forceID))\r\n            this.forcesID.push(forceID)\r\n    }\r\n    removeForce(forceID: number) {\r\n        this.beamsID   = this.forcesID.filter(id => id !== forceID)\r\n    }\r\n}","import { IEntity, Entity } from \"./ModelEntity\";\r\nimport { MyMath } from \"src/utils\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: number\r\n    endConnectedNodeID?: number\r\n    newAngle?:number\r\n}\r\n\r\nexport class Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n    newAngle:number\r\n    constructor(props: IBeam) {\r\n        super(props)\r\n        this.length = props.length || 0\r\n        this.startConnectedNodeID = props.startConnectedNodeID || 0\r\n        this.endConnectedNodeID = props.endConnectedNodeID || 0\r\n        this.newAngle = this.angle\r\n    }\r\n\r\n    connectNode(nodeID: number, place: 'start' | 'end'): void {\r\n        switch (place) {\r\n            case 'start':{\r\n                this.startConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            case 'end':{\r\n                this.endConnectedNodeID = nodeID\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    removeNode(place: 'start' | 'end'): void {\r\n        place === 'start' ?\r\n        this.startConnectedNodeID = 0 :\r\n        this.endConnectedNodeID = 0\r\n    }\r\n    getEndX():number{\r\n        return this.x + (this.length * Math.cos(this.angle * Math.PI))\r\n    }\r\n    getEndY():number{\r\n        return this.y + (this.length * Math.sin(this.angle * Math.PI))\r\n    }\r\n    moveStartPoint(x:number,y:number):void{\r\n        const endX = this.getEndX()\r\n        const endY = this.getEndY()\r\n        this.x = x\r\n        this.y = y\r\n        this.angle = MyMath.angleBePoints(x,y, endX,endY)\r\n        this.length = MyMath.lengthBePoints(x,y, endX,endY)\r\n    }\r\n    \r\n    moveEndPoint(x:number,y:number):void{\r\n        this.angle = MyMath.angleBePoints(this.x,this.y,x,y)\r\n        this.length = MyMath.lengthBePoints(this.x,this.y,x,y)\r\n    }\r\n}","import { FixedNode } from \"./ModelFixedNode\";\r\nimport { Force } from \"./ModelForce\";\r\nimport { Node } from \"./ModelNode\";\r\nimport { Beam } from \"./ModelBeam\";\r\nimport { Entity } from \"./ModelEntity\";\r\n\r\n\r\n\r\n\r\nexport interface IFarm {\r\n    fixedNodes?: Map<number, FixedNode>\r\n    forces?: Map<number, Force>\r\n    nodes?: Map<number, Node>\r\n    beams?: Map<number, Beam>\r\n}\r\n\r\n\r\n\r\nexport class Farm implements IFarm {\r\n    fixedNodes: Map<number, FixedNode>\r\n    forces: Map<number, Force>\r\n    nodes: Map<number, Node>\r\n    beams: Map<number, Beam>\r\n    time: number\r\n    constructor(_farm?: Farm) {\r\n        this.nodes = _farm ? _farm.nodes : new Map()\r\n        this.fixedNodes = _farm ? _farm.fixedNodes : new Map()\r\n        this.forces = _farm ? _farm.forces : new Map()\r\n        this.beams = _farm ? _farm.beams : new Map()\r\n        this.time = Date.now()\r\n\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\"): boolean {\r\n        const oldNode = this.getNodes().find(item => item.x === x && item.y === y)\r\n        if(oldNode) return false\r\n        const node = new Node({\r\n            x,\r\n            y,\r\n            angle,\r\n            name\r\n        })\r\n        this.nodes.set(node.id, node)\r\n        return true\r\n    }\r\n    addBeam(x: number, y: number): Beam {\r\n        const beam = new Beam({\r\n            x,\r\n            y\r\n        })\r\n        this.beams.set(beam.id, beam)\r\n        return beam\r\n    }\r\n    private deleteNode(nodeID: number): void {\r\n        this.nodes.delete(nodeID)\r\n    }\r\n    private deleteBeam(beamID: number): void {\r\n        this.beams.delete(beamID)\r\n    }\r\n\r\n    getNode(nodeID: number): Node {\r\n        const node = this.nodes.get(nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number): Beam {\r\n        const beam = this.beams.get(beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number): Force {\r\n        const force = this.forces.get(forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n\r\n    getNodes(): Node[] {\r\n        const nodes: Node[] = [];\r\n        for (let node of this.nodes.values()) {\r\n            nodes.push(node)\r\n        }\r\n        return nodes\r\n    }\r\n    getBeams(): Beam[] {\r\n        const beams: Beam[] = [];\r\n        for (let beam of this.beams.values()) {\r\n            beams.push(beam)\r\n        }\r\n        return beams\r\n    }\r\n\r\n    getForcesOnNode(nodeID: number): Force[] {\r\n        const forces: Force[] = this.getNode(nodeID).forcesID.map(forceID => this.getForce(forceID))\r\n        return forces\r\n    }\r\n    getBeamsOnNode(nodeID: number): Beam[] {\r\n        const beams: Beam[] = this.getNode(nodeID).beamsID.map(beamID => this.getBeam(beamID))\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): Node[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n\r\n    connectBeamToNode(beam: Beam | number, node: Node | number, place: 'start' | 'end' = 'start'): boolean {\r\n        let _beam: Beam = beam instanceof Beam ? beam : this.getBeam(beam)\r\n        let _node: Node = node instanceof Node ? node : this.getNode(node)\r\n\r\n        switch (place) {\r\n            case 'start': {\r\n\r\n                _beam.connectNode(_node.id, 'start')\r\n                _node.connectBeam(_beam.id)\r\n                break;\r\n            }\r\n            case 'end': {\r\n                const beams = this.getBeamsOnNode(_beam.startConnectedNodeID)\r\n                const oldBeam = beams.find(item =>\r\n                    (item.startConnectedNodeID === _beam.startConnectedNodeID && item.endConnectedNodeID === _node.id) ||\r\n                    (item.startConnectedNodeID === _node.id && item.endConnectedNodeID === _beam.startConnectedNodeID) ||\r\n                    (item.id === _beam.id && item.endConnectedNodeID === _beam.id)\r\n                )\r\n\r\n\r\n\r\n                if (!oldBeam && _node.connectBeam(_beam.id)) {\r\n                    _beam.moveEndPoint(_node.x, _node.y)\r\n                    _beam.connectNode(_node.id, \"end\")\r\n                } else return false\r\n                break;\r\n            }\r\n            default: return false\r\n        }\r\n\r\n        return true\r\n    }\r\n    deleteEntity(entity: Entity | number) {\r\n        if (entity instanceof Node) {\r\n            // const beams = this.getBeamsOnNode(entity.id)\r\n            const beams = entity.beamsID.map(beamID => this.getBeam(beamID))\r\n            beams.forEach(beam => {\r\n                if (beam.startConnectedNodeID === entity.id) this.getNode(beam.endConnectedNodeID).removeBeam(beam.id)\r\n                else this.getNode(beam.startConnectedNodeID).removeBeam(beam.id)\r\n                this.deleteBeam(beam.id)\r\n            })\r\n            this.deleteNode(entity.id)\r\n        } else if (entity instanceof Beam) {\r\n            [entity.startConnectedNodeID,entity.endConnectedNodeID].forEach(nodeID => {\r\n                if(nodeID > 0){\r\n                    this.getNode(nodeID).removeBeam(entity.id)\r\n                }\r\n            })\r\n            this.deleteBeam(entity.id)\r\n        } else if(entity instanceof Entity){\r\n            const _entity = this.nodes.get(entity.id) || this.beams.get(entity.id)\r\n            if(_entity) this.deleteEntity(_entity)\r\n        }else{            \r\n            const _entity = this.nodes.get(entity) || this.beams.get(entity)\r\n            if(_entity) this.deleteEntity(_entity)\r\n        }\r\n    }\r\n    moveNodeTo(nodeID: number, x: number, y: number): void {\r\n        const node = this.getNode(nodeID)\r\n        const _node = this.getNodes().find(item => item.x === x && item.y === y)\r\n        if(!_node){\r\n\r\n            node.x = x\r\n            node.y = y\r\n            node.beamsID.forEach(beamID => {\r\n                const beam = this.getBeam(beamID)\r\n                if (beam.startConnectedNodeID === nodeID) {\r\n                    beam.moveStartPoint(x, y)\r\n                } else if (beam.endConnectedNodeID === nodeID) {\r\n                    beam.moveEndPoint(x, y)\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport interface IFarmStore {\r\n    workSpace: Farm\r\n\r\n}\r\n\r\nexport const defaultFarmState: IFarmStore = {\r\n    workSpace: new Farm(),\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case FARM_UPDATE:{\r\n            const newState : IFarmStore = {workSpace:new Farm(action.workSpace)}\r\n            \r\n            return newState\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeStore, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeStore\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import { Action } from \"redux\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const FARM_UPDATE = 'FARM_UPDATE'\r\n\r\nexport interface IActionFarmUpdate extends Action {\r\n    type: typeof FARM_UPDATE,\r\n    workSpace:Farm\r\n}\r\n\r\nexport type FarmActions = IActionFarmUpdate;","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","\r\nimport {  createMuiTheme } from '@material-ui/core';\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark:\"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light:'#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\"\r\n        },\r\n        background:{\r\n            default:'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }  \r\n        \r\n    },\r\n});\r\n\r\nexport default theme","import * as React from 'react'\r\nimport { Circle, Stage } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { Node } from 'src/models/Farm';\r\nimport { UIModes } from '../UIToolPanel';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\n\r\nexport interface UINodeProps {\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, node: Node): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, node: Node): void\r\n    node: Node,\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\n\r\nconst UINode: React.FC<UINodeProps> = ({ node, drag, mode, onClick, selected }) => {\r\n    const size = consts.UI_nodeSize\r\n\r\n    const hundleMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n\r\n        switch (mode) {\r\n            case UIModes.delete:\r\n            case UIModes.none: {\r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            }\r\n\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart: {\r\n                stage.container().style.cursor = 'crosshair'\r\n                break\r\n            }\r\n            case UIModes.move: {\r\n                stage.container().style.cursor = 'move'\r\n                break\r\n            }\r\n\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n    const hundleMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n        stage.container().style.cursor = 'default'\r\n    }\r\n    const getStorkeColor = (mode: UIModes):string => {\r\n        switch (mode) {\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart:\r\n            case UIModes.move:{\r\n                return theme.palette.primary.light\r\n            }\r\n            default:\r\n                return theme.palette.secondary.main\r\n        }\r\n    }\r\n    const getStorkeWidth = (mode :UIModes):number => {\r\n        switch (mode) {\r\n            case UIModes.addBeam:\r\n            case UIModes.addBeamStart:\r\n            case UIModes.move:{\r\n                return 2\r\n            }\r\n            default:\r\n                return 0\r\n        }\r\n\r\n    }\r\n    return (\r\n        <React.Fragment\r\n            key={node.id}>\r\n            {/* <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            /> */}\r\n\r\n            <Circle\r\n                className=\"MyCircle\"\r\n                radius={size}\r\n                x={node.x}\r\n                y={node.y}\r\n                fill={theme.palette.secondary.main}\r\n                shadowBlur={selected ? 8 : 2}\r\n                stroke={getStorkeColor(mode)}\r\n                strokeWidth={getStorkeWidth(mode)}\r\n                \r\n                hitStrokeWidth={size * 2}\r\n                draggable={mode === UIModes.move}\r\n                _useStrictMode\r\n                onDragMove={(e) => drag(e, node)}\r\n                onClick={(e) => onClick(e, node)}\r\n                onMouseEnter={(e) => hundleMouseEnter(e, mode)}\r\n                onMouseLeave={(e) => hundleMouseLeave(e)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { Line, Stage } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { UIModes } from '../UIToolPanel';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\n\r\nexport interface UIBeamProps {\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    beam: Beam,\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\n\r\nconst UIBeam: React.FC<UIBeamProps> = ({ beam,  mode, onClick, selected }) => {\r\n    const size = consts.UI_beamSize\r\n    const hundleMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, mode: UIModes) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n    \r\n        switch (mode) {\r\n            case UIModes.delete:\r\n            case UIModes.none:{            \r\n                stage.container().style.cursor = 'pointer'\r\n                break\r\n            }\r\n\r\n            default:{\r\n                break\r\n            }\r\n        }\r\n    \r\n    }\r\n    const hundleMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const stage: Stage & Konva.Stage = e.target.getStage()\r\n        stage.container().style.cursor = 'default'\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.getEndX(),\r\n                    beam.getEndY()\r\n                ]}\r\n                stroke={theme.palette.secondary.light}\r\n                strokeWidth={size}\r\n                shadowBlur={selected ? 8 : 2}\r\n\r\n                hitStrokeWidth={size*4} \r\n                onClick={(e) => onClick(e,beam)}\r\n                onMouseEnter={(e) => hundleMouseEnter(e, mode)}\r\n                onMouseLeave={(e) => hundleMouseLeave(e)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIBeam","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst UIGrid: React.FC<UIGridProps> = ({ widthCell, heightCell, heightBox, widthBox }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    const viewRows = () => {\r\n        const rows = []\r\n        for (let index = 0; index < countOfY; index++) {\r\n            rows.push(<Line\r\n                points={[\r\n                    0,\r\n                    index * heightCell,\r\n                    widthBox,\r\n                    index * heightCell,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const viewColumns = () => {\r\n        const columns = []\r\n        for (let index = 0; index < countOfX; index++) {\r\n\r\n            columns.push(<Line\r\n                points={[\r\n                    index*widthCell,\r\n                    0,\r\n                    index*widthCell,\r\n                    heightBox,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n\r\n        }\r\n        return columns\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns()}\r\n            {viewRows()}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIGrid","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport { UINode, UIBeam } from '..';\r\nimport { Farm, Entity } from 'src/models/Farm';\r\nimport { UIModes } from '../UIToolPanel';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n        // width:\"100%\",\r\n        flexGrow: 1,\r\n        overflow:'auto',\r\n    }\r\n})\r\n\r\n\r\nexport interface UIStageProps extends WithStyles<typeof styles> {\r\n    farm:Farm,\r\n    uiMode:UIModes,\r\n    selectedEntity:Entity | undefined,\r\n    stageHeight:number,\r\n    stageWidth:number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity):void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent | TouchEvent>):void,\r\n    onDrag(e:Konva.KonvaEventObject<DragEvent>, entity:Entity):void,\r\n    stage:React.RefObject<Stage & Konva.Stage>\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = ({classes, stage, stageHeight,stageWidth, onClick, onMouseMove, onDrag, farm, uiMode,selectedEntity }) => {\r\n    return (\r\n        <Stage\r\n            height={stageHeight}\r\n            width={stageWidth}\r\n            className={classes.stage}\r\n            onClick={onClick}\r\n            onMouseMove={onMouseMove}\r\n            ref={stage}\r\n        >\r\n\r\n            <Layer className=\"layer\" >\r\n                <UIGrid \r\n                    heightCell={consts.UI_cellSize}\r\n                    widthCell={consts.UI_cellSize}\r\n                    heightBox={stageHeight}\r\n                    widthBox={stageWidth}\r\n                />\r\n                {farm.getBeams().map(beam => (\r\n                    <UIBeam\r\n                        key={beam.id}\r\n                        beam={beam}\r\n                        mode={uiMode}\r\n                        onClick={onClick}\r\n                        selected={selectedEntity === beam}\r\n                    />\r\n                ))}\r\n\r\n                {farm.getNodes().map(node => (\r\n                    <UINode\r\n                        key={node.id}\r\n                        node={node}\r\n                        mode={uiMode}\r\n                        drag={onDrag}\r\n                        onClick={onClick}\r\n                        selected={selectedEntity === node}\r\n                    />\r\n                ))}\r\n            </Layer>\r\n        </Stage>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIStage)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, AppBar, Toolbar} from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles> {\r\n    \r\n}\r\n\r\nconst UIToolBar: React.FC<UIToolBarProps> = ({  classes }) => {\r\n    \r\n    return (\r\n        <AppBar \r\n            position=\"fixed\" \r\n            className={classes.appBar}\r\n            color=\"primary\">\r\n            <Toolbar >\r\n               \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolBar)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(10),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface SidebarProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    btnTitle? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface SidebarState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\n\r\nclass Sidebar extends React.PureComponent<SidebarProps, SidebarState>{\r\n    constructor(props: SidebarProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    switchDrawer() {\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, btnTitle: btnTitile, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={btnTitile}\r\n                    open={btnTitile !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 15 : drawerWidth + 15 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 15 : drawerWidth + 15 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import Sidebar from './sidebar'\r\n\r\nexport default Sidebar","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, List, ListItem, ListItemText, Collapse, ListItemIcon, Divider, Badge } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Node, Beam, Entity } from 'src/models/Farm';\r\nimport { GpsNotFixed as NodeIcon, Timeline as BeamIcon, List as TreePanelIcon, ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n        paddingLeft: theme.spacing(6)\r\n    },\r\n})\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes: Node[],\r\n    beams: Beam[]\r\n    selectedEntity: Entity | undefined\r\n    onSelect(entity: Entity): void\r\n}\r\n\r\ninterface TreeState {\r\n    tabs: Map<string, boolean>,\r\n    open: boolean,\r\n\r\n}\r\n\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            tabs: new Map()\r\n        }\r\n        this.openTab = this.openTab.bind(this)\r\n        this.viewListItem = this.viewListItem.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        const { tabs } = this.state\r\n        tabs.set('Узлы', false)\r\n        tabs.set('Лучи', false)\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    openTab(tab: string): void {\r\n        const { tabs } = this.state\r\n        tabs.set(tab, !tabs.get(tab))\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    viewListItem(entityArray: Entity[], title: string, icon?: JSX.Element) {\r\n        const { selectedEntity, classes, onSelect } = this.props\r\n        const { tabs } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={() => this.openTab(title)}>\r\n                    {icon && (\r\n                        <ListItemIcon>\r\n                            <Badge badgeContent={entityArray.length} color=\"secondary\">\r\n                                {icon}\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                    )}\r\n                    <ListItemText primary={title} />\r\n                    {tabs.get(title) ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={tabs.get(title)} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {entityArray.map(item => (\r\n                            <ListItem\r\n                                button\r\n                                className={classes.nested}\r\n                                key={item.id}\r\n                                selected={selectedEntity === item}\r\n                                onClick={(e) => onSelect(item)}\r\n                            >\r\n                                <ListItemText primary={item.id} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render() {\r\n        const { nodes, beams } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"left\"\r\n                btnTitle=\"Структура проекта\"\r\n                btnIcon={(<TreePanelIcon />)}\r\n            >\r\n                {this.viewListItem(nodes, 'Узлы', (<NodeIcon />))}\r\n                {this.viewListItem(beams, 'Лучи', (<BeamIcon />))}\r\n\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Typography, IconButton, Box, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Node, Beam, Entity } from 'src/models/Farm';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    subTitle: {\r\n        fontSize: 14,\r\n    },\r\n    title: {\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: Entity | undefined,\r\n    onDelete(entity: Entity): void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\n\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    getTypeStr(entity: Entity): string {\r\n        if (entity instanceof Node) return \"Узел\"\r\n        else if (entity instanceof Beam) return \"Луч\"\r\n        else return \"Элемент\"\r\n    }\r\n    viewInfo(entity: Entity | undefined) {\r\n        const { classes, onDelete } = this.props\r\n        if (entity) return (\r\n            <Box className={classes.root}>\r\n                <Typography className={classes.subTitle} color=\"textSecondary\" gutterBottom>\r\n                    {this.getTypeStr(entity)}\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    {entity.name}\r\n                </Typography>\r\n                <IconButton aria-label=\"Delete\" onClick={() => onDelete(entity)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Box>\r\n        )\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"right\"\r\n                btnTitle=\"Информация об выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon />)}\r\n            >\r\n                {this.viewInfo(entity)}\r\n                <Divider />\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","import * as React from 'react'\r\nimport KeyHandler from 'react-key-handler'\r\nimport Konva from \"konva\"\r\nimport { Stage } from \"react-konva\"\r\nimport { createStyles, Theme, WithStyles, withStyles, Box } from '@material-ui/core';\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Farm, Node, Beam, Entity } from 'src/models/Farm';\r\nimport { UITreePanel, UIEntityInfo, UIStage } from './components';\r\nimport UIToolBar from './components/UIToolBar';\r\nimport UIToolPanel, { UIModes } from './components/UIToolPanel';\r\nimport { MyMath } from 'src/utils';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\nexport interface UIFarmProps extends IFarmStore, WithStyles<typeof styles> {\r\n    update: (workSpace: Farm) => void\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm: Farm,\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\nclass UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: 100,\r\n            stageWidth: 100,\r\n            farm: props.workSpace,\r\n            uiMode: UIModes.none,\r\n            selectedEntity: undefined,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.setFarm = this.setFarm.bind(this)\r\n        this.updateFarm = this.updateFarm.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this._setStageSize = this._setStageSize.bind(this)\r\n        this._deleteEntity = this._deleteEntity.bind(this)\r\n        this._selectEntity = this._selectEntity.bind(this)\r\n\r\n        this.stage = React.createRef();\r\n    }\r\n    componentWillMount(){\r\n        this._setStageSize()\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this._setStageSize)\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container : HTMLDivElement = stage.attrs.container\r\n            \r\n            if(container){ \r\n                console.log(container);              \r\n                container.scrollTop = (container.scrollHeight - container.offsetHeight) / 2\r\n                container.scrollLeft = (container.scrollWidth - container.offsetWidth) / 2\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this._setStageSize)\r\n    }\r\n    componentWillReceiveProps(nextProps: UIFarmProps) {\r\n        if (nextProps.workSpace !== this.state.farm)\r\n            this.setState({ farm: nextProps.workSpace })\r\n    }\r\n    setFarm(farm: Farm): void {\r\n        this.props.update(farm)\r\n    }\r\n    updateFarm(farm: Farm): void {\r\n        this.setState({ farm })\r\n\r\n    }\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity) {\r\n        const { uiMode, farm } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n\r\n        if (e.evt.button === 0) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace) {\r\n                        this._selectEntity(entity);\r\n                    } else this.setState({ selectedEntity: undefined })\r\n\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        farm.addNode(cellX, cellY, 0)\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && entity instanceof Node) {\r\n\r\n                        const beam = farm.addBeam(entity.x, entity.y)\r\n                        farm.connectBeamToNode(beam, entity)\r\n                        this.setState({\r\n                            paintEntity: beam,\r\n                            uiMode: UIModes.addBeamStart\r\n                        })\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && entity instanceof Node && this.state.paintEntity instanceof Beam) {\r\n                        const beam = this.state.paintEntity\r\n                        if (farm.connectBeamToNode(beam, entity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: undefined\r\n                            })\r\n\r\n                        this.updateFarm(farm)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this._deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        // if (isEmptyPlace) this.setState({ selectedEntity: undefined })\r\n\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, farm, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if(e.target.getStage()){\r\n                    if (paintEntity && paintEntity instanceof Beam) {\r\n                        const beam = paintEntity\r\n                        beam.moveEndPoint(layerX, layerY)\r\n                    } else this.setState({ uiMode: UIModes.addBeam })\r\n                    this.updateFarm(farm)\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.delete:{                \r\n                const stage: Stage & Konva.Stage = e.target.getStage()\r\n                if(stage === e.target){                    \r\n                    stage.container().style.cursor = 'default'\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n        const { farm, uiMode } = this.state\r\n        switch (uiMode) {\r\n            case UIModes.move:{\r\n                if (entity instanceof Node) {\r\n                    if (e.evt.defaultPrevented) {\r\n                        console.log(e.evt);\r\n                        \r\n                        const { layerX, layerY } = e.evt\r\n                        farm.moveNodeTo(entity.id, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                        this.updateFarm(farm)\r\n                    }\r\n                }\r\n                break\r\n            }        \r\n            default:\r\n                break;\r\n        }\r\n       \r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this._deletePaintEntity()\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        this._deletePaintEntity()\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n        })\r\n    }\r\n    _deletePaintEntity() {\r\n\r\n        const { uiMode, paintEntity, farm } = this.state\r\n        if (uiMode === UIModes.addBeamStart && paintEntity) {\r\n            farm.deleteEntity(paintEntity)\r\n            this.setState({\r\n                paintEntity: undefined,\r\n            })\r\n            this.updateFarm(farm)\r\n        }\r\n    }\r\n    _setStageSize(e?: UIEvent) {\r\n        this.setState({\r\n            stageHeight: window.innerHeight * 1.5,\r\n            stageWidth: window.innerWidth * 1.5\r\n        })\r\n    }\r\n    _selectEntity(entity:Entity | undefined){\r\n        if (entity) this.setState({ selectedEntity: entity })\r\n    }\r\n    _deleteEntity(entity: Entity) {\r\n\r\n        this.setState({ selectedEntity: undefined })\r\n        this.state.farm.deleteEntity(entity)\r\n        this.updateFarm(this.state.farm)\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, farm, uiMode, selectedEntity } = this.state\r\n        const { classes } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIToolBar/>\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <UITreePanel\r\n                        nodes={farm.getNodes()}\r\n                        beams={farm.getBeams()}\r\n                        selectedEntity={selectedEntity}\r\n                        onSelect={this._selectEntity}\r\n                    />\r\n                    <UIStage\r\n                        onClick={this.onClick}\r\n                        onDrag={this.onDrag}\r\n                        onMouseMove={this.onMouseMove}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        farm={farm}\r\n                        stage={this.stage}\r\n                        selectedEntity={selectedEntity}\r\n                        uiMode={uiMode}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={selectedEntity}\r\n                        onDelete={this._deleteEntity} />\r\n                </Box>\r\n\r\n                <UIToolPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)} />\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UIFarm)","import { FarmActions, FARM_UPDATE } from \"./farmTypes\";\r\nimport { Farm } from \"src/models/Farm\";\r\n\r\nexport const update = (workSpace : Farm) : FarmActions => ({\r\n    type:FARM_UPDATE,\r\n    workSpace\r\n})","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  (state: AppState) => ({\r\n    workSpace:state.farm.workSpace,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"auto\",\r\n\t\theight: 400\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({classes} : WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img src={consts.bridgeIcon_2} alt=\"logo\" className={classes.logo} />\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.FARM_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { IHomeStore } from './homeReducer';\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\twidth:'100%',\r\n\t\theight:'100%',\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends IHomeStore, WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport * as consts from './static/const';\nimport {CssBaseline} from '@material-ui/core';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/styles';\n\n\ninterface IAppProps {\n\n}\n\n\nclass App extends React.Component<IAppProps> {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={consts.title}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":consts.bridgeIcon_2},\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":consts.airBridge},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/css?family=Roboto:300,400,500'},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/icon?family=Material+Icons'}\n\t\t\t\t\t]}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": consts.description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": consts.title},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": consts.url},\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<CssBaseline/>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<main style={{height:\"100%\"}}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</main>\n\n\t\t\t\t</ThemeProvider>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","// import favicon from './favicon.ico'\r\nimport ogImage from './ogImage.png'\r\nimport bridgeIcon_1 from './icon.png'\r\nimport bridgeIcon_2 from './bridge.png'\r\nimport airBridge from './airBridge.png'\r\nimport path from 'path'\r\n\r\n// Strings\r\nexport const url = process.env.PUBLIC_URL\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"\r\nexport const favicon = path.resolve(__dirname,\"favicon.ico\")\r\n\r\n// UI\r\nexport const UI_cellSize = 40\r\nexport const UI_nodeSize = 10\r\nexport const UI_beamSize = 6\r\n\r\n\r\n// Images\r\nexport {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";"],"sourceRoot":""}