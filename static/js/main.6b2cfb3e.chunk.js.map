{"version":3,"sources":["utils/UI.ts","utils/history.ts","models/Farm/ModelNode.ts","static/colors.ts","utils/math.ts","store/farm/farmReducer.ts","store/farm/farmTypes.ts","models/Farm/ModelEntity.ts","models/Farm/ModelForce.ts","models/Farm/ModelBeam.ts","store/home/homeActions.ts","store/home/homeTypes.ts","store/home/homeReducer.ts","store/index.ts","pages/Farm/components/UIFarmEntities/UINode.tsx","pages/Farm/components/UIFarmEntities/UIBeam.tsx","pages/Farm/components/UIFarmEntities/UIGrid.tsx","pages/Farm/components/UIFarmEntities/UIStage.tsx","components/sidebar.tsx","components/appBar.tsx","components/myToggleButton.tsx","pages/Farm/components/UIHeader.tsx","pages/Farm/components/UITreePanel.tsx","pages/Farm/components/UIEntityInfo.tsx","pages/Farm/components/UIToolPanel.tsx","pages/Farm/farm.tsx","models/Farm/ModelFarm.ts","pages/Farm/index.tsx","pages/Farm/_testFarm.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/index.ts","App.tsx","index.tsx","static/const.ts","static/images/ogImage.png","static/images/icon.png","static/images/bridge.png","static/images/airBridge.png","static/images/fixation.svg"],"names":["UIModes","createBrowserHistory","NodeFixation","theme","createMuiTheme","palette","primary","dark","main","light","secondary","background","default","getNodeColor","node","isStatic","fixation","colors","fixedNode","staticNode","getNodeStorkeColor","mode","move","addBeam","addBeamStart","getNodeStorkeWidth","getBeamColor","beam","nodeMouseEnter","e","stage","target","getStage","delete","container","style","cursor","none","nodeMouseLeave","beamMouseEnter","beamMouseLeave","mainBackGround","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","UI_cellSize","y","defaultState","nodes","beams","forces","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","force","map","item","id","filter","createEntity","props","name","angle","newX","newY","entity","uuid","createForce","nodeID","value","createBeam","startConnectedNodeID","endConnectedNodeID","endX","endY","instanceOfBeam","object","createNode","beamsID","forceX","forceY","isFixed","None","instanceOfNode","setTitle","title","defaultHomeState","mainReducer","combineReducers","farm","FarmReducer","home","HomeReducer","createStore","applyMiddleware","thunk","size","UI_nodeSize","UINode","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewForce","bind","assertThisInitialized","nextProps","selected","react","ReactKonva","points","stroke","UI","grey","strokeWidth","shadowBlur","pointerLength","pointerWidth","hitStrokeWidth","rotation","text","radius","fill","_this2","_this$props","onClick","_useStrictMode","_onClick","_x","apply","toString","X","viewFixation","Y","XY","YX","align","fontSize","fontFamily","width","verticalAlign","onDragEnd","to","draggable","onMouseEnter","onMouseLeave","onDragMove","drag","React","UIBeam","_this$props2","UI_beamSize","ReactKonvaCore","UIGrid","_ref","widthCell","heightCell","heightBox","widthBox","countOfX","countOfY","columns","index","push","key","viewColumns","rows","viewRows","withStyles","createStyles","root","flexGrow","backgroundColor","classes","stageHeight","stageWidth","onMouseMove","onDrag","uiMode","selectedEntity","lib_default","a","className","autoHide","height","ref","UIFarmEntities_UIGrid","UIFarmEntities_UIBeam","UIFarmEntities_UINode","Sidebar","open","viewTooltip","switchDrawer","setState","flag","children","btnIcon","anchor","_this$state","Drawer","drawer","variant","paper","drawerPaper","toolbar","Typography","Divider","Tooltip","onOpen","changeViewtooltip","onClose","Fab","left","drawerWidth","right","color","toogleIcon","Close","position","top","spacing","zIndex","padding","mixins","appBar","logo","marginRight","marginLeft","& img","_ref$withLogo","withLogo","AppBar","clsx","Toolbar","react_router_dom","alt","src","bridgeIcon_2","viewLogo","btn","borderRadius","border","fade","active","transition","transitions","create","duration","short","contrastText","&$selected","&:hover","@media (hover: none)","&$disabled","icon","other","objectWithoutProperties","ToggleButton","assign","defineProperty","grow","_ref$hundleSave","hundleSave","alert","_ref$hundleClear","hundleClear","_ref$hundleCalculate","hundleCalculate","Button","UITreePanel","tabs","Map","openTab","viewListItem","set","tab","get","entityArray","onSelect","ListItem","button","ListItemIcon","Badge","badgeContent","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","nested","Brightness1","sidebar","esm_List","GpsNotFixed","Timeline","paddingLeft","UIEntityInfo","onDelete","Box","subTitle","gutterBottom","getTypeStr","IconButton","aria-label","Delete","Info","viewInfo","marginBottom","bottom","transform","modsBtnGroup","mods","mod","ZoomOutMap","addNode","MyLocation","Power","Paper","ToggleButtonGroup","exclusive","onChange","myToggleButton","UIFarm","paintEntity","UIonClick","UIonDrag","UIonMouseMove","onKeyHandle","selectEntity","clearFarm","deleteEntity","saveFarm","current","attrs","parentElement","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","isEmptyPlace","evt","preventDefault","_e$evt","layerX","layerY","cellX","cellY","connectedBeam","connectBeamToNode","console","log","_this$state2","_e$evt2","moveBeam","defaultPrevented","_e$evt3","moveNode","deletePaintEntity","window","confirm","defautlFarm","_this$state3","react_stats_default","FPSStats","isActive","esm","keyEventName","keyValue","components_UIHeader","stageBox","components_UITreePanel","UIFarmEntities_UIStage","components_UIEntityInfo","components_UIToolPanel","setSelectedMode","overflow","display","flexDirection","Farm","createClass","_fixedNodes","_staticNodes","_nodes","_node","checkingBeam","FarmContainerClass","_React$Component","options","find","_beam","place","moveEntity","includes","findOldBeam","moveBeamEnd","addForceToNode","forEach","i","inherits","nodesJSON","localStorage","getItem","beamsJSON","JSON","parse","_testFarm","createNodes","removeItem","setItem","stringify","navPath","alignItems","justifyContent","descripton","description","Link","Home","homeHeader","minHeight","connect","dispatch","bindActionCreators","homeActions","App","Helmet_default","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","airBridge","meta","charSet","content","property","url","CssBaseline","ThemeProvider","react_router","path","exact","ReactDOM","render","react_default","createElement","es","store","src_App","document","getElementById","__webpack_require__","r","__webpack_exports__","__dirname","d","favicon","path__WEBPACK_IMPORTED_MODULE_0__","path__WEBPACK_IMPORTED_MODULE_0___default","n","_images_ogImage_png__WEBPACK_IMPORTED_MODULE_1__","_images_ogImage_png__WEBPACK_IMPORTED_MODULE_1___default","_images_icon_png__WEBPACK_IMPORTED_MODULE_2__","_images_icon_png__WEBPACK_IMPORTED_MODULE_2___default","_images_bridge_png__WEBPACK_IMPORTED_MODULE_3__","_images_bridge_png__WEBPACK_IMPORTED_MODULE_3___default","_images_airBridge_png__WEBPACK_IMPORTED_MODULE_4__","_images_airBridge_png__WEBPACK_IMPORTED_MODULE_4___default","_images_fixation_svg__WEBPACK_IMPORTED_MODULE_5__","_images_fixation_svg__WEBPACK_IMPORTED_MODULE_5___default","process","resolve","module","exports","p"],"mappings":"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","file":"static/js/main.6b2cfb3e.chunk.js","sourcesContent":["import { FarmNode } from \"src/models/Farm/ModelNode\";\r\nimport { colors } from \"src/static\";\r\nimport { Beam } from \"src/models/Farm/ModelBeam\";\r\nimport Konva from \"konva\";\r\nimport { Stage } from \"konva/types/Stage\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark:\"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light:'#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\"\r\n        },\r\n        background:{\r\n            default:'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }  \r\n        \r\n    },\r\n});\r\nexport const getNodeColor = (node: FarmNode):string => {\r\n    \r\n    if (node.isStatic) {\r\n        if (node.fixation) return colors.fixedNode\r\n        return colors.staticNode\r\n    }\r\n    return colors.node\r\n}\r\nexport const getNodeStorkeColor = (node: FarmNode, mode : UIModes):string => {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return theme.palette.secondary.dark\r\n            return theme.palette.primary.light\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return theme.palette.primary.light\r\n        }\r\n        default:\r\n            return theme.palette.secondary.main\r\n    }\r\n}\r\nexport const getNodeStorkeWidth = (node: FarmNode, mode : UIModes): number =>  {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return 0\r\n            return 2\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return 2\r\n        }\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\nexport const getBeamColor = (beam : Beam) : string => {\r\n    return colors.beam\r\n}\r\n\r\n\r\nexport const nodeMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, node:FarmNode, mode: UIModes):void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break;\r\n        }\r\n\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            stage.container().style.cursor = 'crosshair'\r\n            break\r\n        }\r\n        case UIModes.move: {\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'move'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n}\r\nexport const nodeMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>):void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}\r\n\r\nexport const beamMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, beam:Beam, mode: UIModes) :void =>  {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break\r\n        }\r\n    }\r\n\r\n}\r\nexport const beamMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) :void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { IEntity, Entity, createEntity } from './ModelEntity';\r\nimport { Force } from './ModelForce';\r\n\r\nexport enum NodeFixation {\r\n    None = 0,\r\n    X = 1,\r\n    Y = 2,\r\n    XY = 3,\r\n    YX = XY\r\n\r\n}\r\nexport interface INode extends IEntity {\r\n    beamsID?: string[]\r\n    forceX?: Force,\r\n    forceY?: Force,\r\n    isStatic?: boolean\r\n    fixation?: NodeFixation\r\n}\r\n\r\nexport interface FarmNode extends Entity {\r\n    beamsID: string[];\r\n    forceX: Force | undefined\r\n    forceY: Force | undefined\r\n    isStatic: boolean\r\n    fixation: NodeFixation\r\n}\r\n\r\nexport const createNode = (props: INode = {}): FarmNode => {\r\n    const { beamsID, forceX, forceY, isStatic, fixation: isFixed } = props\r\n    const entity = createEntity(props)\r\n    const node: FarmNode = {\r\n        ...entity,\r\n        type: \"node\",\r\n        beamsID: beamsID || [],\r\n        forceX: forceX,\r\n        forceY: forceY,\r\n        isStatic: isStatic || false,\r\n        fixation: isFixed || NodeFixation.None\r\n    }\r\n    return node\r\n}\r\nexport const instanceOfNode = (object: any): object is FarmNode => object && object.type === 'node'","import { theme } from \"src/utils/UI\";\r\n\r\nexport const mainBackGround = \"#09B4D3\"\r\n\r\nexport const node = theme.palette.secondary.main\r\nexport const staticNode = theme.palette.secondary.light\r\nexport const fixedNode = theme.palette.secondary.dark\r\n\r\nexport const beam = theme.palette.secondary.light","import { consts } from \"src/static\";\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x:number):number{        \r\n        return  Math.round(x / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n    static cellY(y:number):number{        \r\n        return  Math.round(y / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","\r\nimport * as FarmTypes from './farmTypes'\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\n\r\nexport interface IFarmStore {\r\n    nodes:FarmNode[],\r\n    beams:Beam[],\r\n    forces:Force[]\r\n}\r\n\r\nexport const defaultState: IFarmStore = {\r\n    nodes:[],\r\n    beams:[],\r\n    forces:[]\r\n}\r\n\r\nexport const reducer = (state: IFarmStore = defaultState, action: FarmTypes.FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        // Add\r\n        case FarmTypes.ADD_NODE : {\r\n            const {node} = action\r\n            return {\r\n                ...state,\r\n                nodes : [\r\n                    ...state.nodes,\r\n                    node\r\n                ]\r\n            }\r\n            \r\n        }\r\n        case FarmTypes.ADD_BEAM : {\r\n            const {beam} = action\r\n            return {\r\n                ...state,\r\n                beams : [\r\n                    ...state.beams,\r\n                    beam\r\n                ]\r\n            }            \r\n        }\r\n        case FarmTypes.ADD_FORCE : {\r\n            const {force} = action\r\n            return {\r\n                ...state,\r\n                forces : [\r\n                    ...state.forces,\r\n                    force\r\n                ]\r\n            }            \r\n        }\r\n        // Edit\r\n        case FarmTypes.EDIT_NODE : {\r\n            return {\r\n                ...state,\r\n                nodes : state.nodes.map(item => {\r\n                    if(item.id === action.node.id){      \r\n                        // const node : Node = {\r\n                        //     ...item,\r\n                        //     ...action.node\r\n                        // }\r\n                        return {\r\n                                ...item,\r\n                                ...action.node\r\n                            }\r\n                    }\r\n                    return item\r\n                })\r\n            }            \r\n        }\r\n        case FarmTypes.EDIT_BEAM : {\r\n            return {\r\n                ...state,\r\n                beams : state.beams.map(item => {\r\n                    if(item.id === action.beam.id){ \r\n                        return {\r\n                            ...item,\r\n                            ...action.beam\r\n                        }   \r\n                    }\r\n                    return item\r\n                })\r\n            }            \r\n        }\r\n        // Delete\r\n        case FarmTypes.DELETE_ENTITY : {\r\n            return {\r\n                beams : state.beams.filter(item => item.id !== action.id),\r\n                nodes : state.nodes.filter(item => item.id !== action.id),\r\n                forces : state.forces.filter(item => item.id !== action.id),\r\n            }            \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { Action } from \"redux\";\r\nimport {  Beam } from \"src/models/Farm/ModelBeam\";\r\nimport {  FarmNode } from \"src/models/Farm/ModelNode\";\r\nimport { Force } from \"src/models/Farm/ModelForce\";\r\n\r\nexport const DELETE_EN = \"DELETE_EN\"\r\nexport const ADD_NODE = \"ADD_NODE\"\r\nexport const ADD_BEAM = \"ADD_BEAM\"\r\nexport const ADD_FORCE = \"ADD_FORCE\"\r\nexport const DELETE_ENTITY = \"DELETE_ENTITY\"\r\nexport const EDIT_NODE = \"EDIT_NODE\"\r\nexport const EDIT_BEAM = \"EDIT_BEAM\"\r\n\r\n// Add\r\nexport interface ActionAddNode extends Action {    \r\n    type: typeof ADD_NODE,\r\n    node:FarmNode\r\n}\r\nexport interface ActionAddBeam extends Action {    \r\n    type: typeof ADD_BEAM,\r\n    beam:Beam\r\n}\r\nexport interface ActionAddForce extends Action {    \r\n    type: typeof ADD_FORCE,\r\n    force:Force\r\n}\r\n// Delete\r\nexport interface ActionDeleteEntity extends Action {    \r\n    type: typeof DELETE_ENTITY,\r\n    id:string\r\n}\r\n// Edit\r\nexport interface ActionEditNode extends Action {    \r\n    type: typeof EDIT_NODE,\r\n    node:FarmNode\r\n}\r\nexport interface ActionEditBeam extends Action {    \r\n    type: typeof EDIT_BEAM,\r\n    beam:Beam\r\n}\r\n\r\nexport type FarmActions = (\r\n    ActionAddNode | \r\n    ActionAddBeam |\r\n    ActionAddForce |\r\n    ActionDeleteEntity |\r\n    ActionEditNode | \r\n    ActionEditBeam\r\n);","import uuid from 'uuid'\r\n\r\nexport interface IEntity {\r\n    id?: string\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n    type?:'entity' | 'node' | 'beam' | 'force'\r\n}\r\nexport interface Entity {    \r\n    id: string\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    type:'entity' | 'node' | 'beam' | 'force'\r\n}\r\n\r\nexport const createEntity = (props:IEntity = {}) :Entity => {\r\n    const { x, y, name, angle, id, newX, newY, type } = props\r\n    const entity : Entity =  {\r\n        id: id || uuid(),\r\n        x: x || 0,\r\n        y: y || 0,\r\n        angle: angle || 0,\r\n        name: name || \"\",\r\n        newX: newX || x || 0,\r\n        newY: newY || y || 0,\r\n        type:type || 'entity'\r\n    }\r\n    entity.name = name || entity.id\r\n    return entity\r\n\r\n}\r\nexport const instanceOfEntity = (object: any): object is Entity => object && object.type === 'entity';","import { IEntity, Entity, createEntity } from \"./ModelEntity\";\r\n\r\nexport interface IForce extends IEntity {\r\n    value?: number,\r\n    angle?: 0 | 90,\r\n    nodeID?: string\r\n}\r\n\r\nexport interface Force extends Entity {\r\n    value: number\r\n    angle: 0 | 90\r\n    nodeID: string\r\n}\r\nexport const createForce = (props: IForce = {}): Force => {\r\n    const {  angle, nodeID, value } = props\r\n    const entity = createEntity(props)\r\n    const force : Force =  {\r\n        ...entity,\r\n        type:\"force\",\r\n        angle: angle || 0,\r\n        nodeID: nodeID || \"\",\r\n        value: value || 0\r\n    }\r\n    return force\r\n}\r\nexport const instanceOfForce = (object: any): object is Force => object && object.type === 'force';","import { IEntity, Entity, createEntity } from \"./ModelEntity\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: string\r\n    endConnectedNodeID?: string\r\n    endX?: number,\r\n    endY?: number\r\n}\r\n\r\nexport interface Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: string | undefined\r\n    endConnectedNodeID: string | undefined\r\n    endX: number\r\n    endY: number\r\n}\r\nexport const createBeam = (props: IBeam = {}): Beam => {\r\n    const { length, startConnectedNodeID, endConnectedNodeID, endX, endY } = props\r\n    const entity = createEntity(props)\r\n    const bram: Beam = {\r\n        ...entity,\r\n        type: \"beam\",\r\n        length: length || 0,\r\n        startConnectedNodeID: startConnectedNodeID,\r\n        endConnectedNodeID: endConnectedNodeID,\r\n        endX: endX || entity.x || 0,\r\n        endY: endY || entity.y || 0,\r\n    }\r\n    return bram\r\n}\r\n\r\n\r\nexport const instanceOfBeam = (object: any): object is Beam => object && object.type === 'beam';\r\n","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const reducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { FarmReducer, FarmTypes } from './farm';\r\nimport { HomeReducer, HomeTypes } from './home';\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\r\n\r\n\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : FarmReducer.reducer,\r\n    home : HomeReducer.reducer\r\n})\r\n\r\nexport type AppState = ReturnType<typeof mainReducer> \r\nexport type AppActions = FarmTypes.FarmActions | HomeTypes.HomeActions\r\n\r\nexport default createStore(mainReducer, applyMiddleware(thunk as ThunkMiddleware<AppState,AppActions>));\r\n","import * as React from 'react'\r\nimport { Circle,  Text, Group, Arrow, Line } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { FarmNode, NodeFixation } from 'src/models/Farm/ModelNode';\r\nimport { consts } from 'src/static';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { KonvaEventObject } from 'konva/types/Node';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst size = consts.UI_nodeSize\r\ninterface UINodeProps {\r\n    node: FarmNode,\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, node: FarmNode): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, node: FarmNode): void\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\nclass UINode extends React.Component<UINodeProps>{\r\n    constructor(props: UINodeProps) {\r\n        super(props)\r\n        this.viewForce = this.viewForce.bind(this)\r\n    }\r\n    shouldComponentUpdate(nextProps: UINodeProps) {\r\n        return (\r\n            nextProps.node !== this.props.node ||\r\n            nextProps.mode !== this.props.mode ||\r\n            nextProps.selected !== this.props.selected\r\n        )\r\n    }\r\n\r\n    viewForce(force: Force) {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Arrow\r\n                    points={[\r\n                        0,\r\n                        0,\r\n                        consts.UI_cellSize,\r\n                        0,\r\n                    ]}\r\n                    stroke={UI.theme.palette.grey[300]}\r\n                    strokeWidth={size / 3}\r\n                    shadowBlur={2}\r\n                    pointerLength={consts.UI_cellSize / 10}\r\n                    pointerWidth={consts.UI_cellSize / 10}\r\n                    hitStrokeWidth={size * 2}\r\n                    rotation={force.value > 0 ? force.angle : 180 + force.angle}\r\n                />\r\n                <Text\r\n                    x={force.angle === 0 ? (force.value > 0 ? consts.UI_cellSize / 3 : -consts.UI_cellSize) : consts.UI_cellSize / 3}\r\n                    y={force.angle === 90 ? (force.value > 0 ? consts.UI_cellSize / 3 : -consts.UI_cellSize / 2) : -consts.UI_cellSize / 1.5}\r\n                    text={force.value + \"H\"}\r\n                />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n    viewFixation(angle: 0 | 90) {\r\n\r\n        return (<Group\r\n            x={0}\r\n            y={0}\r\n            rotation={angle}\r\n        >\r\n            <Line\r\n                points={[\r\n                    0, 0,\r\n                    0, consts.UI_cellSize,\r\n                    -consts.UI_cellSize / 2, consts.UI_cellSize,\r\n                    consts.UI_cellSize / 2, consts.UI_cellSize,\r\n                ]}\r\n                stroke={UI.theme.palette.grey[300]}\r\n                strokeWidth={size / 4}\r\n                shadowBlur={2}\r\n            />\r\n            <Circle\r\n                radius={size / 2}\r\n                fill={UI.theme.palette.grey[500]}\r\n                x={0}\r\n                y={consts.UI_cellSize - (size / 1.7)}\r\n            />\r\n        </Group>)\r\n    }\r\n    render() {\r\n        const { onClick, mode, selected, node } = this.props\r\n\r\n        return (\r\n            <Group\r\n                x={node.x}\r\n                y={node.y}\r\n                _useStrictMode\r\n                onClick={(e: any) => onClick(e, node)}\r\n            >\r\n                {node.forceX && this.viewForce(node.forceX)}\r\n                {node.forceY && this.viewForce(node.forceY)}\r\n                {node.fixation === NodeFixation.X && this.viewFixation(90)}\r\n                {node.fixation === NodeFixation.Y && this.viewFixation(0)}\r\n                {node.fixation === NodeFixation.XY && this.viewFixation(90)}\r\n                {node.fixation === NodeFixation.YX && this.viewFixation(0)}\r\n                <Circle\r\n                    radius={size}\r\n                    x={0}\r\n                    y={0}\r\n                    fill={UI.getNodeColor(node)}\r\n                    shadowBlur={selected ? 8 : 2}\r\n                    stroke={UI.getNodeStorkeColor(node,mode)}\r\n                    strokeWidth={UI.getNodeStorkeWidth(node, mode)}\r\n\r\n                    hitStrokeWidth={size * 2}\r\n                />\r\n                <Text\r\n                    x={-size}\r\n                    y={-size / 2 - 1}\r\n                    align=\"center\"\r\n                    fontSize={18}\r\n                    fill=\"#fff\"\r\n                    shadowBlur={8}\r\n                    // stroke=\"#555\"\r\n                    // strokeWidth={0.1}\r\n                    fontFamily='Trebuchet MS'\r\n                    width={size * 2}\r\n                    verticalAlign=\"middle\"\r\n                    text={node.name}\r\n                />\r\n                <Circle\r\n                    radius={size}\r\n                    x={node.x - node.x}\r\n                    y={node.y - node.y}\r\n                    onDragEnd={(e: KonvaEventObject<DragEvent>) => {\r\n                        e.target.to({\r\n                            x: 0,\r\n                            y: 0,\r\n                        })\r\n                    }}\r\n                    hitStrokeWidth={size * 2}\r\n                    draggable={mode === UIModes.move && !node.isStatic}\r\n                    onMouseEnter={(e: any) => UI.nodeMouseEnter(e, node, mode)}\r\n                    onMouseLeave={(e: any) => UI.nodeMouseLeave(e)}\r\n                    onDragMove={(e: KonvaEventObject<DragEvent>) => this.props.drag(e, node)}\r\n                />\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default UINode","import * as React from 'react'\r\nimport { Line } from 'react-konva/lib/ReactKonvaCore'\r\nimport Konva from 'konva'\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { consts } from 'src/static';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\ninterface UIBeamProps {\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    mode: UIModes,\r\n    selected: boolean,\r\n    beam: Beam\r\n}\r\n\r\nclass UIBeam extends React.Component<UIBeamProps>{\r\n\r\n    shouldComponentUpdate(nextProps: UIBeamProps) {\r\n        const { beam, mode, selected } = this.props\r\n        return (\r\n            nextProps.beam !== beam ||\r\n            nextProps.mode !== mode ||\r\n            nextProps.selected !== selected\r\n        )\r\n    }\r\n    render() {\r\n        const { onClick, mode, selected, beam } = this.props\r\n        const size = consts.UI_beamSize\r\n        return (\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.endX,\r\n                    beam.endY\r\n                ]}\r\n                stroke={UI.getBeamColor(beam)}\r\n                strokeWidth={size}\r\n                shadowBlur={selected ? 8 : 2}\r\n\r\n                hitStrokeWidth={size * 4}\r\n                onClick={(e: any) => onClick(e, beam)}\r\n                onMouseEnter={(e: any) => UI.beamMouseEnter(e,beam, mode)}\r\n                onMouseLeave={(e: any) => UI.beamMouseLeave(e)}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\nexport default UIBeam","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst UIGrid: React.FC<UIGridProps> = ({ widthCell, heightCell, heightBox, widthBox }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    const viewRows = () => {\r\n        const rows = []\r\n        for (let index = 0; index < countOfY; index++) {\r\n            rows.push(<Line\r\n                points={[\r\n                    0,\r\n                    index * heightCell,\r\n                    widthBox,\r\n                    index * heightCell,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const viewColumns = () => {\r\n        const columns = []\r\n        for (let index = 0; index < countOfX; index++) {\r\n\r\n            columns.push(<Line\r\n                points={[\r\n                    index*widthCell,\r\n                    0,\r\n                    index*widthCell,\r\n                    heightBox,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n\r\n        }\r\n        return columns\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns()}\r\n            {viewRows()}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIGrid","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport {  Entity } from 'src/models/Farm/ModelEntity';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\nimport ScrollBar from 'react-custom-scrollbars';\r\nimport { UIBeam, UINode } from '..';\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { IFarm } from 'src/models/Farm/ModelFarm';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n        flexGrow: 1,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n    }\r\n})\r\n\r\n\r\nexport interface UIStageProps extends IFarm ,WithStyles<typeof styles> {\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    stageHeight: number,\r\n    stageWidth: number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity): void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent | TouchEvent>): void,\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity): void,\r\n    stage: React.RefObject<Stage & Konva.Stage>\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = ({ classes, stage, stageHeight, stageWidth, onClick, onMouseMove, onDrag,beams,nodes, uiMode, selectedEntity }) => {\r\n    return (\r\n        <ScrollBar \r\n            className={classes.root}\r\n            autoHide>\r\n            <Stage\r\n                height={stageHeight}\r\n                width={stageWidth}\r\n                style={{height:stageHeight, width:stageWidth}}\r\n                className={classes.stage}\r\n                onClick={onClick}\r\n                onMouseMove={onMouseMove}\r\n                ref={stage}\r\n            >\r\n\r\n                <Layer className=\"layer\" >\r\n                    <UIGrid\r\n                        heightCell={consts.UI_cellSize}\r\n                        widthCell={consts.UI_cellSize}\r\n                        heightBox={stageHeight}\r\n                        widthBox={stageWidth}\r\n                    />\r\n                    {beams.map(beam => (\r\n                        <UIBeam\r\n                            key={beam.id}\r\n                            beam={beam}\r\n                            mode={uiMode}\r\n                            onClick={onClick}\r\n                            selected={selectedEntity === beam}\r\n                        />\r\n                    ))}\r\n\r\n                    {nodes.map(node => (\r\n                        <UINode\r\n                            key={node.id}\r\n                            node={node}\r\n                            mode={uiMode}\r\n                            drag={onDrag}\r\n                            onClick={onClick}\r\n                            selected={selectedEntity === node}\r\n                        />\r\n                    ))}\r\n                </Layer>\r\n            </Stage>\r\n        </ScrollBar>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIStage)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip, Typography, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(10),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    title:{\r\n        padding:theme.spacing(1)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface SidebarProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    title? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface SidebarState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\n\r\nclass Sidebar extends React.PureComponent<SidebarProps, SidebarState>{\r\n    constructor(props: SidebarProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    switchDrawer() {\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, title, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <Typography \r\n                        variant='body2'\r\n                        align=\"center\"\r\n                        className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider/>\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={title}\r\n                    open={title !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 15 : drawerWidth + 15 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 15 : drawerWidth + 15 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import * as React from 'react'\r\nimport clsx from 'clsx'\r\nimport { Theme, createStyles, withStyles, AppBar, Toolbar } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { consts } from 'src/static';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBarProps } from '@material-ui/core/AppBar';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n        marginRight: theme.spacing(4),\r\n        marginLeft: theme.spacing(2),\r\n        '& img': {\r\n            width: 50,\r\n            height: 'auto'\r\n        }\r\n    }\r\n})\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles>, React.HTMLAttributes<HTMLDivElement> {\r\n    color?: AppBarProps['color'],\r\n    position?: AppBarProps['position'],\r\n    withLogo?: boolean\r\n}\r\n\r\nconst UIAppBar: React.FC<UIToolBarProps> = ({ classes, children, className, color, position, withLogo = true }) => {\r\n    const viewLogo = () => {\r\n        if (withLogo) return ((\r\n            <Link\r\n                to={'/'}\r\n                className={classes.logo}\r\n            >\r\n                <img\r\n                    alt=\"Logo Icon\"\r\n                    src={consts.bridgeIcon_2}\r\n                />\r\n            </Link>\r\n        ))\r\n    }\r\n    return (\r\n        <AppBar\r\n            position={position || 'fixed'}\r\n            className={clsx(classes.appBar, className)}\r\n            color={color || 'primary'}>\r\n            <Toolbar >\r\n                {viewLogo()}\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIAppBar)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Tooltip } from '@material-ui/core';\r\nimport {  ToggleButton } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButtonProps } from '@material-ui/lab/ToggleButton';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    btn: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        borderRadius: '50% !important',\r\n        border: `1px solid ${fade(theme.palette.action.active, 0.2)} !important`,\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.light,\r\n\r\n        '&$selected': {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            '@media (hover: none)': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            '&$disabled': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n        },\r\n    },\r\n    selected: {},\r\n})\r\n\r\n\r\n\r\nexport interface MyToggleButtonProps extends WithStyles<typeof styles> {\r\n    selected: boolean,\r\n    value?:any,\r\n    name?:string,\r\n    icon:JSX.Element\r\n}\r\n\r\nconst MyToggleButton: React.FC<MyToggleButtonProps & ToggleButtonProps> = ({  selected, classes , value, name, icon, ...other}) => {\r\n    return (\r\n        <ToggleButton\r\n            key={name}\r\n            value={value}\r\n            className={clsx(\r\n                classes.btn,\r\n                {\r\n                    [classes.selected]: selected,\r\n                }\r\n            )}\r\n            {...other}\r\n            \r\n        >\r\n            <Tooltip title={name}>\r\n                {icon}\r\n            </Tooltip>\r\n        </ToggleButton>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MyToggleButton)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Button } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { AppBar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n\r\n    },\r\n    btn:{\r\n        marginLeft:theme.spacing(2),\r\n        marginRight:theme.spacing(2)\r\n    },\r\n    grow:{\r\n        flexGrow:1\r\n    }\r\n})\r\n\r\nexport interface UIHeaderProps extends WithStyles<typeof styles> {\r\n    hundleSave?:(e: React.FormEvent<HTMLButtonElement>) => void,\r\n    hundleClear?:(e: React.FormEvent<HTMLButtonElement>) => void,\r\n    hundleCalculate?:(e: React.FormEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nconst UIHeader: React.FC<UIHeaderProps> = (\r\n    { \r\n        classes, \r\n        hundleSave = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n        hundleClear = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n        hundleCalculate = (e) => {alert(\"Буедет реализовано в будущем\")}\r\n    }) => {\r\n\r\n    return (\r\n        <AppBar \r\n            className={classes.root}\r\n        >\r\n            <div className={classes.grow}/>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleCalculate}\r\n            >\r\n                Расчет\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleSave}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleClear}\r\n            >\r\n                Очистить\r\n            </Button>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIHeader)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, List, ListItem, ListItemText, Collapse, ListItemIcon, Divider, Badge } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { GpsNotFixed as NodeIcon, Timeline as BeamIcon, List as TreePanelIcon, ExpandLess, ExpandMore, Brightness1 as CircleIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { FarmNode, instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { UI } from 'src/utils';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n        paddingLeft: theme.spacing(6)\r\n    },\r\n})\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes: FarmNode[],\r\n    beams: Beam[]\r\n    selectedEntity: Entity | undefined\r\n    onSelect(entity: Entity): void\r\n}\r\n\r\ninterface TreeState {\r\n    tabs: Map<string, boolean>,\r\n    open: boolean,\r\n\r\n}\r\n\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            tabs: new Map()\r\n        }\r\n        this.openTab = this.openTab.bind(this)\r\n        this.viewListItem = this.viewListItem.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        const { tabs } = this.state\r\n        tabs.set('Узлы', false)\r\n        tabs.set('Стержни', false)\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    openTab(tab: string): void {\r\n        const { tabs } = this.state\r\n        tabs.set(tab, !tabs.get(tab))\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    viewListItem(entityArray: Entity[], title: string, icon?: JSX.Element) {\r\n        const { selectedEntity, classes, onSelect } = this.props\r\n        const { tabs } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={() => this.openTab(title)}>\r\n                    {icon && (\r\n                        <ListItemIcon>\r\n                            <Badge badgeContent={entityArray.length} color=\"secondary\">\r\n                                {icon}\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                    )}\r\n                    <ListItemText primary={title} />\r\n                    {tabs.get(title) ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={tabs.get(title)} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {entityArray.map(item => (\r\n                            <ListItem\r\n                                button\r\n                                className={classes.nested}\r\n                                key={item.id}\r\n                                selected={selectedEntity === item}\r\n                                onClick={(e) => onSelect(item)}\r\n                            >\r\n                                {instanceOfNode(item) && (\r\n                                    <ListItemIcon>\r\n                                        <CircleIcon style={{color:UI.getNodeColor(item)}}/>\r\n                                    </ListItemIcon>\r\n                                )}\r\n                                <ListItemText primary={item.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render() {\r\n        const { nodes, beams } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"left\"\r\n                title=\"Структура проекта\"\r\n                btnIcon={(<TreePanelIcon />)}\r\n            >\r\n\r\n                {this.viewListItem(nodes, 'Узлы', (<NodeIcon />))}\r\n                {this.viewListItem(beams, 'Стержни', (<BeamIcon />))}\r\n\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Typography, IconButton, Box, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    subTitle: {\r\n        fontSize: 14,\r\n    },\r\n    title: {\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: Entity | undefined,\r\n    onDelete(entity: Entity): void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\n\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    getTypeStr(entity: Entity): string {\r\n        if (instanceOfNode(entity)) return \"Узел\"\r\n        else if (instanceOfBeam(entity)) return \"Стержень\"\r\n        else return \"Элемент\"\r\n    }\r\n    viewInfo(entity: Entity | undefined) {\r\n        const { classes, onDelete } = this.props\r\n        if (entity) return (\r\n            <Box className={classes.root}>\r\n                <Typography className={classes.subTitle} color=\"textSecondary\" gutterBottom>\r\n                    {this.getTypeStr(entity)}\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    {entity.name}\r\n                </Typography>\r\n                <IconButton aria-label=\"Delete\" onClick={() => onDelete(entity)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Box>\r\n        )\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"right\"\r\n                title=\"Информация о выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon />)}\r\n            >\r\n                {this.viewInfo(entity)}\r\n                <Divider />\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles,  Paper } from '@material-ui/core';\r\nimport { ToggleButtonGroup } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { ZoomOutMap as MoveIcon, MyLocation as AddNodeIcon, Delete as DeleteIcon, Power as ConnectIcon } from '@material-ui/icons';\r\n\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { MyToggleButton } from 'src/components';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        padding: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        left: \"50%\",\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: fade(theme.palette.primary.light, 0.4),\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        '&:hover':{\r\n            backgroundColor: theme.palette.primary.light,\r\n        }\r\n    },\r\n    modsBtnGroup: {\r\n        borderRadius: 0,\r\n        backgroundColor: 'transparent'\r\n    }\r\n})\r\n\r\n\r\nexport interface IMode {\r\n    name: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolPanelProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIToolPanel: React.FC<UIToolPanelProps> = ({ onSelect, selected, classes }) => {\r\n    const mods: IMode[] = [\r\n        {\r\n            name: \"Перемещение\",\r\n            mod: UIModes.move,\r\n            icon: (<MoveIcon />)\r\n        },\r\n        {\r\n            name: \"Добавить узел\",\r\n            mod: UIModes.addNode,\r\n            icon: (<AddNodeIcon />)\r\n        },\r\n        {\r\n            name: \"Соединить узлы\",\r\n            mod: UIModes.addBeam,\r\n            icon: (<ConnectIcon />)\r\n        },\r\n        {\r\n            name: \"Удалить\",\r\n            mod: UIModes.delete,\r\n            icon: (<DeleteIcon />)\r\n        }\r\n    ]\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <ToggleButtonGroup\r\n                value={selected}\r\n                exclusive\r\n                onChange={(e, value) => onSelect(value)}\r\n                size=\"medium\"\r\n                className={classes.modsBtnGroup}\r\n            >\r\n                {mods.map(item => (\r\n                    <MyToggleButton\r\n                        key={item.mod}\r\n                        value={item.mod}\r\n                        selected={item.mod === selected}\r\n                        icon={item.icon}\r\n                        name={item.name}\r\n                        \r\n                    />\r\n                ))}\r\n            </ToggleButtonGroup>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolPanel)","import * as React from 'react'\r\nimport KeyHandler from 'react-key-handler'\r\nimport Konva from \"konva\"\r\nimport { Stage } from \"react-konva\"\r\nimport { createStyles, Theme, WithStyles, withStyles, Box } from '@material-ui/core';\r\nimport { UITreePanel, UIEntityInfo, UIStage, UIHeader, UIToolPanel } from './components';\r\nimport { MyMath } from 'src/utils';\r\nimport Stats from 'react-stats'\r\nimport { instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { instanceOfNode, FarmNode } from 'src/models/Farm/ModelNode';\r\nimport { FarmContainerClass } from './index'\r\nimport { UIModes } from 'src/utils/UI';\r\nimport { IFarm } from 'src/models/Farm/ModelFarm';\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\nexport interface UIFarmProps extends IFarm, WithStyles<typeof styles> {\r\n    addNode: typeof FarmContainerClass.prototype.addNode,\r\n    addBeam: typeof FarmContainerClass.prototype.addBeam,\r\n    moveNode: typeof FarmContainerClass.prototype.moveNode,\r\n    moveBeam: typeof FarmContainerClass.prototype.moveBeam,\r\n    connectBeamToNode: typeof FarmContainerClass.prototype.connectBeamToNode,\r\n    deleteEntity: typeof FarmContainerClass.prototype.deleteEntity\r\n    defautlFarm: typeof FarmContainerClass.prototype.defautlFarm\r\n    saveFarm: typeof FarmContainerClass.prototype.saveFarm\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\nclass UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n        this.state = {\r\n            stageHeight: 2000,\r\n            stageWidth: 2000,\r\n            uiMode: UIModes.none,\r\n            selectedEntity: undefined,\r\n            paintEntity: undefined,\r\n        }\r\n        this.UIonClick = this.UIonClick.bind(this)\r\n        this.UIonDrag = this.UIonDrag.bind(this)\r\n        this.UIonMouseMove = this.UIonMouseMove.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this.selectEntity = this.selectEntity.bind(this)\r\n        this.clearFarm = this.clearFarm.bind(this)\r\n        this.deleteEntity = this.deleteEntity.bind(this)\r\n        this.saveFarm = this.saveFarm.bind(this)\r\n        this.stage = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container: HTMLDivElement = stage.attrs.container.parentElement\r\n            if (container) {\r\n                container.scrollTop = (container.scrollHeight - container.offsetHeight) / 2\r\n                container.scrollLeft = (container.scrollWidth - container.offsetWidth) / 2\r\n            }\r\n        }\r\n    }\r\n\r\n    UIonClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n        if (e.evt.button === 0) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace) {\r\n                        this.selectEntity(entity);\r\n                    } else this.setState({ selectedEntity: undefined })\r\n\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        this.props.addNode(cellX, cellY)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && instanceOfNode(entity)) {\r\n\r\n                        const beam = this.props.addBeam({\r\n                            x: entity.x,\r\n                            y: entity.y\r\n                        })\r\n                        if (instanceOfBeam(beam)) {\r\n                            const connectedBeam = this.props.connectBeamToNode(entity, beam, 'start')\r\n                            console.log(\"PAM\", connectedBeam);\r\n\r\n                            if (instanceOfBeam(connectedBeam))\r\n                                this.setState({\r\n                                    paintEntity: connectedBeam,\r\n                                    uiMode: UIModes.addBeamStart\r\n                                })\r\n                            else this.props.deleteEntity(beam.id)\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && instanceOfNode(entity) && instanceOfBeam(paintEntity)) {\r\n                        if (this.props.connectBeamToNode(entity, paintEntity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: undefined\r\n                            })\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this.deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        if (isEmptyPlace) this.setState({ selectedEntity: undefined })\r\n\r\n    }\r\n    UIonMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if (e.target.getStage()) {\r\n                    if (paintEntity && instanceOfBeam(paintEntity)) {\r\n                        this.props.moveBeam(paintEntity, layerX, layerY)\r\n                    } else this.setState({ uiMode: UIModes.addBeam })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.delete: {\r\n                const stage: Stage & Konva.Stage = e.target.getStage()\r\n                if (stage === e.target) {\r\n                    stage.container().style.cursor = 'default'\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    UIonDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n        const { uiMode } = this.state\r\n        switch (uiMode) {\r\n            case UIModes.move: {\r\n                if (instanceOfNode(entity)) {\r\n                    if (e.evt.defaultPrevented) {\r\n                        const { layerX, layerY } = e.evt\r\n                        this.props.moveNode(entity, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this.deletePaintEntity()\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    deletePaintEntity() {\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            paintEntity: undefined\r\n        })\r\n    }\r\n    deleteEntity(entity: Entity) {\r\n        if (this.state.selectedEntity && this.state.selectedEntity.id === entity.id)\r\n            this.setState({\r\n                selectedEntity: undefined\r\n            })\r\n        this.props.deleteEntity(entity.id)\r\n    }\r\n    selectEntity(entity: Entity | undefined) {\r\n        if (entity) this.setState({ selectedEntity: entity })\r\n    }\r\n    clearFarm(): void {\r\n        if (window.confirm('Вы уверены, что хотите очистить холст?'))\r\n            this.props.defautlFarm()\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n            paintEntity: undefined\r\n        })\r\n    }\r\n    saveFarm(e: React.FormEvent<HTMLButtonElement>) {\r\n        if (window.confirm('Вы уверены, что хотите сохранить холст в кэш?'))\r\n            this.props.saveFarm()\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, uiMode, selectedEntity } = this.state\r\n        const { classes, nodes, beams } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Stats.FPSStats isActive={true} />\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIHeader\r\n                    hundleClear={this.clearFarm}\r\n                    hundleSave={this.saveFarm} />\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n                    <UITreePanel\r\n                        nodes={nodes}\r\n                        beams={beams}\r\n                        selectedEntity={selectedEntity}\r\n                        onSelect={this.selectEntity}\r\n                    />\r\n\r\n                    <UIStage\r\n                        onClick={this.UIonClick}\r\n                        onDrag={this.UIonDrag}\r\n                        onMouseMove={this.UIonMouseMove}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        nodes={nodes}\r\n                        beams={beams}\r\n                        stage={this.stage}\r\n                        selectedEntity={selectedEntity}\r\n                        uiMode={uiMode}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={selectedEntity}\r\n                        onDelete={this.deleteEntity} />\r\n                </Box>\r\n\r\n                <UIToolPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)} />\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UIFarm)","import { FarmNode, NodeFixation, createNode } from \"./ModelNode\";\r\nimport { Beam } from \"./ModelBeam\";\r\nimport { createForce } from \"./ModelForce\";\r\nimport { Entity } from \"./ModelEntity\";\r\n\r\nexport interface IFarm {\r\n    nodes: FarmNode[],\r\n    beams: Beam[]\r\n}\r\ninterface ICoord {\r\n    x: number,\r\n    y: number\r\n}\r\ninterface IFixedNode extends ICoord {\r\n    fixation: NodeFixation\r\n}\r\ninterface IStaticNode extends ICoord {\r\n    angle: 0 | 90\r\n    value: number\r\n}\r\ninterface INode extends ICoord {\r\n\r\n}\r\nexport class Farm {\r\n    static moveEntity(entity: Entity, x: number, y: number) {\r\n        entity.x = x\r\n        entity.y = y\r\n    }\r\n    static moveBeamEnd(beam: Beam, x: number, y: number) {\r\n        beam.endX = x\r\n        beam.endY = y\r\n    }\r\n    static createNodes(_fixedNodes: IFixedNode[], _staticNodes: IStaticNode[], _nodes: INode[]): FarmNode[] {\r\n        const nodes: FarmNode[] = []\r\n        let index: number = 0;\r\n        return nodes.concat(\r\n            _fixedNodes.map(item => {\r\n                index++\r\n                return createNode({ ...item, isStatic: true, name: index + \"\" })\r\n            }),\r\n            _staticNodes.map(item => {\r\n                index++\r\n                const _node = createNode({ ...item, isStatic: true, name: index + \"\" })\r\n                if (item.angle === 0) _node.forceX = createForce({ nodeID: _node.id, value: item.value, angle: item.angle })\r\n                else _node.forceY = createForce({ nodeID: _node.id, value: item.value, angle: item.angle })\r\n                return _node\r\n            }),\r\n            _nodes.map(item => {\r\n                index++\r\n                return createNode({ ...item, name: index + \"\" })\r\n            })\r\n        )\r\n    }\r\n    static findOldBeam(node: FarmNode, beam: Beam, checkingBeam: Beam) {\r\n        return (\r\n            (checkingBeam.startConnectedNodeID === beam.startConnectedNodeID && checkingBeam.endConnectedNodeID === node.id) ||\r\n            (checkingBeam.startConnectedNodeID === node.id && checkingBeam.endConnectedNodeID === beam.startConnectedNodeID) ||\r\n            (checkingBeam.id === beam.id && checkingBeam.startConnectedNodeID === node.id)\r\n        )\r\n    }\r\n}","import * as React from 'react'\r\nimport UIFarm from './farm'\r\nimport { FarmNode, INode, createNode, instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { Beam, IBeam, createBeam, instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\nimport { Force, createForce, IForce } from 'src/models/Farm/ModelForce';\r\nimport { IFarm, Farm } from 'src/models/Farm/ModelFarm';\r\nimport uuid from 'uuid'\r\nimport testFarm from './_testFarm'\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\nexport class FarmContainerClass extends React.Component<Props, IFarm> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            nodes: [],\r\n            beams: [],\r\n        }\r\n        this.defautlFarm = this.defautlFarm.bind(this)\r\n        this.saveFarm = this.saveFarm.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        \r\n        const nodesJSON = localStorage.getItem(\"nodes\")\r\n        const beamsJSON = localStorage.getItem(\"beams\")\r\n        if (nodesJSON && beamsJSON) {\r\n            const nodes: FarmNode[] = JSON.parse(nodesJSON)\r\n            const beams: Beam[] =  JSON.parse(beamsJSON)\r\n            this.setState({nodes,beams})\r\n        }else this.defautlFarm()\r\n    }\r\n    addNode = (x: number, y: number, options?: INode) => {\r\n        if (this.state.nodes.length > 12) return false\r\n        const oldNode = this.state.nodes.find(item => item.x === x && item.y === y)\r\n        if (oldNode) return false\r\n        const id = uuid()\r\n        if (!id) return false\r\n        const name = (this.state.nodes.length + 1) + \"\"\r\n        const node = createNode({\r\n            ...options,\r\n            name: options ? options.name || name : name,\r\n            id,\r\n            x,\r\n            y\r\n        })\r\n        this.setState({\r\n            nodes: [...this.state.nodes, node]\r\n        })\r\n        return node\r\n    }\r\n    addBeam = (options?: IBeam) => {\r\n        if (this.state.beams.length > 36) return false\r\n\r\n        const id = uuid()\r\n        if (!id) return false\r\n        const beam = createBeam({\r\n            ...options,\r\n            id,\r\n        })\r\n        this.setState({\r\n            beams: [...this.state.beams, beam]\r\n        })\r\n        return beam\r\n    }\r\n    connectBeamToNode = (_node: FarmNode, _beam: Beam, place: 'start' | 'end') => {\r\n\r\n        const node: FarmNode = { ..._node }\r\n        const beam: Beam = { ..._beam }\r\n\r\n        switch (place) {\r\n            case 'start': {\r\n                beam.startConnectedNodeID = node.id\r\n                node.beamsID.push(beam.id)\r\n                Farm.moveEntity(beam, node.x, node.y)\r\n                this.setState(state => ({\r\n                    nodes: state.nodes.map(item => {\r\n                        if (item.id === node.id) return node\r\n                        return item\r\n                    }),\r\n                    beams: state.beams.map(item => {\r\n                        if (item.id === beam.id) return beam\r\n                        return item\r\n                    })\r\n                }))\r\n                return beam;\r\n            }\r\n            case 'end': {\r\n                const beamsOfNode = this.state.beams.filter(item => (node && node.beamsID.includes(item.id)))\r\n                const oldBeam = beamsOfNode.find(item => Farm.findOldBeam(node, beam, item))\r\n                if (!oldBeam) {\r\n\r\n                    node.beamsID.push(beam.id)\r\n                    beam.endConnectedNodeID = node.id\r\n                    Farm.moveBeamEnd(beam, node.x, node.y)\r\n                    this.setState(state => ({\r\n                        nodes: state.nodes.map(item => {\r\n                            if (item.id === node.id) return node\r\n                            return item\r\n                        }),\r\n                        beams: state.beams.map(item => {\r\n                            if (item.id === beam.id) return beam\r\n                            return item\r\n                        })\r\n                    }))\r\n                    return true\r\n                }\r\n                return false\r\n            }\r\n            default: return false\r\n        }\r\n    }\r\n    addForceToNode = (node: FarmNode, options?: IForce) => {\r\n        let force: Force = createForce({\r\n            ...options,\r\n            nodeID: node.id,\r\n        })\r\n\r\n        if (force.angle === 0) node.forceX = force\r\n        else node.forceY = force\r\n        this.setState(state => ({\r\n            nodes: state.nodes.map(item => {\r\n                if (node && item.id === node.id) return node\r\n                return item\r\n            }),\r\n        }))\r\n        return force\r\n\r\n    }\r\n    moveNode = (_node: FarmNode, x: number, y: number, ) => {\r\n\r\n        if (_node.isStatic) return false\r\n        const oldNode = this.state.nodes.find(item => item.x === x && item.y === y)\r\n        if (!oldNode) {\r\n            const node: FarmNode = { ..._node, x, y }\r\n            const beamsOfNode = this.state.beams.filter(item => (node && node.beamsID.includes(item.id)))\r\n            beamsOfNode.forEach(item => {\r\n                if (node) {\r\n                    const beam: Beam = { ...item }\r\n                    if (beam.startConnectedNodeID === node.id) Farm.moveEntity(beam, x, y)\r\n                    else if (item.endConnectedNodeID === node.id) Farm.moveBeamEnd(beam, x, y)\r\n                    this.setState(state => ({\r\n                        beams: state.beams.map(item => {\r\n                            if (item.id === beam.id) return beam\r\n                            return item\r\n                        })\r\n                    }))\r\n                }\r\n            })\r\n            this.setState(state => ({\r\n                nodes: state.nodes.map(item => {\r\n                    if (item.id === node.id) return node\r\n                    return item\r\n                }),\r\n            }))\r\n\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    moveBeam = (beam: Beam, x: number, y: number, place: 'start' | 'end' = 'end') => {\r\n\r\n        beam = { ...beam }\r\n        if (place === 'start') Farm.moveEntity(beam, x, y)\r\n        else Farm.moveBeamEnd(beam, x, y)\r\n        this.setState(state => ({\r\n            beams: state.beams.map(item => {\r\n                if (beam && item.id === beam.id) return beam\r\n                return item\r\n            })\r\n        }))\r\n        return true\r\n    }\r\n\r\n    deleteEntity = (id: string) => {\r\n        let entity: Beam | FarmNode | undefined =\r\n            this.state.beams.find(item => item.id === id) ||\r\n            this.state.nodes.find(item => item.id === id)\r\n        if (instanceOfNode(entity)) {\r\n            if (entity.isStatic) return false\r\n            const beamsOfNode = this.state.beams.filter(item => (instanceOfNode(entity) && entity.beamsID.includes(item.id)))\r\n            beamsOfNode.forEach(beam => {\r\n                if (instanceOfNode(entity)) {\r\n                    let _node: FarmNode | undefined\r\n                    if (beam.startConnectedNodeID === entity.id) _node = this.state.nodes.find(item => item.id === beam.endConnectedNodeID)\r\n                    else _node = this.state.nodes.find(item => item.id === beam.startConnectedNodeID)\r\n                    if (_node) {\r\n                        _node = {..._node}\r\n                        _node.beamsID = _node.beamsID.filter(id => id !== beam.id)\r\n                        this.setState(state => ({\r\n                            nodes: state.nodes.map(item => {\r\n                                if (_node && item.id === _node.id) return _node\r\n                                return item\r\n                            }),\r\n                        }))\r\n                    }\r\n                    this.setState(state => ({\r\n                        beams: state.beams.filter(i => i.id !== beam.id)\r\n                    }))\r\n                }\r\n            })\r\n            this.setState(state => ({\r\n                nodes: state.nodes.filter(i => (instanceOfNode(entity) && i.id !== entity.id)).map((node, index) => ({ ...node, name: (index + 1) + \"\" }))\r\n            }))\r\n            return true\r\n\r\n        } else if (instanceOfBeam(entity)) {\r\n            [entity.startConnectedNodeID, entity.endConnectedNodeID].forEach(nodeID => {\r\n                if (nodeID && nodeID.length > 0) {\r\n                    let _node = this.state.nodes.find(item => item.id === nodeID)\r\n                    if (_node && instanceOfBeam(entity)) {\r\n                        _node = {..._node}\r\n                        _node.beamsID = _node.beamsID.filter(id => {\r\n                            if (entity) return id !== entity.id\r\n                            return false\r\n                        })\r\n                        this.setState(state => ({\r\n                            nodes: state.nodes.map(item => {\r\n                                if (_node && item.id === _node.id) return _node\r\n                                return item\r\n                            }),\r\n                        }))\r\n                    }\r\n                }\r\n            })\r\n            this.setState(state => ({\r\n                beams: state.beams.filter(i => (instanceOfBeam(entity) && i.id !== entity.id))\r\n            }))\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n    defautlFarm() {\r\n        const { nodes, beams } = testFarm()\r\n        localStorage.removeItem('nodes')\r\n        localStorage.removeItem('beams')\r\n        this.setState({\r\n            nodes,\r\n            beams,\r\n        })\r\n    }\r\n    saveFarm(){\r\n        const { nodes, beams} = this.state\r\n        localStorage.setItem('nodes', JSON.stringify(nodes)) \r\n        localStorage.setItem('beams', JSON.stringify(beams))   \r\n    }\r\n    render() {\r\n        return (\r\n            <UIFarm\r\n                {...this.state}\r\n                {...this}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default FarmContainerClass","import { FarmNode, NodeFixation } from \"src/models/Farm/ModelNode\";\r\nimport { Beam } from \"src/models/Farm/ModelBeam\";\r\nimport { Farm } from \"src/models/Farm/ModelFarm\";\r\n\r\nexport default () => {\r\n    let nodes: FarmNode[] = []\r\n    let beams: Beam[] = []\r\n\r\n    nodes = Farm.createNodes(\r\n        [\r\n            {\r\n                x: 400,\r\n                y: 1000,\r\n                fixation: NodeFixation.XY,\r\n            },\r\n            {\r\n                x: 1300,\r\n                y: 1000,\r\n                fixation: NodeFixation.Y,\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                x: 700,\r\n                y: 1000,\r\n                angle: 90,\r\n                value: 9000\r\n            }\r\n        ],\r\n        [\r\n            // {\r\n            //     x: 1000,\r\n            //     y: 1000\r\n            // }, {\r\n            //     x: 700,\r\n            //     y: 700\r\n            // }, {\r\n            //     x: 1000,\r\n            //     y: 700\r\n            // }\r\n        ]\r\n    )\r\n\r\n    return { nodes, beams }\r\n}","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"20%\",\r\n\t\theight:'20%'\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({classes} : WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img \r\n\t\t\t\tsrc={consts.bridgeIcon_2} \r\n\t\t\t\talt=\"logo\" \r\n\t\t\t\tclassName={classes.logo} \r\n\t\t\t/>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.FARM_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { IHomeStore } from 'src/store/home/homeReducer';\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\twidth:'100%',\r\n\t\tminHeight:'100%',\r\n\t\tdisplay:'block',\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends IHomeStore, WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from 'src/store/home/homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport {CssBaseline} from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport {consts} from './static/';\nimport { theme } from './utils/UI';\n\ninterface IAppProps {}\n\nclass App extends React.Component<IAppProps> {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={consts.title}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":consts.bridgeIcon_2},\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":consts.airBridge},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/css?family=Roboto:300,400,500'},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/icon?family=Material+Icons'}\n\t\t\t\t\t]}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": consts.description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": consts.title},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": consts.url},\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<CssBaseline/>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t</Switch>\n\n\t\t\t\t</ThemeProvider>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","// import favicon from './images/favicon.ico'\r\nimport path from 'path'\r\nimport ogImage from './images/ogImage.png'\r\nimport bridgeIcon_1 from './images/icon.png'\r\nimport bridgeIcon_2 from './images/bridge.png'\r\nimport airBridge from './images/airBridge.png'\r\nimport FixationIcon from './images/fixation.svg'\r\n\r\n// Strings\r\nexport const url = process.env.PUBLIC_URL\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"\r\nexport const favicon = path.resolve(__dirname,\"favicon.ico\")\r\n\r\n// UI\r\nexport const UI_cellSize = 50\r\nexport const UI_nodeSize = 15\r\nexport const UI_beamSize = 6\r\n\r\n\r\n// Images\r\nexport {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge,\r\n    FixationIcon\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";","module.exports = __webpack_public_path__ + \"static/media/fixation.9b63597e.svg\";"],"sourceRoot":""}