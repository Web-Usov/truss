{"version":3,"sources":["utils/history.ts","pages/Farm/farmReducer.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Farm/farmTypes.ts","pages/Home/homeTypes.ts","models/Farm/ModelNode.ts","models/Farm/ModelEntity.ts","models/Farm/index.ts","components/UIFarm/UINode.tsx","pages/Farm/farm.tsx","pages/Farm/farmActions.ts","pages/Farm/index.ts","navigation/index.ts","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","pages/Home/logo.svg"],"names":["createBrowserHistory","defaultFarmState","counter","defaultHomeState","title","mainReducer","combineReducers","farm","state","arguments","length","undefined","type","Object","objectSpread","home","action","createStore","ClassNode","_ClassFarmEntity","props","nodeProps","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","beamsID","forcesID","inherits","createClass","key","value","beamID","find","id","push","filter","forceID","ClassFarmEntity","x","y","angle","name","newX","newY","Date","now","ClassFarm","fixedNodes","forces","nodes","beams","node","nodeID","Error","concat","beam","force","getNode","getBeam","startConnectedNodeID","endConnectedNodeID","UINode","_ref","dragNode","react","ReactKonva","text","_useStrictMode","radius","fill","stroke","strokeWidth","draggable","onDragMove","e","UIFarm","stageHeight","window","innerHeight","stageWidth","innerWidth","addNode","bind","assertThisInitialized","target","getStage","_e$evt","evt","layerX","layerY","setState","farmNode","_this2","_this$state","height","width","className","style","onClick","map","UIFarm_UINode","React","incCounter","connect","dispatch","bindActionCreators","farmActions","navPath","Home","setTitle","src","logo","alt","react_router_dom","to","_setTitle","homeActions","App","react_router","path","component","exact","ReactDOM","render","react_default","a","createElement","es","store","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.19d9e3b2.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { FarmActions, INC_COUNTER } from \"./farmTypes\";\r\n\r\nexport interface IFarmStore {\r\n    counter: number,\r\n}\r\n\r\nexport const defaultFarmState : IFarmStore = {\r\n    counter: 0\r\n}\r\n\r\nexport const farmReducer = (state: IFarmStore = defaultFarmState, action: FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        case INC_COUNTER:\r\n            return {\r\n                ...state,\r\n                counter: state.counter + 1\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeState {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeState = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeState = defaultHomeState, action: HomeActions): IHomeState => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport { IFarmStore, farmReducer } from 'src/pages/Farm/farmReducer';\r\nimport { IHomeState, homeReducer } from 'src/pages/Home/homeReducer';\r\n\r\nexport interface AppState {\r\n    farm: IFarmStore,\r\n    home: IHomeState\r\n}\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : farmReducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport default createStore(mainReducer);\r\n","import { Action } from \"redux\";\r\n\r\nexport const INC_COUNTER = 'INC_COUNTER'\r\n\r\n\r\nexport interface IActionFarmIncCounter extends Action {\r\n    type: typeof INC_COUNTER,\r\n}\r\n\r\nexport type FarmActions = IActionFarmIncCounter;","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import { IFarmEntity, ClassFarmEntity } from './ModelEntity';\r\n\r\nexport interface INode extends IFarmEntity {\r\n    beamsID: number[]\r\n    forcesID: number[],\r\n}\r\n\r\nexport interface IFixedNode extends INode {\r\n    // connectedBeam:IBeam[]\r\n    // angle: 0 | 90 | 180 | 260\r\n}\r\n\r\nexport class ClassNode extends ClassFarmEntity implements INode {\r\n    beamsID: number[];\r\n    forcesID: number[];\r\n    constructor(props: IFarmEntity, nodeProps?: INode) {\r\n        super(props)\r\n        this.beamsID = nodeProps ? nodeProps.beamsID : []\r\n        this.forcesID = nodeProps ? nodeProps.forcesID : []\r\n    }\r\n\r\n    addBeam(beamID: number) {\r\n        if (!this.beamsID.find(id => id === beamID))\r\n            this.beamsID.push(beamID)\r\n    }\r\n    deleteBeam(beamID: number) {\r\n        this.beamsID.filter(id => id !== beamID)\r\n    }\r\n    addForce(forceID: number) {\r\n        if (!this.forcesID.find(id => id === forceID))\r\n            this.forcesID.push(forceID)\r\n    }\r\n    deleteForce(forceID: number) {\r\n        this.forcesID.filter(id => id !== forceID)\r\n    }\r\n}","\r\nexport interface IFarmEntity {\r\n    id?: number\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n}\r\n\r\n\r\nexport class ClassFarmEntity implements IFarmEntity {\r\n    id: number\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    // x:number = 0,y:number = 0,angle:number = 0, name:string = \"\"\r\n    constructor(props: IFarmEntity) {\r\n        this.id = Date.now()\r\n        this.x = props.x || 0\r\n        this.y = props.y || 0\r\n        this.angle = props.angle || 0\r\n        this.name = props.name || this.id+\"\"\r\n        this.newX = this.x\r\n        this.newY = this.y\r\n    }\r\n}\r\n","import { INode, ClassNode, IFixedNode } from \"./ModelNode\";\r\nimport { IFarmEntity } from \"./ModelEntity\";\r\n\r\n\r\n\r\n\r\nexport interface IBeam extends IFarmEntity {\r\n    length: number\r\n    startConnectedNodeID: number\r\n    endConnectedNodeID: number\r\n}\r\n\r\nexport interface IForce extends IFarmEntity {\r\n    value: number,\r\n    angle: 0 | 90,\r\n    nodeID: number\r\n}\r\n\r\nexport interface IFarm {\r\n    fixedNodes: IFixedNode[]\r\n    forces: IForce[]\r\n    nodes: INode[]\r\n    beams: IBeam[]\r\n\r\n    addNode(x: number, y: number, angle: number, name?: string): void\r\n\r\n    getNode(nodeID: number): INode\r\n    getBeam(beamID: number): IBeam\r\n    getForce(forceID: number): IForce\r\n\r\n    getForcesOnNode(nodeID: number): IForce[]\r\n    getBeamsOnNode(nodeID: number): IBeam[]\r\n    getNodesOnBeam(beamID: number): INode[]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class ClassFarm implements IFarm {\r\n    fixedNodes: IFixedNode[];\r\n    forces: IForce[];\r\n    nodes: ClassNode[];\r\n    beams: IBeam[];\r\n    constructor() {\r\n        this.nodes = []\r\n        this.fixedNodes = []\r\n        this.forces = []\r\n        this.beams = []\r\n    }\r\n    addNode(x: number, y: number, angle: number, name: string = \"\") {\r\n        const node = new ClassNode({\r\n            x,\r\n            y,\r\n            angle,\r\n            name\r\n        })\r\n        this.nodes.push(node)\r\n    }\r\n    deleteNode(nodeID:number){\r\n        this.nodes.filter(node => node.id !== nodeID)\r\n    }\r\n\r\n    getNode(nodeID: number) {\r\n        const node = this.nodes.find(node => node.id === nodeID)\r\n        if (!node) throw Error(`Не найден узел с ID ${nodeID}`)\r\n        return node\r\n    }\r\n    getBeam(beamID: number) {\r\n        const beam = this.beams.find(beam => beam.id === beamID)\r\n        if (!beam) throw Error(`Не найден луч с ID ${beamID}`)\r\n        return beam\r\n    }\r\n    getForce(forceID: number) {\r\n        const force = this.forces.find(force => force.id === forceID)\r\n        if (!force) throw Error(`Не найдена сила с ID ${forceID}`)\r\n        return force\r\n    }\r\n\r\n\r\n    getForcesOnNode(nodeID: number): IForce[] {\r\n        const forces: IForce[] = this.forces.filter(force => force.nodeID === nodeID)\r\n        return forces\r\n    }\r\n    getBeamsOnNode(nodeID: number): IBeam[] {\r\n        const node = this.getNode(nodeID)\r\n\r\n        const beams: IBeam[] = this.beams.filter(beam => node.beamsID.find(beamID => beamID === beam.id) !== undefined)\r\n        return beams\r\n    };\r\n    getNodesOnBeam(beamID: number): INode[] {\r\n        const beam = this.getBeam(beamID)\r\n        const { startConnectedNodeID, endConnectedNodeID } = beam\r\n\r\n        const nodeStart = this.getNode(startConnectedNodeID)\r\n        const nodeEnd = this.getNode(endConnectedNodeID)\r\n\r\n        return [nodeStart, nodeEnd]\r\n    }\r\n}\r\n\r\nexport {\r\n    ClassNode\r\n}","import * as React from 'react'\r\nimport { Circle, Text } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { ClassNode } from 'src/models/Farm';\r\n\r\nexport interface IUINode {\r\n    dragNode(node: ClassNode, e: Konva.KonvaEventObject<DragEvent>): void\r\n    node: ClassNode\r\n}\r\n\r\nconst UINode: React.FC<IUINode> = ({ node, dragNode }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Text\r\n                x={node.x - node.name.length*4}\r\n                y={node.y-30}\r\n                text={node.name}\r\n                _useStrictMode \r\n            />\r\n               \r\n            <Circle\r\n\r\n                key={node.id}\r\n                radius={10}\r\n                x={node.x}\r\n                y={node.y}\r\n                fill=\"#ddd\"\r\n                stroke=\"#888\"\r\n                strokeWidth={3}\r\n                draggable\r\n                _useStrictMode \r\n                onDragMove={(e) => dragNode(node, e)} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UINode","import * as React from 'react'\r\nimport { IFarmStore } from './farmReducer';\r\nimport { Stage, Layer} from \"react-konva\"\r\nimport Konva from \"konva\"\r\nimport './style.css'\r\nimport { ClassFarm, ClassNode } from 'src/models/Farm';\r\nimport { UINode } from 'src/components/UIFarm';\r\n\r\nexport interface IFarmProps extends IFarmStore {\r\n    incCounter: () => void\r\n}\r\nexport interface IFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    farm: ClassFarm\r\n}\r\nexport default class UIFarm extends React.Component<IFarmProps, IFarmState>{\r\n    // private refStar: React.RefObject<Konva.Star>;\r\n    constructor(props: IFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: window.innerHeight * 0.75,\r\n            stageWidth: window.innerWidth * 0.75,\r\n            farm: new ClassFarm()\r\n        }\r\n        // this.refStar = React.createRef();\r\n        this.addNode = this.addNode.bind(this)\r\n        this.state.farm.addNode(100, 100, 0)\r\n    }\r\n    addNode(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        if (e.target.getStage() === e.target) {\r\n\r\n            const { layerX, layerY } = e.evt\r\n            this.state.farm.addNode(layerX, layerY, 0)\r\n            this.setState({ farm: this.state.farm })\r\n        }\r\n\r\n    }\r\n    dragNode(node: ClassNode, e: Konva.KonvaEventObject<DragEvent>) {\r\n        const farmNode = this.state.farm.getNode(node.id)\r\n        farmNode.x = e.evt.layerX\r\n        farmNode.y = e.evt.layerY\r\n        this.setState({farm:this.state.farm})\r\n\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth } = this.state\r\n        return (\r\n            <div>\r\n                <Stage\r\n                    height={stageHeight}\r\n                    width={stageWidth}\r\n                    className=\"stage\"\r\n                    style={{\r\n                        height: stageHeight + 'px',\r\n                        width: stageWidth + 'px',\r\n                    }}\r\n                    onClick={this.addNode}\r\n                >\r\n                    <Layer className=\"layer\">\r\n                        {this.state.farm.nodes.map(node => (\r\n                            <UINode\r\n                                key={node.id}\r\n                                node={node}\r\n                                dragNode={this.dragNode.bind(this)} />\r\n                            // <Circle\r\n                            //     key={node.id}\r\n                            //     radius={10}\r\n                            //     x={node.x}\r\n                            //     y={node.y}\r\n                            //     fill=\"red\"\r\n                            //     draggable\r\n                            //     onDragMove={this.dragNode}\r\n                            // />\r\n                        ))}\r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        )\r\n    }\r\n}","import { FarmActions, INC_COUNTER } from \"./farmTypes\";\r\n\r\n\r\nexport const incCounter = () : FarmActions => {\r\n    return {\r\n        type:INC_COUNTER,\r\n    }\r\n}\r\n","import {connect} from 'react-redux'\r\nimport UIFarm from './farm'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as farmActions from './farmActions';\r\n\r\nconst mapStateToProps =  ({farm}: AppState) => ({\r\n    \r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...farmActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UIFarm);","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport logo from './logo.svg'\r\nimport { IHomeState, defaultHomeState } from './homeReducer';\r\nimport { navPath } from '../../navigation';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface IHomeProps extends IHomeState {\r\n    setTitle: (title: string) => void,\r\n}\r\n\r\nexport default class Home extends React.Component<IHomeProps> {\r\n    _setTitle() {\r\n        const title = this.props.title === defaultHomeState.title ? \"To Farm\" : defaultHomeState.title\r\n        this.props.setTitle(title + '')\r\n    }\r\n    render() {\r\n        return <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>TypeScript - pain first, then nice</p>\r\n                <Link\r\n                    to={navPath.FARM_PAGE}\r\n                    className=\"App-link\">\r\n                    {this.props.title || \"To Farm )\"}\r\n                </Link>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={this._setTitle.bind(this)}\r\n                >Change title</button>\r\n            </header>\r\n        </div>\r\n    }\r\n}","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}