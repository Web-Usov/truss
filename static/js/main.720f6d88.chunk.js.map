{"version":3,"sources":["utils/UI.ts","utils/history.ts","theme.ts","static/colors.ts","utils/math.ts","pages/Farm/store/farmReducer.ts","pages/Farm/store/farmTypes.ts","models/Farm/ModelEntity.ts","models/Farm/ModelForce.ts","models/Farm/ModelBeam.ts","models/Farm/ModelNode.ts","pages/Home/homeReducer.ts","store/index.ts","pages/Home/homeTypes.ts","pages/Farm/components/UIFarmEntities/UINode.tsx","pages/Farm/components/UIFarmEntities/UIBeam.tsx","pages/Farm/components/UIFarmEntities/UIGrid.tsx","pages/Farm/components/UIFarmEntities/UIStage.tsx","components/sidebar.tsx","components/appBar.tsx","components/myToggleButton.tsx","pages/Farm/components/UIHeader.tsx","pages/Farm/components/UITreePanel.tsx","pages/Farm/components/UIEntityInfo.tsx","pages/Farm/components/UIToolPanel.tsx","pages/Farm/farm.tsx","pages/Farm/index.tsx","pages/Farm/_testFarm.ts","navigation/index.ts","pages/Home/components/homeHeader.tsx","pages/Home/home.tsx","pages/Home/homeActions.ts","pages/Home/index.ts","App.tsx","index.tsx","static/const.ts","static/ogImage.png","static/icon.png","static/bridge.png","static/airBridge.png","static/fixation.svg"],"names":["UIModes","createBrowserHistory","theme","createMuiTheme","palette","primary","dark","main","light","secondary","background","default","mainBackGround","node","staticNode","fixedNode","beam","MyMath","x1","y1","x2","y2","Math","atan2","PI","sqrt","pow","x","round","consts","UI_cellSize","y","getNodeColor","isStatic","isFixed","colors","getNodeStorkeColor","mode","move","addBeam","addBeamStart","getNodeStorkeWidth","getBeamColor","nodeMouseEnter","e","stage","target","getStage","delete","container","style","cursor","none","nodeMouseLeave","beamMouseEnter","beamMouseLeave","defaultState","nodes","beams","forces","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","force","map","item","id","filter","createEntity","props","name","angle","newX","newY","entity","uuid","createForce","nodeID","value","instanceOfForce","object","createBeam","startConnectedNodeID","endConnectedNodeID","endX","endY","instanceOfBeam","createNode","beamsID","forceX","forceY","instanceOfNode","defaultHomeState","title","mainReducer","combineReducers","farm","FarmReducer","home","createStore","applyMiddleware","thunk","size","UI_nodeSize","UINode","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewForce","bind","assertThisInitialized","nextProps","selected","react","ReactKonva","points","stroke","grey","strokeWidth","shadowBlur","pointerLength","pointerWidth","hitStrokeWidth","rotation","text","radius","fill","_this2","_this$props","onClick","_useStrictMode","_onClick","_x","apply","toString","viewFixation","UI","align","fontSize","fontFamily","width","verticalAlign","onDragEnd","to","draggable","onMouseEnter","onMouseLeave","onDragMove","drag","React","UIBeam","_this$props2","UI_beamSize","ReactKonvaCore","UIGrid","_ref","widthCell","heightCell","heightBox","widthBox","countOfX","countOfY","columns","index","push","key","viewColumns","rows","viewRows","withStyles","createStyles","root","flexGrow","backgroundColor","classes","stageHeight","stageWidth","onMouseMove","onDrag","uiMode","selectedEntity","lib_default","a","className","autoHide","height","ref","UIFarmEntities_UIGrid","UIFarmEntities_UIBeam","UIFarmEntities_UINode","Sidebar","open","viewTooltip","switchDrawer","setState","flag","children","btnIcon","anchor","_this$state","Drawer","drawer","variant","paper","drawerPaper","toolbar","Typography","Divider","Tooltip","onOpen","changeViewtooltip","onClose","Fab","left","drawerWidth","right","color","toogleIcon","Close","position","top","spacing","zIndex","padding","mixins","appBar","logo","marginRight","marginLeft","& img","_ref$withLogo","withLogo","AppBar","clsx","Toolbar","react_router_dom","alt","src","bridgeIcon_2","viewLogo","btn","borderRadius","border","fade","active","transition","transitions","create","duration","short","contrastText","&$selected","&:hover","@media (hover: none)","&$disabled","icon","other","objectWithoutProperties","ToggleButton","assign","defineProperty","grow","_ref$hundleSave","hundleSave","alert","_ref$hundleClear","hundleClear","Button","UITreePanel","tabs","Map","openTab","viewListItem","set","tab","get","entityArray","onSelect","ListItem","button","ListItemIcon","Badge","badgeContent","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","nested","Brightness1","sidebar","esm_List","GpsNotFixed","Timeline","paddingLeft","UIEntityInfo","onDelete","Box","subTitle","gutterBottom","getTypeStr","IconButton","aria-label","Delete","Info","viewInfo","marginBottom","bottom","transform","modsBtnGroup","mods","mod","ZoomOutMap","addNode","MyLocation","Power","Paper","ToggleButtonGroup","exclusive","onChange","myToggleButton","UIFarm","paintEntity","onKeyHandle","_setStageSize","selectEntity","clearFarm","deleteEntity","window","addEventListener","current","attrs","parentElement","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","removeEventListener","isEmptyPlace","evt","preventDefault","_e$evt","layerX","layerY","cellX","cellY","connectedBeam","connectBeamToNode","console","log","_this$state2","_e$evt2","moveBeam","defaultPrevented","_e$evt3","moveNode","deletePaintEntity","innerHeight","innerWidth","confirm","defautlFarm","_this$state3","react_stats_default","FPSStats","isActive","esm","keyEventName","keyValue","components_UIHeader","stageBox","components_UITreePanel","UIFarmEntities_UIStage","components_UIEntityInfo","components_UIToolPanel","setSelectedMode","overflow","display","flexDirection","FarmContainerClass","_React$Component","options","find","addForce","_node","_beam","place","_console","includes","addForceToNode","forEach","i","inherits","createClass","_testFarm","n","f","b","testFarm","navPath","alignItems","justifyContent","descripton","description","Link","Home","homeHeader","minHeight","setTitle","connect","dispatch","bindActionCreators","homeActions","App","Helmet_default","htmlAttributes","leng","titleTemplate","defaultTitle","link","rel","href","meta","charSet","content","property","CssBaseline","ThemeProvider","react_router","path","exact","ReactDOM","render","react_default","createElement","es","store","src_App","document","getElementById","__webpack_require__","r","__webpack_exports__","__dirname","d","url","favicon","path__WEBPACK_IMPORTED_MODULE_0__","path__WEBPACK_IMPORTED_MODULE_0___default","_ogImage_png__WEBPACK_IMPORTED_MODULE_1__","_ogImage_png__WEBPACK_IMPORTED_MODULE_1___default","_icon_png__WEBPACK_IMPORTED_MODULE_2__","_icon_png__WEBPACK_IMPORTED_MODULE_2___default","_bridge_png__WEBPACK_IMPORTED_MODULE_3__","_bridge_png__WEBPACK_IMPORTED_MODULE_3___default","_airBridge_png__WEBPACK_IMPORTED_MODULE_4__","_airBridge_png__WEBPACK_IMPORTED_MODULE_4___default","_fixation_svg__WEBPACK_IMPORTED_MODULE_5__","_fixation_svg__WEBPACK_IMPORTED_MODULE_5___default","process","resolve","module","exports","p"],"mappings":"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","file":"static/js/main.720f6d88.chunk.js","sourcesContent":["import { FarmNode } from \"src/models/Farm/ModelNode\";\r\nimport { colors } from \"src/static\";\r\nimport theme from \"src/theme\";\r\nimport { Beam } from \"src/models/Farm/ModelBeam\";\r\nimport Konva from \"konva\";\r\nimport { Stage } from \"konva/types/Stage\";\r\n\r\nexport enum UIModes {\r\n    none,\r\n    move,\r\n    addNode,\r\n    addBeam,\r\n    addBeamStart,\r\n    delete\r\n}\r\n\r\nexport const getNodeColor = (node: FarmNode):string => {\r\n    \r\n    if (node.isStatic) {\r\n        if (node.isFixed) return colors.fixedNode\r\n        return colors.staticNode\r\n    }\r\n    return colors.node\r\n}\r\nexport const getNodeStorkeColor = (node: FarmNode, mode : UIModes):string => {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return theme.palette.secondary.dark\r\n            return theme.palette.primary.light\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return theme.palette.primary.light\r\n        }\r\n        default:\r\n            return theme.palette.secondary.main\r\n    }\r\n}\r\nexport const getNodeStorkeWidth = (node: FarmNode, mode : UIModes): number =>  {\r\n    switch (mode) {\r\n        case UIModes.move: {\r\n            if (node.isStatic) return 0\r\n            return 2\r\n        }\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            return 2\r\n        }\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\nexport const getBeamColor = (beam : Beam) : string => {\r\n    return colors.beam\r\n}\r\n\r\n\r\nexport const nodeMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, node:FarmNode, mode: UIModes):void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break;\r\n        }\r\n\r\n        case UIModes.addBeam:\r\n        case UIModes.addBeamStart: {\r\n            stage.container().style.cursor = 'crosshair'\r\n            break\r\n        }\r\n        case UIModes.move: {\r\n            if (node.isStatic) {\r\n                stage.container().style.cursor = 'default'\r\n                break\r\n            }\r\n            stage.container().style.cursor = 'move'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n}\r\nexport const nodeMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>):void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}\r\n\r\nexport const beamMouseEnter = (e: Konva.KonvaEventObject<MouseEvent>, beam:Beam, mode: UIModes) :void =>  {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n\r\n    switch (mode) {\r\n        case UIModes.delete:\r\n        case UIModes.none: {\r\n            stage.container().style.cursor = 'pointer'\r\n            break\r\n        }\r\n\r\n        default: {\r\n            break\r\n        }\r\n    }\r\n\r\n}\r\nexport const beamMouseLeave = (e: Konva.KonvaEventObject<MouseEvent>) :void => {\r\n    const stage: typeof Stage & Konva.Stage = e.target.getStage()\r\n    if (stage) stage.container().style.cursor = 'default'\r\n}","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","\r\nimport {  createMuiTheme } from '@material-ui/core';\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            dark:\"#0A4467\",\r\n            main: \"#1e779e\",\r\n            light:'#51A8D6'\r\n        },\r\n        secondary: {\r\n            dark: \"#a83e19\",\r\n            main: \"#f15a24\",\r\n            light: \"#F39B7C\"\r\n        },\r\n        background:{\r\n            default:'linear-gradient(35deg, #6863bf 0%, #067d93 50%, #e68a68 100%)'\r\n        }  \r\n        \r\n    },\r\n});\r\n\r\nexport default theme","import theme from \"src/theme\";\r\n\r\nexport const mainBackGround = \"#09B4D3\"\r\n\r\nexport const node = theme.palette.secondary.main\r\nexport const staticNode = theme.palette.secondary.light\r\nexport const fixedNode = theme.palette.secondary.dark\r\n\r\nexport const beam = theme.palette.secondary.light","import { consts } from \"src/static\";\r\n\r\nclass MyMath {\r\n    static angleBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.atan2(-y1 + y2, -x1 + x2) / (Math.PI)\r\n    }\r\n    \r\n    static lengthBePoints(x1:number, y1:number, x2:number, y2:number) :number {\r\n        return Math.sqrt(Math.pow(x1- x2, 2) + Math.pow(y1 - y2, 2))\r\n    }\r\n\r\n    static cellX(x:number):number{        \r\n        return  Math.round(x / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n    static cellY(y:number):number{        \r\n        return  Math.round(y / consts.UI_cellSize) * consts.UI_cellSize\r\n    }\r\n}\r\n\r\n\r\nexport default MyMath","\r\nimport * as FarmTypes from './farmTypes'\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\n\r\nexport interface IFarmStore {\r\n    nodes:FarmNode[],\r\n    beams:Beam[],\r\n    forces:Force[]\r\n}\r\n\r\nexport const defaultState: IFarmStore = {\r\n    nodes:[],\r\n    beams:[],\r\n    forces:[]\r\n}\r\n\r\nexport const reducer = (state: IFarmStore = defaultState, action: FarmTypes.FarmActions): IFarmStore => {\r\n    switch (action.type) {\r\n        // Add\r\n        case FarmTypes.ADD_NODE : {\r\n            const {node} = action\r\n            return {\r\n                ...state,\r\n                nodes : [\r\n                    ...state.nodes,\r\n                    node\r\n                ]\r\n            }\r\n            \r\n        }\r\n        case FarmTypes.ADD_BEAM : {\r\n            const {beam} = action\r\n            return {\r\n                ...state,\r\n                beams : [\r\n                    ...state.beams,\r\n                    beam\r\n                ]\r\n            }            \r\n        }\r\n        case FarmTypes.ADD_FORCE : {\r\n            const {force} = action\r\n            return {\r\n                ...state,\r\n                forces : [\r\n                    ...state.forces,\r\n                    force\r\n                ]\r\n            }            \r\n        }\r\n        // Edit\r\n        case FarmTypes.EDIT_NODE : {\r\n            return {\r\n                ...state,\r\n                nodes : state.nodes.map(item => {\r\n                    if(item.id === action.node.id){      \r\n                        // const node : Node = {\r\n                        //     ...item,\r\n                        //     ...action.node\r\n                        // }\r\n                        return {\r\n                                ...item,\r\n                                ...action.node\r\n                            }\r\n                    }\r\n                    return item\r\n                })\r\n            }            \r\n        }\r\n        case FarmTypes.EDIT_BEAM : {\r\n            return {\r\n                ...state,\r\n                beams : state.beams.map(item => {\r\n                    if(item.id === action.beam.id){ \r\n                        return {\r\n                            ...item,\r\n                            ...action.beam\r\n                        }   \r\n                    }\r\n                    return item\r\n                })\r\n            }            \r\n        }\r\n        // Delete\r\n        case FarmTypes.DELETE_ENTITY : {\r\n            return {\r\n                beams : state.beams.filter(item => item.id !== action.id),\r\n                nodes : state.nodes.filter(item => item.id !== action.id),\r\n                forces : state.forces.filter(item => item.id !== action.id),\r\n            }            \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { Action } from \"redux\";\r\nimport {  Beam } from \"src/models/Farm/ModelBeam\";\r\nimport {  FarmNode } from \"src/models/Farm/ModelNode\";\r\nimport { Force } from \"src/models/Farm/ModelForce\";\r\n\r\nexport const DELETE_EN = \"DELETE_EN\"\r\nexport const ADD_NODE = \"ADD_NODE\"\r\nexport const ADD_BEAM = \"ADD_BEAM\"\r\nexport const ADD_FORCE = \"ADD_FORCE\"\r\nexport const DELETE_ENTITY = \"DELETE_ENTITY\"\r\nexport const EDIT_NODE = \"EDIT_NODE\"\r\nexport const EDIT_BEAM = \"EDIT_BEAM\"\r\n\r\n// Add\r\nexport interface ActionAddNode extends Action {    \r\n    type: typeof ADD_NODE,\r\n    node:FarmNode\r\n}\r\nexport interface ActionAddBeam extends Action {    \r\n    type: typeof ADD_BEAM,\r\n    beam:Beam\r\n}\r\nexport interface ActionAddForce extends Action {    \r\n    type: typeof ADD_FORCE,\r\n    force:Force\r\n}\r\n// Delete\r\nexport interface ActionDeleteEntity extends Action {    \r\n    type: typeof DELETE_ENTITY,\r\n    id:string\r\n}\r\n// Edit\r\nexport interface ActionEditNode extends Action {    \r\n    type: typeof EDIT_NODE,\r\n    node:FarmNode\r\n}\r\nexport interface ActionEditBeam extends Action {    \r\n    type: typeof EDIT_BEAM,\r\n    beam:Beam\r\n}\r\n\r\nexport type FarmActions = (\r\n    ActionAddNode | \r\n    ActionAddBeam |\r\n    ActionAddForce |\r\n    ActionDeleteEntity |\r\n    ActionEditNode | \r\n    ActionEditBeam\r\n);","import uuid from 'uuid'\r\n\r\nexport interface IEntity {\r\n    id?: string\r\n    x?: number\r\n    y?: number\r\n    angle?: number\r\n    name?: string\r\n    newX?: number\r\n    newY?: number\r\n    type?:'entity' | 'node' | 'beam' | 'force'\r\n}\r\n\r\n// export class Entity implements IEntity {\r\n//     id: string\r\n//     x: number;\r\n//     y: number;\r\n//     angle: number;\r\n//     name: string;\r\n//     newX: number;\r\n//     newY: number;\r\n//     constructor(props: IEntity) {\r\n//         this.id =  props.id || uuid()\r\n//         this.x = props.x || 0\r\n//         this.y = props.y || 0\r\n//         this.angle = props.angle || 0\r\n//         this.name = props.name || this.id + \"\"\r\n//         this.newX = this.x\r\n//         this.newY = this.y\r\n//     }\r\n// }\r\n\r\nexport interface Entity {    \r\n    id: string\r\n    x: number;\r\n    y: number;\r\n    angle: number;\r\n    name: string;\r\n    newX: number;\r\n    newY: number;\r\n    type:'entity' | 'node' | 'beam' | 'force'\r\n}\r\n\r\nexport const createEntity = (props:IEntity = {}) :Entity => {\r\n    const { x, y, name, angle, id, newX, newY, type } = props\r\n    const entity : Entity =  {\r\n        id: id || uuid(),\r\n        x: x || 0,\r\n        y: y || 0,\r\n        angle: angle || 0,\r\n        name: name || \"\",\r\n        newX: newX || x || 0,\r\n        newY: newY || y || 0,\r\n        type:type || 'entity'\r\n    }\r\n    entity.name = name || entity.id\r\n    return entity\r\n\r\n}\r\nexport const instanceOfEntity = (object: any): object is Entity => object && object.type === 'entity';","import { IEntity, Entity, createEntity } from \"./ModelEntity\";\r\n\r\nexport interface IForce extends IEntity {\r\n    value?: number,\r\n    angle?: 0 | 90,\r\n    nodeID?: string\r\n}\r\n\r\nexport interface Force extends Entity {\r\n    value: number\r\n    angle: 0 | 90\r\n    nodeID: string\r\n}\r\nexport const createForce = (props: IForce = {}): Force => {\r\n    const {  angle, nodeID, value } = props\r\n    const entity = createEntity(props)\r\n    const force : Force =  {\r\n        ...entity,\r\n        type:\"force\",\r\n        angle: angle || 0,\r\n        nodeID: nodeID || \"\",\r\n        value: value || 0\r\n    }\r\n    return force\r\n}\r\nexport const instanceOfForce = (object: any): object is Force => object && object.type === 'force';","import { IEntity, Entity, createEntity } from \"./ModelEntity\";\r\n\r\nexport interface IBeam extends IEntity {\r\n    length?: number\r\n    startConnectedNodeID?: string\r\n    endConnectedNodeID?: string\r\n    endX?: number,\r\n    endY?: number\r\n}\r\n\r\n// export class Beam extends Entity {\r\n//     length: number\r\n//     startConnectedNodeID: string | undefined\r\n//     endConnectedNodeID: string | undefined\r\n//     newAngle:number\r\n//     endX:number\r\n//     endY:number\r\n//     constructor(props: IBeam) {\r\n//         super(props)\r\n//         this.length = props.length || 0\r\n//         this.startConnectedNodeID = props.startConnectedNodeID || undefined\r\n//         this.endConnectedNodeID = props.endConnectedNodeID || undefined\r\n//         this.newAngle = this.angle\r\n//         this.endX = props.endX || this.x\r\n//         this.endY = props.endY || this.y\r\n//     }\r\n\r\n// connectNode(nodeID: string, place: 'start' | 'end'): void {\r\n//     switch (place) {\r\n//         case 'start':{\r\n//             this.startConnectedNodeID = nodeID\r\n//             break;\r\n//         }\r\n//         case 'end':{\r\n//             this.endConnectedNodeID = nodeID\r\n//             break;\r\n//         }\r\n//         default:\r\n//             break;\r\n//     }\r\n// }\r\n// removeNode(place: 'start' | 'end'): void {\r\n//     place === 'start' ?\r\n//     this.startConnectedNodeID = \"\" :\r\n//     this.endConnectedNodeID = \"\"\r\n// }\r\n// moveStartPoint(x:number,y:number):void{\r\n\r\n//     this.x = x\r\n//     this.y = y\r\n// }\r\n\r\n// moveEndPoint(x:number,y:number):void{\r\n//     this.endX = x\r\n//     this.endY = y\r\n// }\r\n// }\r\n\r\nexport interface Beam extends Entity {\r\n    length: number\r\n    startConnectedNodeID: string | undefined\r\n    endConnectedNodeID: string | undefined\r\n    endX: number\r\n    endY: number\r\n}\r\nexport const createBeam = (props: IBeam = {}): Beam => {\r\n    const { length, startConnectedNodeID, endConnectedNodeID, endX, endY } = props\r\n    const entity = createEntity(props)\r\n    const bram: Beam = {\r\n        ...entity,\r\n        type: \"beam\",\r\n        length: length || 0,\r\n        startConnectedNodeID: startConnectedNodeID,\r\n        endConnectedNodeID: endConnectedNodeID,\r\n        endX: endX || entity.x || 0,\r\n        endY: endY || entity.y || 0,\r\n    }\r\n    return bram\r\n}\r\n\r\n\r\nexport const instanceOfBeam = (object: any): object is Beam => object && object.type === 'beam';\r\n","import { IEntity, Entity, createEntity } from './ModelEntity';\r\nimport { Force } from './ModelForce';\r\n\r\nexport interface INode extends IEntity {\r\n    beamsID?: string[]\r\n    forceX?: Force,\r\n    forceY?: Force,\r\n    isStatic?: boolean\r\n    isFixed?: false | 'x' | 'y' | 'xy'\r\n}\r\n\r\nexport interface FarmNode extends Entity {\r\n    beamsID: string[];\r\n    forceX: Force | undefined\r\n    forceY: Force | undefined\r\n    isStatic: boolean\r\n    isFixed: false | 'x' | 'y' | 'xy'\r\n}\r\n\r\nexport const createNode = (props: INode = {}): FarmNode => {\r\n    const { beamsID, forceX, forceY, isStatic, isFixed } = props\r\n    const entity = createEntity(props)\r\n    const node: FarmNode = {\r\n        ...entity,\r\n        type: \"node\",\r\n        beamsID: beamsID || [],\r\n        forceX: forceX,\r\n        forceY: forceY,\r\n        isStatic: isStatic || false,\r\n        isFixed: isFixed || false\r\n    }\r\n    return node\r\n}\r\nexport const instanceOfNode = (object: any): object is FarmNode => object && object.type === 'node'","import { SET_TITLE, HomeActions } from \"./homeTypes\";\r\n\r\nexport interface IHomeStore {\r\n    title: string,\r\n}\r\n\r\nexport const defaultHomeState : IHomeStore = {\r\n    title: 'Hello, world!',\r\n}\r\n\r\nexport const homeReducer = (state: IHomeStore = defaultHomeState, action: HomeActions): IHomeStore => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { FarmReducer, FarmTypes } from 'src/pages/Farm/store';\r\nimport { homeReducer } from 'src/pages/Home/homeReducer';\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\r\n\r\n\r\n\r\nexport const mainReducer = combineReducers({\r\n    farm : FarmReducer.reducer,\r\n    home : homeReducer  \r\n})\r\n\r\nexport type AppState = ReturnType<typeof mainReducer> \r\nexport type AppActions = FarmTypes.FarmActions \r\n\r\nexport default createStore(mainReducer, applyMiddleware(thunk as ThunkMiddleware<AppState,AppActions>));\r\n","import { Action } from \"redux\";\r\n\r\nexport const SET_TITLE = 'SET_TITLE'\r\n\r\nexport interface IActionHomeSetTitle extends Action {\r\n    type: typeof SET_TITLE,\r\n    title : string,\r\n}\r\n\r\nexport type HomeActions = IActionHomeSetTitle ;","import * as React from 'react'\r\nimport { Circle,  Text, Group, Arrow, Line } from 'react-konva'\r\nimport Konva from 'konva'\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\nimport theme from 'src/theme';\r\nimport { consts } from 'src/static';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { KonvaEventObject } from 'konva/types/Node';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst size = consts.UI_nodeSize\r\ninterface UINodeProps {\r\n    node: FarmNode,\r\n    drag(e: Konva.KonvaEventObject<DragEvent>, node: FarmNode): void\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, node: FarmNode): void\r\n    mode: UIModes,\r\n    selected: boolean\r\n}\r\nclass UINode extends React.Component<UINodeProps>{\r\n    constructor(props: UINodeProps) {\r\n        super(props)\r\n        this.viewForce = this.viewForce.bind(this)\r\n    }\r\n    shouldComponentUpdate(nextProps: UINodeProps) {\r\n        return (\r\n            nextProps.node !== this.props.node ||\r\n            nextProps.mode !== this.props.mode ||\r\n            nextProps.selected !== this.props.selected\r\n        )\r\n    }\r\n\r\n    viewForce(force: Force) {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Arrow\r\n                    points={[\r\n                        0,\r\n                        0,\r\n                        consts.UI_cellSize,\r\n                        0,\r\n                    ]}\r\n                    stroke={theme.palette.grey[300]}\r\n                    strokeWidth={size / 3}\r\n                    shadowBlur={2}\r\n                    pointerLength={consts.UI_cellSize / 10}\r\n                    pointerWidth={consts.UI_cellSize / 10}\r\n                    hitStrokeWidth={size * 2}\r\n                    rotation={force.value > 0 ? force.angle : 180 + force.angle}\r\n                />\r\n                <Text\r\n                    x={force.angle === 0 ? (force.value > 0 ? consts.UI_cellSize / 3 : -consts.UI_cellSize) : consts.UI_cellSize / 3}\r\n                    y={force.angle === 90 ? (force.value > 0 ? consts.UI_cellSize / 3 : -consts.UI_cellSize / 2) : -consts.UI_cellSize / 1.5}\r\n                    text={force.value + \"H\"}\r\n                />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n    viewFixation(angle: 0 | 90) {\r\n\r\n        return (<Group\r\n            x={0}\r\n            y={0}\r\n            rotation={angle}\r\n        >\r\n            <Line\r\n                points={[\r\n                    0, 0,\r\n                    0, consts.UI_cellSize,\r\n                    -consts.UI_cellSize / 2, consts.UI_cellSize,\r\n                    consts.UI_cellSize / 2, consts.UI_cellSize,\r\n                ]}\r\n                stroke={theme.palette.grey[300]}\r\n                strokeWidth={size / 4}\r\n                shadowBlur={2}\r\n            />\r\n            <Circle\r\n                radius={size / 2}\r\n                fill={theme.palette.grey[500]}\r\n                x={0}\r\n                y={consts.UI_cellSize - (size / 1.7)}\r\n            />\r\n        </Group>)\r\n    }\r\n    render() {\r\n        const { onClick, mode, selected, node } = this.props\r\n\r\n        return (\r\n            <Group\r\n                x={node.x}\r\n                y={node.y}\r\n                _useStrictMode\r\n                onClick={(e: any) => onClick(e, node)}\r\n            >\r\n                {node.forceX && this.viewForce(node.forceX)}\r\n                {node.forceY && this.viewForce(node.forceY)}\r\n                {node.isFixed === 'x' && this.viewFixation(90)}\r\n                {node.isFixed === 'y' && this.viewFixation(0)}\r\n                {node.isFixed === 'xy' && this.viewFixation(90)}\r\n                {node.isFixed === 'xy' && this.viewFixation(0)}\r\n                <Circle\r\n                    radius={size}\r\n                    x={0}\r\n                    y={0}\r\n                    fill={UI.getNodeColor(node)}\r\n                    shadowBlur={selected ? 8 : 2}\r\n                    stroke={UI.getNodeStorkeColor(node,mode)}\r\n                    strokeWidth={UI.getNodeStorkeWidth(node, mode)}\r\n\r\n                    hitStrokeWidth={size * 2}\r\n                />\r\n                <Text\r\n                    x={-size}\r\n                    y={-size / 2 - 1}\r\n                    align=\"center\"\r\n                    fontSize={18}\r\n                    fill=\"#fff\"\r\n                    shadowBlur={8}\r\n                    // stroke=\"#555\"\r\n                    // strokeWidth={0.1}\r\n                    fontFamily='Trebuchet MS'\r\n                    width={size * 2}\r\n                    verticalAlign=\"middle\"\r\n                    text={node.name}\r\n                />\r\n                <Circle\r\n                    radius={size}\r\n                    x={node.x - node.x}\r\n                    y={node.y - node.y}\r\n                    onDragEnd={(e: KonvaEventObject<DragEvent>) => {\r\n                        e.target.to({\r\n                            x: 0,\r\n                            y: 0,\r\n                        })\r\n                    }}\r\n                    hitStrokeWidth={size * 2}\r\n                    draggable={mode === UIModes.move && !node.isStatic}\r\n                    onMouseEnter={(e: any) => UI.nodeMouseEnter(e, node, mode)}\r\n                    onMouseLeave={(e: any) => UI.nodeMouseLeave(e)}\r\n                    onDragMove={(e: KonvaEventObject<DragEvent>) => this.props.drag(e, node)}\r\n                />\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default UINode","import * as React from 'react'\r\nimport { Line } from 'react-konva/lib/ReactKonvaCore'\r\nimport Konva from 'konva'\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { consts } from 'src/static';\r\nimport { UI } from 'src/utils';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\ninterface UIBeamProps {\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, beam: Beam): void\r\n    mode: UIModes,\r\n    selected: boolean,\r\n    beam: Beam\r\n}\r\n\r\nclass UIBeam extends React.Component<UIBeamProps>{\r\n\r\n    shouldComponentUpdate(nextProps: UIBeamProps) {\r\n        const { beam, mode, selected } = this.props\r\n        return (\r\n            nextProps.beam !== beam ||\r\n            nextProps.mode !== mode ||\r\n            nextProps.selected !== selected\r\n        )\r\n    }\r\n    render() {\r\n        const { onClick, mode, selected, beam } = this.props\r\n        const size = consts.UI_beamSize\r\n        return (\r\n            <Line\r\n                points={[\r\n                    beam.x,\r\n                    beam.y,\r\n                    beam.endX,\r\n                    beam.endY\r\n                ]}\r\n                stroke={UI.getBeamColor(beam)}\r\n                strokeWidth={size}\r\n                shadowBlur={selected ? 8 : 2}\r\n\r\n                hitStrokeWidth={size * 4}\r\n                onClick={(e: any) => onClick(e, beam)}\r\n                onMouseEnter={(e: any) => UI.beamMouseEnter(e,beam, mode)}\r\n                onMouseLeave={(e: any) => UI.beamMouseLeave(e)}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\nexport default UIBeam","import * as React from 'react'\r\nimport { Line } from 'react-konva'\r\n\r\nexport interface UIGridProps {\r\n    widthCell: number,\r\n    heightCell: number,\r\n    heightBox: number,\r\n    widthBox: number\r\n\r\n}\r\n\r\nconst UIGrid: React.FC<UIGridProps> = ({ widthCell, heightCell, heightBox, widthBox }) => {\r\n    const countOfX: number = widthBox / widthCell\r\n    const countOfY: number = heightBox / heightCell\r\n    const viewRows = () => {\r\n        const rows = []\r\n        for (let index = 0; index < countOfY; index++) {\r\n            rows.push(<Line\r\n                points={[\r\n                    0,\r\n                    index * heightCell,\r\n                    widthBox,\r\n                    index * heightCell,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n        }\r\n        return rows\r\n    }\r\n\r\n    const viewColumns = () => {\r\n        const columns = []\r\n        for (let index = 0; index < countOfX; index++) {\r\n\r\n            columns.push(<Line\r\n                points={[\r\n                    index*widthCell,\r\n                    0,\r\n                    index*widthCell,\r\n                    heightBox,\r\n\r\n                ]}\r\n                stroke=\"#ddd\"\r\n                strokeWidth={1}\r\n                key={index}\r\n            />)\r\n\r\n        }\r\n        return columns\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {viewColumns()}\r\n            {viewRows()}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UIGrid","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Stage, Layer, } from 'react-konva';\r\nimport {  Entity } from 'src/models/Farm/ModelEntity';\r\nimport Konva from 'konva';\r\nimport UIGrid from './UIGrid';\r\nimport { consts } from 'src/static';\r\nimport ScrollBar from 'react-custom-scrollbars';\r\nimport { FarmNode } from 'src/models/Farm/ModelNode';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { Force } from 'src/models/Farm/ModelForce';\r\nimport { UIBeam, UINode } from '..';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n        flexGrow: 1,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n    stage: {\r\n        backgroundColor: \"#fff\",\r\n    }\r\n})\r\n\r\n\r\nexport interface UIStageProps extends WithStyles<typeof styles> {\r\n    nodes: FarmNode[],\r\n    beams: Beam[],\r\n    forces: Force[],\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    stageHeight: number,\r\n    stageWidth: number,\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity): void,\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent | TouchEvent>): void,\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity): void,\r\n    stage: React.RefObject<Stage & Konva.Stage>\r\n}\r\n\r\nconst UIStage: React.FC<UIStageProps> = ({ classes, stage, stageHeight, stageWidth, onClick, onMouseMove, onDrag, forces,beams,nodes, uiMode, selectedEntity }) => {\r\n    return (\r\n        <ScrollBar \r\n            className={classes.root}\r\n            autoHide>\r\n            <Stage\r\n                height={stageHeight}\r\n                width={stageWidth}\r\n                style={{height:stageHeight, width:stageWidth}}\r\n                className={classes.stage}\r\n                onClick={onClick}\r\n                onMouseMove={onMouseMove}\r\n                ref={stage}\r\n            >\r\n\r\n                <Layer className=\"layer\" >\r\n                    <UIGrid\r\n                        heightCell={consts.UI_cellSize}\r\n                        widthCell={consts.UI_cellSize}\r\n                        heightBox={stageHeight}\r\n                        widthBox={stageWidth}\r\n                    />\r\n                    {beams.map(beam => (\r\n                        <UIBeam\r\n                            key={beam.id}\r\n                            beam={beam}\r\n                            mode={uiMode}\r\n                            onClick={onClick}\r\n                            selected={selectedEntity === beam}\r\n                        />\r\n                    ))}\r\n\r\n                    {nodes.map(node => (\r\n                        <UINode\r\n                            key={node.id}\r\n                            node={node}\r\n                            mode={uiMode}\r\n                            drag={onDrag}\r\n                            onClick={onClick}\r\n                            selected={selectedEntity === node}\r\n                        />\r\n                    ))}\r\n                </Layer>\r\n            </Stage>\r\n        </ScrollBar>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIStage)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Fab, Drawer, Tooltip, Typography, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toogleIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(10),\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    title:{\r\n        padding:theme.spacing(1)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\n\r\n\r\n\r\ninterface SidebarProps extends WithStyles<typeof styles> {\r\n    anchor: 'left' | 'right',\r\n    title? : string,\r\n    btnIcon : JSX.Element\r\n}\r\n\r\ninterface SidebarState {\r\n    open: boolean,\r\n    viewTooltip: boolean\r\n\r\n}\r\n\r\nclass Sidebar extends React.PureComponent<SidebarProps, SidebarState>{\r\n    constructor(props: SidebarProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            viewTooltip: false\r\n        }\r\n        this.switchDrawer = this.switchDrawer.bind(this)\r\n    }\r\n    switchDrawer() {\r\n        this.setState(\r\n            {\r\n                open: !this.state.open,\r\n                viewTooltip: false\r\n            }\r\n        )\r\n    }\r\n    \r\n    changeViewtooltip(flag: boolean) {\r\n        this.setState({ viewTooltip: flag })\r\n    }\r\n    render() {\r\n        const { classes,children, title, btnIcon, anchor } = this.props\r\n        const { open, viewTooltip } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    open={open}\r\n                    anchor={anchor}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    \r\n                    <Typography \r\n                        variant='body2'\r\n                        align=\"center\"\r\n                        className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider/>\r\n                    {children}\r\n                </Drawer>\r\n                <Tooltip\r\n                    title={title}\r\n                    open={title !== undefined && viewTooltip && !open}\r\n                    onOpen={() => this.changeViewtooltip(true)}\r\n                    onClose={() => this.changeViewtooltip(false)}>\r\n                    <Fab\r\n                        style={{\r\n                            left: anchor === 'left' ? !open ? 15 : drawerWidth + 15 : \"auto\",\r\n                            \r\n                            right: anchor === 'right' ? !open ? 15 : drawerWidth + 15 : \"auto\"\r\n                        }}\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={classes.toogleIcon}\r\n                        onClick={this.switchDrawer}\r\n                    >\r\n                        {open ? <CloseIcon /> : btnIcon}\r\n                    </Fab>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import * as React from 'react'\r\nimport clsx from 'clsx'\r\nimport { Theme, createStyles, withStyles, AppBar, Toolbar } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { consts } from 'src/static';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBarProps } from '@material-ui/core/AppBar';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n        marginRight: theme.spacing(4),\r\n        marginLeft: theme.spacing(2),\r\n        '& img': {\r\n            width: 50,\r\n            height: 'auto'\r\n        }\r\n    }\r\n})\r\n\r\nexport interface UIToolBarProps extends WithStyles<typeof styles>, React.HTMLAttributes<HTMLDivElement> {\r\n    color?: AppBarProps['color'],\r\n    position?: AppBarProps['position'],\r\n    withLogo?: boolean\r\n}\r\n\r\nconst UIAppBar: React.FC<UIToolBarProps> = ({ classes, children, className, color, position, withLogo = true }) => {\r\n    const viewLogo = () => {\r\n        if (withLogo) return ((\r\n            <Link\r\n                to={'/'}\r\n                className={classes.logo}\r\n            >\r\n                <img\r\n                    alt=\"Logo Icon\"\r\n                    src={consts.bridgeIcon_2}\r\n                />\r\n            </Link>\r\n        ))\r\n    }\r\n    return (\r\n        <AppBar\r\n            position={position || 'fixed'}\r\n            className={clsx(classes.appBar, className)}\r\n            color={color || 'primary'}>\r\n            <Toolbar >\r\n                {viewLogo()}\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIAppBar)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Tooltip } from '@material-ui/core';\r\nimport {  ToggleButton } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { ToggleButtonProps } from '@material-ui/lab/ToggleButton';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    btn: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        borderRadius: '50% !important',\r\n        border: `1px solid ${fade(theme.palette.action.active, 0.2)} !important`,\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n\r\n        color: theme.palette.secondary.contrastText,\r\n        backgroundColor: theme.palette.secondary.light,\r\n\r\n        '&$selected': {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            '@media (hover: none)': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            '&$disabled': {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n        },\r\n    },\r\n    selected: {},\r\n})\r\n\r\n\r\n\r\nexport interface MyToggleButtonProps extends WithStyles<typeof styles> {\r\n    selected: boolean,\r\n    value?:any,\r\n    name?:string,\r\n    icon:JSX.Element\r\n}\r\n\r\nconst MyToggleButton: React.FC<MyToggleButtonProps & ToggleButtonProps> = ({  selected, classes , value, name, icon, ...other}) => {\r\n    return (\r\n        <ToggleButton\r\n            key={name}\r\n            value={value}\r\n            className={clsx(\r\n                classes.btn,\r\n                {\r\n                    [classes.selected]: selected,\r\n                }\r\n            )}\r\n            {...other}\r\n            \r\n        >\r\n            <Tooltip title={name}>\r\n                {icon}\r\n            </Tooltip>\r\n        </ToggleButton>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MyToggleButton)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Button } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { AppBar } from 'src/components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root:{\r\n\r\n    },\r\n    btn:{\r\n        marginLeft:theme.spacing(2),\r\n        marginRight:theme.spacing(2)\r\n    },\r\n    grow:{\r\n        flexGrow:1\r\n    }\r\n})\r\n\r\nexport interface UIHeaderProps extends WithStyles<typeof styles> {\r\n    hundleSave?:(e: React.FormEvent<HTMLButtonElement>) => void,\r\n    hundleClear?:(e: React.FormEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nconst UIHeader: React.FC<UIHeaderProps> = (\r\n    { \r\n        classes, \r\n        hundleSave = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n        hundleClear = (e) => {alert(\"Буедет реализовано в будущем\")},\r\n    }) => {\r\n\r\n    return (\r\n        <AppBar \r\n            className={classes.root}\r\n        >\r\n            <div className={classes.grow}/>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleSave}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className={classes.btn}\r\n                onClick={hundleClear}\r\n            >\r\n                Очистить\r\n            </Button>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIHeader)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, List, ListItem, ListItemText, Collapse, ListItemIcon, Divider, Badge } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { GpsNotFixed as NodeIcon, Timeline as BeamIcon, List as TreePanelIcon, ExpandLess, ExpandMore, Brightness1 as CircleIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { Beam } from 'src/models/Farm/ModelBeam';\r\nimport { FarmNode, instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { UI } from 'src/utils';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    nested: {\r\n        paddingLeft: theme.spacing(6)\r\n    },\r\n})\r\n\r\ninterface TreePanelProps extends WithStyles<typeof styles> {\r\n    nodes: FarmNode[],\r\n    beams: Beam[]\r\n    selectedEntity: Entity | undefined\r\n    onSelect(entity: Entity): void\r\n}\r\n\r\ninterface TreeState {\r\n    tabs: Map<string, boolean>,\r\n    open: boolean,\r\n\r\n}\r\n\r\nclass UITreePanel extends React.PureComponent<TreePanelProps, TreeState>{\r\n    constructor(props: TreePanelProps) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            tabs: new Map()\r\n        }\r\n        this.openTab = this.openTab.bind(this)\r\n        this.viewListItem = this.viewListItem.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        const { tabs } = this.state\r\n        tabs.set('Узлы', false)\r\n        tabs.set('Стержни', false)\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    openTab(tab: string): void {\r\n        const { tabs } = this.state\r\n        tabs.set(tab, !tabs.get(tab))\r\n        this.setState({ tabs: new Map(tabs) })\r\n    }\r\n    viewListItem(entityArray: Entity[], title: string, icon?: JSX.Element) {\r\n        const { selectedEntity, classes, onSelect } = this.props\r\n        const { tabs } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={() => this.openTab(title)}>\r\n                    {icon && (\r\n                        <ListItemIcon>\r\n                            <Badge badgeContent={entityArray.length} color=\"secondary\">\r\n                                {icon}\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                    )}\r\n                    <ListItemText primary={title} />\r\n                    {tabs.get(title) ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={tabs.get(title)} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {entityArray.map(item => (\r\n                            <ListItem\r\n                                button\r\n                                className={classes.nested}\r\n                                key={item.id}\r\n                                selected={selectedEntity === item}\r\n                                onClick={(e) => onSelect(item)}\r\n                            >\r\n                                {instanceOfNode(item) && (\r\n                                    <ListItemIcon>\r\n                                        <CircleIcon style={{color:UI.getNodeColor(item)}}/>\r\n                                    </ListItemIcon>\r\n                                )}\r\n                                <ListItemText primary={item.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n                <Divider />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render() {\r\n        const { nodes, beams } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"left\"\r\n                title=\"Структура проекта\"\r\n                btnIcon={(<TreePanelIcon />)}\r\n            >\r\n\r\n                {this.viewListItem(nodes, 'Узлы', (<NodeIcon />))}\r\n                {this.viewListItem(beams, 'Стержни', (<BeamIcon />))}\r\n\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UITreePanel)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles, Typography, IconButton, Box, Divider } from '@material-ui/core';\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { Delete as DeleteIcon, Info as InfoEntityIcon } from '@material-ui/icons';\r\nimport { Sidebar } from 'src/components';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    subTitle: {\r\n        fontSize: 14,\r\n    },\r\n    title: {\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\ninterface EntityInfoProps extends WithStyles<typeof styles> {\r\n    entity?: Entity | undefined,\r\n    onDelete(entity: Entity): void\r\n}\r\n\r\ninterface EntityInfoState {\r\n\r\n}\r\n\r\nclass UIEntityInfo extends React.PureComponent<EntityInfoProps, EntityInfoState>{\r\n    constructor(props: EntityInfoProps) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    getTypeStr(entity: Entity): string {\r\n        if (instanceOfNode(entity)) return \"Узел\"\r\n        else if (instanceOfBeam(entity)) return \"Стержень\"\r\n        else return \"Элемент\"\r\n    }\r\n    viewInfo(entity: Entity | undefined) {\r\n        const { classes, onDelete } = this.props\r\n        if (entity) return (\r\n            <Box className={classes.root}>\r\n                <Typography className={classes.subTitle} color=\"textSecondary\" gutterBottom>\r\n                    {this.getTypeStr(entity)}\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    {entity.name}\r\n                </Typography>\r\n                <IconButton aria-label=\"Delete\" onClick={() => onDelete(entity)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Box>\r\n        )\r\n    }\r\n    render() {\r\n        const { entity } = this.props\r\n        return (\r\n            <Sidebar\r\n                anchor=\"right\"\r\n                title=\"Информация о выбранном объекте\"\r\n                btnIcon={(<InfoEntityIcon />)}\r\n            >\r\n                {this.viewInfo(entity)}\r\n                <Divider />\r\n            </Sidebar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(UIEntityInfo)","import * as React from 'react'\r\nimport { Theme, createStyles, withStyles,  Paper } from '@material-ui/core';\r\nimport { ToggleButtonGroup } from '@material-ui/lab'\r\nimport { WithStyles } from '@material-ui/styles';\r\nimport { ZoomOutMap as MoveIcon, MyLocation as AddNodeIcon, Delete as DeleteIcon, Power as ConnectIcon } from '@material-ui/icons';\r\n\r\nimport { fade } from '@material-ui/core/styles';\r\nimport { MyToggleButton } from 'src/components';\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        padding: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        left: \"50%\",\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: fade(theme.palette.primary.light, 0.4),\r\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        '&:hover':{\r\n            backgroundColor: theme.palette.primary.light,\r\n        }\r\n    },\r\n    modsBtnGroup: {\r\n        borderRadius: 0,\r\n        backgroundColor: 'transparent'\r\n    }\r\n})\r\n\r\n\r\nexport interface IMode {\r\n    name: string,\r\n    mod: UIModes\r\n    icon: JSX.Element\r\n}\r\n\r\n\r\n\r\nexport interface UIToolPanelProps extends WithStyles<typeof styles> {\r\n    selected: UIModes\r\n    onSelect(mod: UIModes): void\r\n}\r\n\r\nconst UIToolPanel: React.FC<UIToolPanelProps> = ({ onSelect, selected, classes }) => {\r\n    const mods: IMode[] = [\r\n        {\r\n            name: \"Перемещение\",\r\n            mod: UIModes.move,\r\n            icon: (<MoveIcon />)\r\n        },\r\n        {\r\n            name: \"Добавить узел\",\r\n            mod: UIModes.addNode,\r\n            icon: (<AddNodeIcon />)\r\n        },\r\n        {\r\n            name: \"Соединить узлы\",\r\n            mod: UIModes.addBeam,\r\n            icon: (<ConnectIcon />)\r\n        },\r\n        {\r\n            name: \"Удалить\",\r\n            mod: UIModes.delete,\r\n            icon: (<DeleteIcon />)\r\n        }\r\n    ]\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <ToggleButtonGroup\r\n                value={selected}\r\n                exclusive\r\n                onChange={(e, value) => onSelect(value)}\r\n                size=\"medium\"\r\n                className={classes.modsBtnGroup}\r\n            >\r\n                {mods.map(item => (\r\n                    <MyToggleButton\r\n                        key={item.mod}\r\n                        value={item.mod}\r\n                        selected={item.mod === selected}\r\n                        icon={item.icon}\r\n                        name={item.name}\r\n                        \r\n                    />\r\n                ))}\r\n            </ToggleButtonGroup>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UIToolPanel)","import * as React from 'react'\r\nimport KeyHandler from 'react-key-handler'\r\nimport Konva from \"konva\"\r\nimport { Stage } from \"react-konva\"\r\nimport { createStyles, Theme, WithStyles, withStyles, Box } from '@material-ui/core';\r\nimport { IFarmStore } from './store/farmReducer';\r\nimport { UITreePanel, UIEntityInfo, UIStage, UIHeader, UIToolPanel } from './components';\r\nimport { MyMath } from 'src/utils';\r\nimport Stats from 'react-stats'\r\nimport { instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\nimport { Entity } from 'src/models/Farm/ModelEntity';\r\nimport { instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { FarmContainerClass } from './index'\r\nimport { UIModes } from 'src/utils/UI';\r\n\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        background: theme.palette.background.default,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    stageBox: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n\r\nexport interface UIFarmProps extends IFarmStore, WithStyles<typeof styles> {\r\n    addNode: typeof FarmContainerClass.prototype.addNode,\r\n    addBeam: typeof FarmContainerClass.prototype.addBeam,\r\n    moveNode: typeof FarmContainerClass.prototype.moveNode,\r\n    moveBeam: typeof FarmContainerClass.prototype.moveBeam,\r\n    connectBeamToNode: typeof FarmContainerClass.prototype.connectBeamToNode,\r\n    deleteEntity: typeof FarmContainerClass.prototype.deleteEntity\r\n    defautlFarm:typeof FarmContainerClass.prototype.defautlFarm\r\n}\r\n\r\nexport interface UIFarmState {\r\n    stageWidth: number,\r\n    stageHeight: number,\r\n    uiMode: UIModes,\r\n    selectedEntity: Entity | undefined,\r\n    paintEntity: Entity | undefined\r\n}\r\n\r\n\r\n\r\nclass UIFarm extends React.Component<UIFarmProps, UIFarmState>{\r\n    private stage: React.RefObject<Stage & Konva.Stage>\r\n    constructor(props: UIFarmProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stageHeight: 3000,\r\n            stageWidth: 3000,\r\n            uiMode: UIModes.none,\r\n            selectedEntity: undefined,\r\n            paintEntity: undefined,\r\n\r\n        }\r\n\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onDrag = this.onDrag.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.onKeyHandle = this.onKeyHandle.bind(this)\r\n        this._setStageSize = this._setStageSize.bind(this)\r\n        this.selectEntity = this.selectEntity.bind(this)\r\n        this.clearFarm = this.clearFarm.bind(this)\r\n        this.deleteEntity = this.deleteEntity.bind(this)\r\n\r\n        this.stage = React.createRef();\r\n    }\r\n    componentWillMount() {\r\n        this._setStageSize()\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this._setStageSize)\r\n        const { current: stage } = this.stage\r\n        if (stage) {\r\n            const container: HTMLDivElement = stage.attrs.container.parentElement\r\n            if (container) {\r\n                container.scrollTop = (container.scrollHeight - container.offsetHeight) / 2\r\n                container.scrollLeft = (container.scrollWidth - container.offsetWidth) / 2\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this._setStageSize)\r\n    }\r\n\r\n\r\n    onClick(e: Konva.KonvaEventObject<MouseEvent>, entity?: Entity) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const isEmptyPlace = e.target.getStage() === e.target\r\n        e.evt.preventDefault()\r\n        if (e.evt.button === 0) {\r\n            switch (uiMode) {\r\n                case UIModes.none: {\r\n                    if (!isEmptyPlace) {\r\n                        this.selectEntity(entity);\r\n                    } else this.setState({ selectedEntity: undefined })\r\n\r\n                    break;\r\n                }\r\n                case UIModes.addNode: {\r\n                    if (isEmptyPlace) {\r\n                        const { layerX, layerY } = e.evt\r\n                        const cellX = MyMath.cellX(layerX)\r\n                        const cellY = MyMath.cellX(layerY)\r\n                        this.props.addNode(cellX, cellY)\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeam: {\r\n                    if (!isEmptyPlace && instanceOfNode(entity)) {\r\n\r\n                        const beam = this.props.addBeam({\r\n                            x:entity.x,\r\n                            y:entity.y\r\n                        })\r\n                        if (instanceOfBeam(beam)) {\r\n                            const connectedBeam = this.props.connectBeamToNode(entity, beam, 'start')\r\n                            console.log(\"PAM\", connectedBeam);\r\n                            \r\n                            if(instanceOfBeam(connectedBeam))\r\n                                this.setState({\r\n                                    paintEntity: connectedBeam,\r\n                                    uiMode: UIModes.addBeamStart\r\n                                })\r\n                            else this.props.deleteEntity(beam.id)\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.addBeamStart: {\r\n                    if (!isEmptyPlace && instanceOfNode(entity) && instanceOfBeam(paintEntity)) {\r\n                        if (this.props.connectBeamToNode(entity, paintEntity, 'end'))\r\n                            this.setState({\r\n                                uiMode: UIModes.addBeam,\r\n                                paintEntity: undefined\r\n                            })\r\n                    }\r\n                    break;\r\n                }\r\n                case UIModes.delete: {\r\n                    if (!isEmptyPlace && entity) {\r\n                        this.deleteEntity(entity)\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        if (isEmptyPlace) this.setState({ selectedEntity: undefined })\r\n\r\n    }\r\n    onMouseMove(e: Konva.KonvaEventObject<MouseEvent>) {\r\n        const { uiMode, paintEntity } = this.state\r\n        const { layerX, layerY } = e.evt\r\n        switch (uiMode) {\r\n            case UIModes.addBeamStart: {\r\n                if (e.target.getStage()) {\r\n                    if (paintEntity && instanceOfBeam(paintEntity)) {\r\n                        this.props.moveBeam(paintEntity, layerX, layerY)\r\n                    } else this.setState({ uiMode: UIModes.addBeam })\r\n                }\r\n                break;\r\n            }\r\n            case UIModes.delete: {\r\n                const stage: Stage & Konva.Stage = e.target.getStage()\r\n                if (stage === e.target) {\r\n                    stage.container().style.cursor = 'default'\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onDrag(e: Konva.KonvaEventObject<DragEvent>, entity: Entity) {\r\n        const { uiMode } = this.state\r\n        switch (uiMode) {\r\n            case UIModes.move: {\r\n                if (instanceOfNode(entity)) {\r\n                    if (e.evt.defaultPrevented) {\r\n                        const { layerX, layerY } = e.evt\r\n                        this.props.moveNode(entity, MyMath.cellX(layerX), MyMath.cellY(layerY))\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    onKeyHandle(e: KeyboardEvent) {\r\n        switch (e.key) {\r\n            case \"Escape\": {\r\n                this.deletePaintEntity()\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    setSelectedMode(mode: UIModes) {\r\n        if(this.state.paintEntity) \r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            uiMode: mode || 0,\r\n            paintEntity: undefined\r\n        })\r\n    }\r\n\r\n    _setStageSize(e?: UIEvent) {\r\n        this.setState({\r\n            stageHeight: window.innerHeight * 1.5,\r\n            stageWidth: window.innerWidth * 1.5\r\n        })\r\n    }\r\n    selectEntity(entity: Entity | undefined) {\r\n        if (entity) this.setState({ selectedEntity: entity })\r\n    }\r\n    clearFarm(): void {\r\n        if (window.confirm('Вы уверены, что хотите очистить холст?')) {\r\n            this.props.defautlFarm()\r\n        }\r\n    }\r\n    deletePaintEntity() {\r\n        if (this.state.paintEntity)\r\n            this.props.deleteEntity(this.state.paintEntity.id)\r\n        this.setState({\r\n            paintEntity: undefined\r\n        })\r\n    }\r\n    deleteEntity(entity: Entity) {\r\n        if (this.state.selectedEntity && this.state.selectedEntity.id === entity.id)\r\n            this.setState({\r\n                selectedEntity: undefined\r\n            })\r\n        this.props.deleteEntity(entity.id)\r\n    }\r\n    render() {\r\n        const { stageHeight, stageWidth, uiMode, selectedEntity } = this.state\r\n        const { classes, nodes, beams, forces } = this.props\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Stats.FPSStats isActive={true} />\r\n                <KeyHandler\r\n                    keyEventName={\"keyup\"}\r\n                    keyValue={\"Escape\"}\r\n                    onKeyHandle={this.onKeyHandle}\r\n                />\r\n                <UIHeader\r\n                    hundleClear={this.clearFarm} />\r\n\r\n                <div className={classes.toolbar} />\r\n                <Box className={classes.stageBox}>\r\n                    <div className={classes.toolbar} />\r\n\r\n                    <UITreePanel\r\n                        nodes={nodes}\r\n                        beams={beams}\r\n                        selectedEntity={selectedEntity}\r\n                        onSelect={this.selectEntity}\r\n                    />\r\n\r\n                    <UIStage\r\n                        onClick={this.onClick}\r\n                        onDrag={this.onDrag}\r\n                        onMouseMove={this.onMouseMove}\r\n                        stageHeight={stageHeight}\r\n                        stageWidth={stageWidth}\r\n                        nodes={nodes}\r\n                        beams={beams}\r\n                        forces={forces}\r\n                        stage={this.stage}\r\n                        selectedEntity={selectedEntity}\r\n                        uiMode={uiMode}\r\n                    />\r\n                    <UIEntityInfo\r\n                        entity={selectedEntity}\r\n                        onDelete={this.deleteEntity} />\r\n                </Box>\r\n\r\n                <UIToolPanel\r\n                    selected={uiMode}\r\n                    onSelect={this.setSelectedMode.bind(this)} />\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UIFarm)","import * as React from 'react'\r\nimport UIFarm from './farm'\r\nimport { FarmNode, INode, createNode, instanceOfNode } from 'src/models/Farm/ModelNode';\r\nimport { Beam, IBeam, createBeam, instanceOfBeam } from 'src/models/Farm/ModelBeam';\r\nimport { Force, createForce, IForce, instanceOfForce } from 'src/models/Farm/ModelForce';\r\nimport uuid from 'uuid'\r\nimport testFarm from './_testFarm'\r\n\r\ninterface State {\r\n    nodes: FarmNode[],\r\n    beams: Beam[],\r\n    forces: Force[]\r\n}\r\ninterface Props {\r\n\r\n}\r\nexport class FarmContainerClass extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            nodes:[],\r\n            beams:[],\r\n            forces:[]\r\n        }\r\n        this.defautlFarm = this.defautlFarm.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        \r\n        this.defautlFarm()\r\n    }\r\n    addNode = (x: number, y: number, options?: INode) => {\r\n        if(this.state.nodes.length > 12) return false\r\n        const oldNode = this.state.nodes.find(item => item.x === x && item.y === y)\r\n        if (oldNode) return false\r\n        const id = uuid()\r\n        if (!id) return false\r\n        const name = (this.state.nodes.length + 1)+\"\"\r\n        const node = createNode({\r\n            ...options,\r\n            name:options ? options.name || name : name, \r\n            id,\r\n            x,\r\n            y\r\n        })\r\n        this.setState({\r\n            nodes: [...this.state.nodes, node]\r\n        })\r\n        return node\r\n    }\r\n    addBeam = (options?: IBeam) => {\r\n        if(this.state.beams.length > 36) return false\r\n\r\n        const id = uuid()\r\n        if (!id) return false\r\n        const beam = createBeam({\r\n            ...options,\r\n            id,\r\n        })\r\n        this.setState({\r\n            beams: [...this.state.beams, beam]\r\n        })\r\n        return beam\r\n    }\r\n    addForce = (options?: IForce) => {\r\n        const id = uuid()\r\n        if (!id) return false\r\n        const force = createForce({\r\n            ...options,\r\n            id,\r\n        })\r\n        this.setState({\r\n            forces: [...this.state.forces, force]\r\n        })\r\n        return force\r\n    }\r\n\r\n    connectBeamToNode = (_node: FarmNode, _beam: Beam, place: 'start' | 'end') => {\r\n\r\n        const node = createNode(_node)\r\n        const beam = createBeam(_beam)\r\n\r\n        switch (place) {\r\n            case 'start': {\r\n\r\n                beam.startConnectedNodeID = node.id\r\n                node.beamsID.push(beam.id)\r\n                \r\n                beam.x = node.x\r\n                beam.y = node.y\r\n                this.setState(state => ({\r\n                    nodes: state.nodes.map(item => {\r\n                        if (item.id === node.id) return node\r\n                        return item\r\n                    }),\r\n                    beams: state.beams.map(item => {                        \r\n                        if (item.id === beam.id) return beam\r\n                        return item\r\n                    })\r\n                }))\r\n                console.log(...this.state.beams);\r\n                \r\n                return beam;\r\n            }\r\n            case 'end': {\r\n                const beamsOfNode = this.state.beams.filter(item => (node && node.beamsID.includes(item.id)))\r\n                const oldBeam = beamsOfNode.find(item =>\r\n                    (node && beam && (\r\n                        (item.startConnectedNodeID === beam.startConnectedNodeID && item.endConnectedNodeID === node.id) ||\r\n                        (item.startConnectedNodeID === node.id && item.endConnectedNodeID === beam.startConnectedNodeID) ||\r\n                        (item.id === beam.id && item.startConnectedNodeID === node.id))\r\n                    )\r\n                )\r\n\r\n                if (!oldBeam) {\r\n\r\n                    node.beamsID.push(beam.id)\r\n                    beam.endConnectedNodeID = node.id\r\n                    beam.endX = node.x\r\n                    beam.endY = node.y\r\n                    this.setState(state => ({\r\n                        nodes: state.nodes.map(item => {\r\n                            if (item.id === node.id) return node\r\n                            return item\r\n                        }),\r\n                        beams: state.beams.map(item => {\r\n                            if (item.id === beam.id) return beam\r\n                            return item\r\n                        })\r\n                    }))\r\n                    return true\r\n                }\r\n                return false\r\n            }\r\n            default: return false\r\n        }\r\n    }\r\n    addForceToNode = (node: FarmNode, options?: IForce) => {\r\n        let force: Force = createForce({\r\n            ...options,\r\n            nodeID: node.id,\r\n        })\r\n\r\n        if (force.angle === 0) node.forceX = force\r\n        else node.forceY = force\r\n        this.setState(state => ({\r\n            nodes: state.nodes.map(item => {\r\n                if (node && item.id === node.id) return node\r\n                return item\r\n            }),\r\n            forces: [...state.forces, force]\r\n        }))\r\n        return force\r\n\r\n    }\r\n    moveNode = (_node: FarmNode, x: number, y: number, ) => {\r\n\r\n        if (_node.isStatic) return false\r\n        const oldNode = this.state.nodes.find(item => item.x === x && item.y === y)\r\n        if (!oldNode) {\r\n            const node = createNode({\r\n                ..._node,\r\n                x,\r\n                y\r\n            })\r\n            const beamsOfNode = this.state.beams.filter(item => (node && node.beamsID.includes(item.id)))\r\n            beamsOfNode.forEach(item => {\r\n                if (node) {\r\n                    const beam = createBeam(item)\r\n                    if (beam.startConnectedNodeID === node.id) {\r\n                        beam.x = x\r\n                        beam.y = y\r\n\r\n                    } else if (item.endConnectedNodeID === node.id) {\r\n                        beam.endX = x\r\n                        beam.endY = y\r\n                    }\r\n                    this.setState(state => ({\r\n                        beams: state.beams.map(item => {\r\n                            if (item.id === beam.id) return beam\r\n                            return item\r\n                        })\r\n                    }))\r\n                }\r\n            })\r\n            this.setState(state => ({\r\n                nodes: state.nodes.map(item => {\r\n                    if (item.id === node.id) return node\r\n                    return item\r\n                }),\r\n            }))\r\n\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    moveBeam = (beam: Beam, x: number, y: number, place: 'start' | 'end' = 'end') => {\r\n\r\n        beam = createBeam(beam)\r\n        if (place === 'start') {\r\n            beam.x = x\r\n            beam.y = y\r\n        }\r\n        else {\r\n            beam.endX = x\r\n            beam.endY = y\r\n        }\r\n        \r\n        this.setState(state => ({\r\n            beams: state.beams.map(item => {\r\n                if (beam && item.id === beam.id) return beam\r\n                return item\r\n            })\r\n        }))\r\n        return true\r\n    }\r\n\r\n    deleteEntity = (id: string) => {\r\n        let entity: Beam | FarmNode | Force | undefined =\r\n            this.state.beams.find(item => item.id === id) ||\r\n            this.state.nodes.find(item => item.id === id) ||\r\n            this.state.forces.find(item => item.id === id)\r\n        if (instanceOfNode(entity)) {\r\n            if (entity.isStatic) return false\r\n            const beamsOfNode = this.state.beams.filter(item => (instanceOfNode(entity) && entity.beamsID.includes(item.id)))            \r\n            beamsOfNode.forEach(beam => {\r\n                if (instanceOfNode(entity)) {\r\n                    let _node: FarmNode | undefined\r\n                    if (beam.startConnectedNodeID === entity.id) {\r\n                        _node = this.state.nodes.find(item => item.id === beam.endConnectedNodeID)\r\n                    }\r\n                    else {\r\n                        _node = this.state.nodes.find(item => item.id === beam.startConnectedNodeID)\r\n                    }\r\n                    if (_node) {\r\n                        _node = createNode(_node)\r\n                        _node.beamsID = _node.beamsID.filter(id => id !== beam.id)\r\n                        this.setState(state => ({\r\n                            nodes: state.nodes.map(item => {\r\n                                if (_node && item.id === _node.id) return _node\r\n                                return item\r\n                            }),\r\n                        }))\r\n                    }\r\n                    this.setState(state => ({\r\n                        beams: state.beams.filter(i => i.id !== beam.id)\r\n                    }))\r\n                }\r\n            })\r\n            if (entity.forceX) this.setState(state => ({\r\n                forces: state.forces.filter(i => (instanceOfNode(entity) && instanceOfForce(entity.forceX) && i.id !== entity.forceX.id))\r\n            }))\r\n            if (entity.forceY) this.setState(state => ({\r\n                forces: state.forces.filter(i => (instanceOfNode(entity) && instanceOfForce(entity.forceY) && i.id !== entity.forceY.id))\r\n            }))\r\n            this.setState(state => ({\r\n                nodes: state.nodes.filter(i => (instanceOfNode(entity) && i.id !== entity.id)).map((node,index) => ({...node, name:(index + 1)+\"\"}))\r\n            }))\r\n            return true\r\n\r\n        } else if (instanceOfBeam(entity)) {\r\n            [entity.startConnectedNodeID, entity.endConnectedNodeID].forEach(nodeID => {\r\n                if (nodeID && nodeID.length > 0) {\r\n                    let _node = this.state.nodes.find(item => item.id === nodeID)\r\n                    if (_node && instanceOfBeam(entity)) {\r\n                        _node = createNode(_node)\r\n                        _node.beamsID = _node.beamsID.filter(id => {\r\n                            if (entity) return id !== entity.id\r\n                            return false\r\n                        })\r\n                        this.setState(state => ({\r\n                            nodes: state.nodes.map(item => {\r\n                                if (_node && item.id === _node.id) return _node\r\n                                return item\r\n                            }),\r\n                        }))\r\n                    }\r\n                }\r\n            })\r\n            this.setState(state => ({\r\n                beams: state.beams.filter(i => (instanceOfBeam(entity) && i.id !== entity.id))\r\n            }))\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n    defautlFarm(){\r\n        const {n:nodes, b:beams,f:forces} = testFarm()\r\n        this.setState({\r\n            nodes,\r\n            beams,\r\n            forces\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <UIFarm\r\n                {...this.state}\r\n                {...this}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default FarmContainerClass","import { FarmNode, createNode } from \"src/models/Farm/ModelNode\";\r\nimport { Beam } from \"src/models/Farm/ModelBeam\";\r\nimport { Force, createForce } from \"src/models/Farm/ModelForce\";\r\n\r\nexport default () => {\r\n    const n : FarmNode[] = []\r\n    const b : Beam[] = []\r\n    const f : Force[] = []\r\n    let force : Force\r\n    let node  = createNode({\r\n        x:1000,\r\n        y:560,\r\n        isStatic:true,\r\n        isFixed:'xy',\r\n        name:'1'\r\n    })    \r\n    n.push(node)\r\n    node = createNode({\r\n        x:1200,\r\n        y:640,\r\n        isStatic:true,\r\n        name:'2'\r\n    })\r\n    force = createForce({\r\n        nodeID:node.id,\r\n        value:100,        \r\n    })\r\n    node.forceX = force\r\n    n.push(node)\r\n    f.push(force)\r\n    // if(node) {\r\n    //     farm.connectForceToNode(node, 0 , 100)\r\n    //     farm.connectForceToNode(node, 90 , 100)\r\n    // }\r\n    // node = farm.addNode(1200,760,0,\"\",true)\r\n    // if(node) {\r\n    //     farm.connectForceToNode(node, 0 , -100)\r\n    //     farm.connectForceToNode(node, 90 , -100)\r\n    // }\r\n    \r\n    return {n,b,f}\r\n}","export const navPath = {\r\n    HOME_PAGE: '/',\r\n    FARM_PAGE: '/farm'\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { consts } from 'src/static';\r\nimport { Typography, Button, Theme, createStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { navPath } from 'src/navigation';\r\nimport { WithStyles, withStyles } from '@material-ui/styles';\r\n\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot:{\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"20%\",\r\n\t\theight:'20%'\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: 40\r\n\t},\r\n\tdescripton: {\r\n\t\tpadding: 40\r\n\t},\r\n\tbtn: {\r\n\r\n\t}\r\n})\r\n\r\n\r\nconst HomeHeader = ({classes} : WithStyles<typeof styles>) => {\r\n\treturn (\r\n\t\t<header className={classes.root}>\r\n\t\t\t<img \r\n\t\t\t\tsrc={consts.bridgeIcon_2} \r\n\t\t\t\talt=\"logo\" \r\n\t\t\t\tclassName={classes.logo} \r\n\t\t\t/>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\t{consts.title}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant=\"subtitle1\" align=\"center\" className={classes.descripton}>\r\n\t\t\t\t{consts.description}\r\n\t\t\t</Typography>\r\n\t\t\t<Button\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={navPath.FARM_PAGE}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\tПоехали\r\n\t\t\t</Button>\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(HomeHeader)","import * as React from 'react'\r\nimport { IHomeStore } from './homeReducer';\r\nimport { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core'\r\nimport { HomeHeader } from './components';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\troot: {\r\n\t\twidth:'100%',\r\n\t\tminHeight:'100%',\r\n\t\tdisplay:'block',\r\n\t\tbackground: theme.palette.background.default,\r\n\t\tpadding: theme.spacing(4)\r\n\t}\r\n})\r\n\r\nexport interface IHomeProps extends IHomeStore, WithStyles<typeof styles> {\r\n\tsetTitle: (title: string) => void,\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps> {\r\n\trender() {\r\n\t\tconst { classes } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<HomeHeader/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Home)","import { HomeActions, SET_TITLE } from \"./homeTypes\";\r\n\r\nexport const setTitle = (title :string) : HomeActions => ({\r\n    type:SET_TITLE,\r\n    title\r\n})","import {connect} from 'react-redux'\r\nimport Home from './home'\r\nimport { AppState } from 'src/store';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport * as homeActions from './homeActions';\r\n\r\nconst mapStateToProps =  ({home}: AppState) => ({\r\n    title:home.title,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({...homeActions}, dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import * as React from 'react';\nimport { UIFarm, Home } from './pages'\nimport { navPath } from './navigation'\nimport { Switch, Route } from 'react-router-dom';\nimport Helment from 'react-helmet'\nimport * as consts from './static/const';\nimport {CssBaseline} from '@material-ui/core';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/styles';\n\n\ninterface IAppProps {\n\n}\n\n\nclass App extends React.Component<IAppProps> {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helment\n\t\t\t\t\thtmlAttributes={{\"leng\":\"en\"}}\n\t\t\t\t\ttitleTemplate=\"Truss - %s\"\n\t\t\t\t\tdefaultTitle={consts.title}\n\t\t\t\t\tlink={[\n\t\t\t\t\t\t{\"rel\":\"shortcut icon\", \"href\":consts.bridgeIcon_2},\n\t\t\t\t\t\t{\"rel\":\"image_src\", \"href\":consts.airBridge},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/css?family=Roboto:300,400,500'},\n\t\t\t\t\t\t{\"rel\":\"stylesheet\", \"href\":'https://fonts.googleapis.com/icon?family=Material+Icons'}\n\t\t\t\t\t]}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{\"charSet\":\"utf-8\"},\n\t\t\t\t\t\t{\"name\": \"viewport\", \"content\": \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" },\n\t\t\t\t\t\t{\"name\": \"theme-color\", \"content\": \"#000000\" },\n\t\t\t\t\t\t{\"name\": \"description\", \"content\": consts.description },\n\t\t\t\t\t\t{\"property\": \"og:type\", \"content\": \"website\"},\n\t\t\t\t\t\t{\"property\": \"og:title\", \"content\": consts.title},\n\t\t\t\t\t\t{\"property\": \"og:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"vk:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"twitter:image\", \"content\": consts.airBridge},\n\t\t\t\t\t\t{\"property\": \"og:url\", \"content\": consts.url},\n\t\t\t\t\t]}\n\n\t\t\t\t/>\n\t\t\t\t<CssBaseline/>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={navPath.HOME_PAGE} component={Home} exact />\n\t\t\t\t\t\t<Route path={navPath.FARM_PAGE} component={UIFarm} />\n\t\t\t\t\t</Switch>\n\n\t\t\t\t</ThemeProvider>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { history } from './utils';\nimport store from './store';\nimport { HashRouter, Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nconst isGitHubPages = process.env.REACT_APP_GHP || 'false';\n\nconst Root = () => {    \n    if (isGitHubPages === 'true') return (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    )\n    else return (\n        <Router history={history}>\n            <App />\n        </Router>\n    )\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root/>\n    </Provider>,\n    document.getElementById('root')\n);","// import favicon from './favicon.ico'\r\nimport path from 'path'\r\nimport ogImage from './ogImage.png'\r\nimport bridgeIcon_1 from './icon.png'\r\nimport bridgeIcon_2 from './bridge.png'\r\nimport airBridge from './airBridge.png'\r\n\r\nimport FixationIcon from './fixation.svg'\r\n\r\n// Strings\r\nexport const url = process.env.PUBLIC_URL\r\nexport const title = \"Truss - ферма для каждого\"\r\nexport const description = \"Ферма (farm или truss) — стержневая система в строительной механике, остающаяся геометрически неизменяемой после замены её жёстких узлов шарнирными.\"\r\nexport const favicon = path.resolve(__dirname,\"favicon.ico\")\r\n\r\n// UI\r\nexport const UI_cellSize = 40\r\nexport const UI_nodeSize = 15\r\nexport const UI_beamSize = 6\r\n\r\n\r\n// Images\r\nexport {\r\n    ogImage,\r\n    bridgeIcon_1,\r\n    bridgeIcon_2,\r\n    airBridge,\r\n    FixationIcon\r\n}","module.exports = __webpack_public_path__ + \"static/media/ogImage.0619e300.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.68e274b2.png\";","module.exports = __webpack_public_path__ + \"static/media/bridge.e53bced3.png\";","module.exports = __webpack_public_path__ + \"static/media/airBridge.7d581a65.png\";","module.exports = __webpack_public_path__ + \"static/media/fixation.9b63597e.svg\";"],"sourceRoot":""}